//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GorgonLibrary.Editor.ImageEditorPlugIn.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("GorgonLibrary.Editor.ImageEditorPlugIn.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap cancel_16x16 {
            get {
                object obj = ResourceManager.GetObject("cancel_16x16", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image data.
        /// </summary>
        internal static string CATEGORY_DATA {
            get {
                return ResourceManager.GetString("CATEGORY_DATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image dimensions.
        /// </summary>
        internal static string CATEGORY_DIMENSIONS {
            get {
                return ResourceManager.GetString("CATEGORY_DIMENSIONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Texture settings.
        /// </summary>
        internal static string CATEGORY_TEXTURE {
            get {
                return ResourceManager.GetString("CATEGORY_TEXTURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file &apos;{0}&apos; could not be read by the &apos;{1}&apos; codec..
        /// </summary>
        internal static string GORIMG_CODEC_CANNOT_READ {
            get {
                return ResourceManager.GetString("GORIMG_CODEC_CANNOT_READ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file &apos;{0}&apos; is not a valid image codec plug-in..
        /// </summary>
        internal static string GORIMG_CODEC_LOAD_NOT_A_PLUGIN {
            get {
                return ResourceManager.GetString("GORIMG_CODEC_LOAD_NOT_A_PLUGIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No valid image codecs were found in the file &apos;{0}&apos;..
        /// </summary>
        internal static string GORIMG_CODEC_NONE_FOUND {
            get {
                return ResourceManager.GetString("GORIMG_CODEC_NONE_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The content &apos;{0}&apos; is not an image..
        /// </summary>
        internal static string GORIMG_CONTENT_NOT_IMAGE {
            get {
                return ResourceManager.GetString("GORIMG_CONTENT_NOT_IMAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image.
        /// </summary>
        internal static string GORIMG_CONTENT_TYPE {
            get {
                return ResourceManager.GetString("GORIMG_CONTENT_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gorgon Image Editor.
        /// </summary>
        internal static string GORIMG_DESC {
            get {
                return ResourceManager.GetString("GORIMG_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The image must be less than or equal to {0} pixels wide..
        /// </summary>
        internal static string GORIMG_IMAGE_1D_SIZE_TOO_LARGE {
            get {
                return ResourceManager.GetString("GORIMG_IMAGE_1D_SIZE_TOO_LARGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The image must be less than or equal to {0}x{1} pixels..
        /// </summary>
        internal static string GORIMG_IMAGE_2D_SIZE_TOO_LARGE {
            get {
                return ResourceManager.GetString("GORIMG_IMAGE_2D_SIZE_TOO_LARGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The image must be less than or equal to {0}x{1}x{2} pixels..
        /// </summary>
        internal static string GORIMG_IMAGE_3D_SIZE_TOO_LARGE {
            get {
                return ResourceManager.GetString("GORIMG_IMAGE_3D_SIZE_TOO_LARGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Block compressed images require a size that is a multiple of 4..
        /// </summary>
        internal static string GORIMG_IMAGE_SIZE_NOT_MULTIPLE_OF_4 {
            get {
                return ResourceManager.GetString("GORIMG_IMAGE_SIZE_NOT_MULTIPLE_OF_4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The image must be at least 1x1 pixels and have 1 depth or 1 array slice..
        /// </summary>
        internal static string GORIMG_IMAGE_SIZE_TOO_SMALL {
            get {
                return ResourceManager.GetString("GORIMG_IMAGE_SIZE_TOO_SMALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no codec available that can open the file &apos;{0}&apos;..
        /// </summary>
        internal static string GORIMG_NO_CODEC {
            get {
                return ResourceManager.GetString("GORIMG_NO_CODEC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter must not be empty..
        /// </summary>
        internal static string GORIMG_PARAMETER_MUST_NOT_BE_EMPTY {
            get {
                return ResourceManager.GetString("GORIMG_PARAMETER_MUST_NOT_BE_EMPTY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The image format &apos;{0}&apos; is unknown..
        /// </summary>
        internal static string GORIMG_UNRECOGNIZED_IMAGE_FORMAT {
            get {
                return ResourceManager.GetString("GORIMG_UNRECOGNIZED_IMAGE_FORMAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The image type &apos;{0}&apos; is unknown..
        /// </summary>
        internal static string GORIMG_UNRECOGNIZED_IMAGE_TYPE {
            get {
                return ResourceManager.GetString("GORIMG_UNRECOGNIZED_IMAGE_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap image_128x128 {
            get {
                object obj = ResourceManager.GetObject("image_128x128", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap image_16x16 {
            get {
                object obj = ResourceManager.GetObject("image_16x16", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap invalid_image_128x128 {
            get {
                object obj = ResourceManager.GetObject("invalid_image_128x128", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ok_16x16 {
            get {
                object obj = ResourceManager.GetObject("ok_16x16", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Pattern {
            get {
                object obj = ResourceManager.GetObject("Pattern", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the number of array slices for this texture..
        /// </summary>
        internal static string PROP_ARRAYCOUNT_DESC {
            get {
                return ResourceManager.GetString("PROP_ARRAYCOUNT_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Array count.
        /// </summary>
        internal static string PROP_ARRAYCOUNT_NAME {
            get {
                return ResourceManager.GetString("PROP_ARRAYCOUNT_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the number of depth slices for a volume (3D) image..
        /// </summary>
        internal static string PROP_DEPTH_DESC {
            get {
                return ResourceManager.GetString("PROP_DEPTH_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image depth.
        /// </summary>
        internal static string PROP_DEPTH_NAME {
            get {
                return ResourceManager.GetString("PROP_DEPTH_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the vertical sizing of the image, in pixels..
        /// </summary>
        internal static string PROP_HEIGHT_DESC {
            get {
                return ResourceManager.GetString("PROP_HEIGHT_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image height.
        /// </summary>
        internal static string PROP_HEIGHT_NAME {
            get {
                return ResourceManager.GetString("PROP_HEIGHT_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the arrangement of the pixel components within the image data.  For codecs that support compression, block compression (BCn) formats will be available as well..
        /// </summary>
        internal static string PROP_IMAGEFORMAT_DESC {
            get {
                return ResourceManager.GetString("PROP_IMAGEFORMAT_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image format.
        /// </summary>
        internal static string PROP_IMAGEFORMAT_NAME {
            get {
                return ResourceManager.GetString("PROP_IMAGEFORMAT_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the type of image data, can be one of 1D, 2D, Cube Mapped, or 3D for codecs that support various image types..
        /// </summary>
        internal static string PROP_IMAGETYPE_DESC {
            get {
                return ResourceManager.GetString("PROP_IMAGETYPE_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type.
        /// </summary>
        internal static string PROP_IMAGETYPE_NAME {
            get {
                return ResourceManager.GetString("PROP_IMAGETYPE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the number of mip-map levels for this texture..
        /// </summary>
        internal static string PROP_MIPCOUNT_DESC {
            get {
                return ResourceManager.GetString("PROP_MIPCOUNT_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mip-map count.
        /// </summary>
        internal static string PROP_MIPCOUNT_NAME {
            get {
                return ResourceManager.GetString("PROP_MIPCOUNT_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the horizontal sizing of the image, in pixels..
        /// </summary>
        internal static string PROP_WIDTH_DESC {
            get {
                return ResourceManager.GetString("PROP_WIDTH_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image width.
        /// </summary>
        internal static string PROP_WIDTH_NAME {
            get {
                return ResourceManager.GetString("PROP_WIDTH_NAME", resourceCulture);
            }
        }
    }
}
