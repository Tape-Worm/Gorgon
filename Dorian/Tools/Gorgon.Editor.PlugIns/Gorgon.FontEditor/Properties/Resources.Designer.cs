//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.33440
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GorgonLibrary.Editor.FontEditorPlugIn.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("GorgonLibrary.Editor.FontEditorPlugIn.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap cancel_16x16 {
            get {
                object obj = ResourceManager.GetObject("cancel_16x16", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Appearance.
        /// </summary>
        internal static string CATEGORY_APPEARANCE {
            get {
                return ResourceManager.GetString("CATEGORY_APPEARANCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Design.
        /// </summary>
        internal static string CATEGORY_DESIGN {
            get {
                return ResourceManager.GetString("CATEGORY_DESIGN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Color {
            get {
                object obj = ResourceManager.GetObject("Color", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap edit_16x16 {
            get {
                object obj = ResourceManager.GetObject("edit_16x16", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap font_document_16x16 {
            get {
                object obj = ResourceManager.GetObject("font_document_16x16", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap glyph_kerning_16x16 {
            get {
                object obj = ResourceManager.GetObject("glyph_kerning_16x16", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap glyph_sizing_16x16 {
            get {
                object obj = ResourceManager.GetObject("glyph_sizing_16x16", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Anti-alias (High quality).
        /// </summary>
        internal static string GORFNT_ANTIALIAS_HQ {
            get {
                return ResourceManager.GetString("GORFNT_ANTIALIAS_HQ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None.
        /// </summary>
        internal static string GORFNT_ANTIALIAS_NONE {
            get {
                return ResourceManager.GetString("GORFNT_ANTIALIAS_NONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Anti-alias.
        /// </summary>
        internal static string GORFNT_ANTIALIAS_STANDARD {
            get {
                return ResourceManager.GetString("GORFNT_ANTIALIAS_STANDARD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gorgon Font File (*.gorFont).
        /// </summary>
        internal static string GORFNT_CONTENT_EXTENSION_DESC {
            get {
                return ResourceManager.GetString("GORFNT_CONTENT_EXTENSION_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The quick brown fox jumps over the lazy dog.\\n1234567890 !@#$%^&amp;*() ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz.
        /// </summary>
        internal static string GORFNT_DEFAULT_TEXT {
            get {
                return ResourceManager.GetString("GORFNT_DEFAULT_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gorgon Font Editor.
        /// </summary>
        internal static string GORFNT_DESC {
            get {
                return ResourceManager.GetString("GORFNT_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The font family &apos;{0}&apos; was not found..
        /// </summary>
        internal static string GORFNT_FAMILY_NOT_FOUND {
            get {
                return ResourceManager.GetString("GORFNT_FAMILY_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The stream is read only..
        /// </summary>
        internal static string GORFNT_STREAM_READ_ONLY {
            get {
                return ResourceManager.GetString("GORFNT_STREAM_READ_ONLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ok_16x16 {
            get {
                object obj = ResourceManager.GetObject("ok_16x16", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Pattern {
            get {
                object obj = ResourceManager.GetObject("Pattern", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the type of anti-aliasing to use for the font.  High Quality (HQ) produces the best output, but doesn&apos;t get applied to fonts at certain sizes.  Non HQ, will attempt to anti-alias regardless, but the result will be worse..
        /// </summary>
        internal static string PROP_ANTIALIASMODE_DESC {
            get {
                return ResourceManager.GetString("PROP_ANTIALIASMODE_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Anti Aliasing.
        /// </summary>
        internal static string PROP_ANTIALIASMODE_NAME {
            get {
                return ResourceManager.GetString("PROP_ANTIALIASMODE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets a base color for the glyphs on the texture..
        /// </summary>
        internal static string PROP_BASECOLOR_DESC {
            get {
                return ResourceManager.GetString("PROP_BASECOLOR_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Base Color.
        /// </summary>
        internal static string PROP_BASECOLOR_NAME {
            get {
                return ResourceManager.GetString("PROP_BASECOLOR_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the list of characters to convert into glyphs..
        /// </summary>
        internal static string PROP_CHARACTERS_DESC {
            get {
                return ResourceManager.GetString("PROP_CHARACTERS_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Characters.
        /// </summary>
        internal static string PROP_CHARACTERS_NAME {
            get {
                return ResourceManager.GetString("PROP_CHARACTERS_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The font family to use for the font..
        /// </summary>
        internal static string PROP_FONTFAMILY_DESC {
            get {
                return ResourceManager.GetString("PROP_FONTFAMILY_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Family Name.
        /// </summary>
        internal static string PROP_FONTFAMILY_NAME {
            get {
                return ResourceManager.GetString("PROP_FONTFAMILY_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The size of the font.  This value may be in Points or in Pixels depending on the font height mode..
        /// </summary>
        internal static string PROP_FONTSIZE_DESC {
            get {
                return ResourceManager.GetString("PROP_FONTSIZE_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Font Size.
        /// </summary>
        internal static string PROP_FONTSIZE_NAME {
            get {
                return ResourceManager.GetString("PROP_FONTSIZE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets whether to use points or pixels to determine the size of the font..
        /// </summary>
        internal static string PROP_HEIGHTMODE_DESC {
            get {
                return ResourceManager.GetString("PROP_HEIGHTMODE_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Height Mode.
        /// </summary>
        internal static string PROP_HEIGHTMODE_NAME {
            get {
                return ResourceManager.GetString("PROP_HEIGHTMODE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the outline color for the glyphs with outlines.  Note that the outline size must be greater than 0 before it is applied to the glyph..
        /// </summary>
        internal static string PROP_OUTLINECOLOR_DESC {
            get {
                return ResourceManager.GetString("PROP_OUTLINECOLOR_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Outline Color.
        /// </summary>
        internal static string PROP_OUTLINECOLOR_NAME {
            get {
                return ResourceManager.GetString("PROP_OUTLINECOLOR_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the size, in pixels, of an outline to apply to each glyph.  Please note that the outline color must have an alpha greater than 0 before the outline is applied..
        /// </summary>
        internal static string PROP_OUTLINESIZE_DESC {
            get {
                return ResourceManager.GetString("PROP_OUTLINESIZE_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Outline Size.
        /// </summary>
        internal static string PROP_OUTLINESIZE_NAME {
            get {
                return ResourceManager.GetString("PROP_OUTLINESIZE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the number of pixels between each glyph on the texture..
        /// </summary>
        internal static string PROP_PACKINGSIZE_DESC {
            get {
                return ResourceManager.GetString("PROP_PACKINGSIZE_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Packing Size.
        /// </summary>
        internal static string PROP_PACKINGSIZE_NAME {
            get {
                return ResourceManager.GetString("PROP_PACKINGSIZE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets whether the font should be bolded, underlined, italicized, or strike through..
        /// </summary>
        internal static string PROP_STYLE_DESC {
            get {
                return ResourceManager.GetString("PROP_STYLE_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Style.
        /// </summary>
        internal static string PROP_STYLE_NAME {
            get {
                return ResourceManager.GetString("PROP_STYLE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the contrast for anti-aliased glyphs..
        /// </summary>
        internal static string PROP_TEXTCONTRAST_DESC {
            get {
                return ResourceManager.GetString("PROP_TEXTCONTRAST_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Text Contrast.
        /// </summary>
        internal static string PROP_TEXTCONTRAST_NAME {
            get {
                return ResourceManager.GetString("PROP_TEXTCONTRAST_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The size of the textures used to hold the font glyphs..
        /// </summary>
        internal static string PROP_TEXTURESIZE_DESC {
            get {
                return ResourceManager.GetString("PROP_TEXTURESIZE_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Texture Size.
        /// </summary>
        internal static string PROP_TEXTURESIZE_NAME {
            get {
                return ResourceManager.GetString("PROP_TEXTURESIZE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap shadow_16x16 {
            get {
                object obj = ResourceManager.GetObject("shadow_16x16", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap stop_16x16 {
            get {
                object obj = ResourceManager.GetObject("stop_16x16", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0000..007F; Basic Latin
        ///0080..00FF; Latin-1 Supplement
        ///0100..017F; Latin Extended-A
        ///0180..024F; Latin Extended-B
        ///0250..02AF; IPA Extensions
        ///02B0..02FF; Spacing Modifier Letters
        ///0300..036F; Combining Diacritical Marks
        ///0370..03FF; Greek and Coptic
        ///0400..04FF; Cyrillic
        ///0500..052F; Cyrillic Supplement
        ///0530..058F; Armenian
        ///0590..05FF; Hebrew
        ///0600..06FF; Arabic
        ///0700..074F; Syriac
        ///0750..077F; Arabic Supplement
        ///0780..07BF; Thaana
        ///07C0..07FF; NKo
        ///0800..083F; Samaritan
        ///0840..085F; Mandaic
        ///08A0..08FF; Arabic Extended- [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UnicodeBlocks {
            get {
                return ResourceManager.GetString("UnicodeBlocks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0000;&lt;control&gt;;Cc;0;BN;;;;;N;NULL;;;;
        ///0001;&lt;control&gt;;Cc;0;BN;;;;;N;START OF HEADING;;;;
        ///0002;&lt;control&gt;;Cc;0;BN;;;;;N;START OF TEXT;;;;
        ///0003;&lt;control&gt;;Cc;0;BN;;;;;N;END OF TEXT;;;;
        ///0004;&lt;control&gt;;Cc;0;BN;;;;;N;END OF TRANSMISSION;;;;
        ///0005;&lt;control&gt;;Cc;0;BN;;;;;N;ENQUIRY;;;;
        ///0006;&lt;control&gt;;Cc;0;BN;;;;;N;ACKNOWLEDGE;;;;
        ///0007;&lt;control&gt;;Cc;0;BN;;;;;N;BELL;;;;
        ///0008;&lt;control&gt;;Cc;0;BN;;;;;N;BACKSPACE;;;;
        ///0009;&lt;control&gt;;Cc;0;S;;;;;N;CHARACTER TABULATION;;;;
        ///000A;&lt;control&gt;;Cc;0;B;;;;;N;LINE FEED (LF);;;;
        ///000B;&lt;contro [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UnicodeData {
            get {
                return ResourceManager.GetString("UnicodeData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap zoom_16x16 {
            get {
                object obj = ResourceManager.GetObject("zoom_16x16", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
