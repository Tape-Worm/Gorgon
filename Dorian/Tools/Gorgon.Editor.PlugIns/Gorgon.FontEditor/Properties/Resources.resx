<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="UnicodeData" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\UnicodeData.txt;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;Windows-1252</value>
  </data>
  <data name="glyph_kerning_16x16" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\glyph_kerning_16x16.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Color" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\Color.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="GORFNT_DEFAULT_TEXT" xml:space="preserve">
    <value>The quick brown fox jumps over the lazy dog.\\n1234567890 !@#$%^&amp;*() ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz</value>
  </data>
  <data name="font_document_16x16" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\font_document_16x16.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="ok_16x16" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\ok_16x16.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="UnicodeBlocks" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\UnicodeBlocks.txt;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;Windows-1252</value>
  </data>
  <data name="zoom_16x16" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\zoom_16x16.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="glyph_sizing_16x16" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\glyph_sizing_16x16.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="shadow_16x16" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\shadow_16x16.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="cancel_16x16" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\cancel_16x16.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Pattern" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\Pattern.bmp;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="edit_16x16" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\edit_16x16.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="GORFNT_CONTENT_EXTENSION_DESC" xml:space="preserve">
    <value>Gorgon Font File (*.gorFont)</value>
  </data>
  <data name="GORFNT_DESC" xml:space="preserve">
    <value>Gorgon Font Editor</value>
  </data>
  <data name="GORFNT_STREAM_READ_ONLY" xml:space="preserve">
    <value>The stream is read only.</value>
  </data>
  <data name="GORFNT_ANTIALIAS_HQ" xml:space="preserve">
    <value>Anti-alias (High quality)</value>
  </data>
  <data name="GORFNT_ANTIALIAS_NONE" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="GORFNT_ANTIALIAS_STANDARD" xml:space="preserve">
    <value>Anti-alias</value>
  </data>
  <data name="CATEGORY_APPEARANCE" xml:space="preserve">
    <value>Appearance</value>
  </data>
  <data name="CATEGORY_DESIGN" xml:space="preserve">
    <value>Design</value>
  </data>
  <data name="PROP_ANTIALIASMODE_DESC" xml:space="preserve">
    <value>Sets the type of anti-aliasing to use for the font.  High Quality (HQ) produces the best output, but doesn't get applied to fonts at certain sizes.  Non HQ, will attempt to anti-alias regardless, but the result will be worse.</value>
  </data>
  <data name="PROP_ANTIALIASMODE_NAME" xml:space="preserve">
    <value>Anti Aliasing</value>
  </data>
  <data name="PROP_BASECOLOR_DESC" xml:space="preserve">
    <value>Sets a base color for the glyphs on the texture.</value>
  </data>
  <data name="PROP_BASECOLOR_NAME" xml:space="preserve">
    <value>Base Color</value>
  </data>
  <data name="PROP_CHARACTERS_DESC" xml:space="preserve">
    <value>Sets the list of characters to convert into glyphs.</value>
  </data>
  <data name="PROP_CHARACTERS_NAME" xml:space="preserve">
    <value>Characters</value>
  </data>
  <data name="PROP_FONTFAMILY_DESC" xml:space="preserve">
    <value>The font family to use for the font.</value>
  </data>
  <data name="PROP_FONTFAMILY_NAME" xml:space="preserve">
    <value>Family Name</value>
  </data>
  <data name="PROP_FONTSIZE_DESC" xml:space="preserve">
    <value>The size of the font.  This value may be in Points or in Pixels depending on the font height mode.</value>
  </data>
  <data name="PROP_FONTSIZE_NAME" xml:space="preserve">
    <value>Font Size</value>
  </data>
  <data name="PROP_HEIGHTMODE_DESC" xml:space="preserve">
    <value>Sets whether to use points or pixels to determine the size of the font.</value>
  </data>
  <data name="PROP_HEIGHTMODE_NAME" xml:space="preserve">
    <value>Height Mode</value>
  </data>
  <data name="PROP_OUTLINECOLOR_DESC" xml:space="preserve">
    <value>Sets the outline color for the glyphs with outlines.  Note that the outline size must be greater than 0 before it is applied to the glyph.</value>
  </data>
  <data name="PROP_OUTLINECOLOR_NAME" xml:space="preserve">
    <value>Outline Color</value>
  </data>
  <data name="PROP_OUTLINESIZE_DESC" xml:space="preserve">
    <value>Sets the size, in pixels, of an outline to apply to each glyph.  Please note that the outline color must have an alpha greater than 0 before the outline is applied.</value>
  </data>
  <data name="PROP_OUTLINESIZE_NAME" xml:space="preserve">
    <value>Outline Size</value>
  </data>
  <data name="PROP_PACKINGSIZE_DESC" xml:space="preserve">
    <value>Specifies the number of pixels between each glyph on the texture.</value>
  </data>
  <data name="PROP_PACKINGSIZE_NAME" xml:space="preserve">
    <value>Packing Size</value>
  </data>
  <data name="PROP_STYLE_DESC" xml:space="preserve">
    <value>Sets whether the font should be bolded, underlined, italicized, or strike through.</value>
  </data>
  <data name="PROP_STYLE_NAME" xml:space="preserve">
    <value>Style</value>
  </data>
  <data name="PROP_TEXTCONTRAST_DESC" xml:space="preserve">
    <value>Sets the contrast for anti-aliased glyphs.</value>
  </data>
  <data name="PROP_TEXTCONTRAST_NAME" xml:space="preserve">
    <value>Text Contrast</value>
  </data>
  <data name="PROP_TEXTURESIZE_DESC" xml:space="preserve">
    <value>The size of the textures used to hold the font glyphs.</value>
  </data>
  <data name="PROP_TEXTURESIZE_NAME" xml:space="preserve">
    <value>Texture Size</value>
  </data>
  <data name="GORFNT_FAMILY_NOT_FOUND" xml:space="preserve">
    <value>The font family '{0}' was not found.</value>
  </data>
  <data name="stop_16x16" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\stop_16x16.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
</root>