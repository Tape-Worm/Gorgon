//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GorgonLibrary.Graphics.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("GorgonLibrary.Graphics.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot bind the blending state.  Alpha to coverage is only available on SM 4.x or better video devices..
        /// </summary>
        internal static string GORGFX_ALPHA_TO_COVERAGE_NOT_AVAILABLE {
            get {
                return ResourceManager.GetString("GORGFX_ALPHA_TO_COVERAGE_NOT_AVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The buffer is already locked..
        /// </summary>
        internal static string GORGFX_ALREADY_LOCKED {
            get {
                return ResourceManager.GetString("GORGFX_ALREADY_LOCKED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This buffer is immutable and this cannot be updated..
        /// </summary>
        internal static string GORGFX_BUFFER_IMMUTABLE {
            get {
                return ResourceManager.GetString("GORGFX_BUFFER_IMMUTABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create an immutable buffer without initial data to populate it..
        /// </summary>
        internal static string GORGFX_BUFFER_IMMUTABLE_REQUIRES_DATA {
            get {
                return ResourceManager.GetString("GORGFX_BUFFER_IMMUTABLE_REQUIRES_DATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This buffer must be locked with the Write and Discard flags..
        /// </summary>
        internal static string GORGFX_BUFFER_LOCK_NOT_WRITE_DISCARD {
            get {
                return ResourceManager.GetString("GORGFX_BUFFER_LOCK_NOT_WRITE_DISCARD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This buffer cannot be used as a staging buffer..
        /// </summary>
        internal static string GORGFX_BUFFER_NO_STAGING {
            get {
                return ResourceManager.GetString("GORGFX_BUFFER_NO_STAGING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The buffer must use NoOverwrite or Discard when locking..
        /// </summary>
        internal static string GORGFX_BUFFER_REQUIRES_NOOVERWRITE_DISCARD {
            get {
                return ResourceManager.GetString("GORGFX_BUFFER_REQUIRES_NOOVERWRITE_DISCARD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The size of the buffers do not match..
        /// </summary>
        internal static string GORGFX_BUFFER_SIZE_MISMATCH {
            get {
                return ResourceManager.GetString("GORGFX_BUFFER_SIZE_MISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A buffer with a usage of &apos;{0}&apos; cannot be locked..
        /// </summary>
        internal static string GORGFX_BUFFER_USAGE_CANT_LOCK {
            get {
                return ResourceManager.GetString("GORGFX_BUFFER_USAGE_CANT_LOCK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot read this buffer..
        /// </summary>
        internal static string GORGFX_BUFFER_WRITE_ONLY {
            get {
                return ResourceManager.GetString("GORGFX_BUFFER_WRITE_ONLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not retrieve character widths for the specified characters..
        /// </summary>
        internal static string GORGFX_CANNOT_RETRIEVE_ABC {
            get {
                return ResourceManager.GetString("GORGFX_CANNOT_RETRIEVE_ABC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot retrieve kerning pairs..
        /// </summary>
        internal static string GORGFX_CANNOT_RETRIEVE_KERNING {
            get {
                return ResourceManager.GetString("GORGFX_CANNOT_RETRIEVE_KERNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create the constant buffer.  The buffer size of {0} bytes is not a multiple of 16..
        /// </summary>
        internal static string GORGFX_CBUFFER_NOT_MULTIPLE_OF_16 {
            get {
                return ResourceManager.GetString("GORGFX_CBUFFER_NOT_MULTIPLE_OF_16", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Color Value: Red={0}, Green={1}, Blue={2}, Alpha={3}..
        /// </summary>
        internal static string GORGFX_COLOR_TOSTR {
            get {
                return ResourceManager.GetString("GORGFX_COLOR_TOSTR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must supply a known feature level..
        /// </summary>
        internal static string GORGFX_FEATURE_LEVEL_UNKNOWN {
            get {
                return ResourceManager.GetString("GORGFX_FEATURE_LEVEL_UNKNOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image pitch information.  Width={0} bytes, Size={1} bytes.  Format is compressed. Block count width: {2}, Block count height: {3}.
        /// </summary>
        internal static string GORGFX_FMTPITCH_COMPRESSED_TOSTR {
            get {
                return ResourceManager.GetString("GORGFX_FMTPITCH_COMPRESSED_TOSTR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image pitch information.  Width={0} bytes, Size={1} bytes..
        /// </summary>
        internal static string GORGFX_FMTPITCH_TOSTR {
            get {
                return ResourceManager.GetString("GORGFX_FMTPITCH_TOSTR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The format [{0}] is not supported..
        /// </summary>
        internal static string GORGFX_FORMAT_NOT_SUPPORTED {
            get {
                return ResourceManager.GetString("GORGFX_FORMAT_NOT_SUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The image type &apos;{0}&apos; is not a valid image type..
        /// </summary>
        internal static string GORGFX_IMAGE_TYPE_INVALID {
            get {
                return ResourceManager.GetString("GORGFX_IMAGE_TYPE_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The index is out of range.  The index value [{0}] must be be 0 or less than {1}..
        /// </summary>
        internal static string GORGFX_INDEX_OUT_OF_RANGE {
            get {
                return ResourceManager.GetString("GORGFX_INDEX_OUT_OF_RANGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A valid device context was not found..
        /// </summary>
        internal static string GORGFX_INVALID_D3D_CONTEXT {
            get {
                return ResourceManager.GetString("GORGFX_INVALID_D3D_CONTEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value [{0}] for parameter &apos;{1}&apos; is not valid..
        /// </summary>
        internal static string GORGFX_INVALID_ENUM_VALUE {
            get {
                return ResourceManager.GetString("GORGFX_INVALID_ENUM_VALUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Gorgon Graphics interface requires Windows Vista Service Pack 2 or greater..
        /// </summary>
        internal static string GORGFX_INVALID_OS {
            get {
                return ResourceManager.GetString("GORGFX_INVALID_OS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The offset [{0}] or context &apos;{1}&apos; is in use by another item with the same index or slot..
        /// </summary>
        internal static string GORGFX_LAYOUT_ELEMENT_IN_USE {
            get {
                return ResourceManager.GetString("GORGFX_LAYOUT_ELEMENT_IN_USE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find any supported video devices.  Gorgon requires a device that can support a minimum of pixel shader model 2b and a vertex shader model of 2a..
        /// </summary>
        internal static string GORGFX_NO_SUPPORTED_DEVICES {
            get {
                return ResourceManager.GetString("GORGFX_NO_SUPPORTED_DEVICES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The usage for this object must be set to &apos;Default&apos;..
        /// </summary>
        internal static string GORGFX_NOT_DEFAULT_USAGE {
            get {
                return ResourceManager.GetString("GORGFX_NOT_DEFAULT_USAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter must not be empty..
        /// </summary>
        internal static string GORGFX_PARAMETER_MUST_NOT_BE_EMPTY {
            get {
                return ResourceManager.GetString("GORGFX_PARAMETER_MUST_NOT_BE_EMPTY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gorgon Shader Include &apos;{0}&apos;.
        /// </summary>
        internal static string GORGFX_SHADER_INCLUDE_TOSTR {
            get {
                return ResourceManager.GetString("GORGFX_SHADER_INCLUDE_TOSTR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gorgon Shader View.  Format: [{0}].
        /// </summary>
        internal static string GORGFX_SHADER_VIEW_TOSTR {
            get {
                return ResourceManager.GetString("GORGFX_SHADER_VIEW_TOSTR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value is out of range.  The value [{0}] must be be 0 or less than {1}..
        /// </summary>
        internal static string GORGFX_VALUE_OUT_OF_RANGE {
            get {
                return ResourceManager.GetString("GORGFX_VALUE_OUT_OF_RANGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vertex buffer binding.  Stride: {0}, Offset: {1}, VertexBuffer: {2}.
        /// </summary>
        internal static string GORGFX_VERTEXBUFFER_BINDING_TOSTR {
            get {
                return ResourceManager.GetString("GORGFX_VERTEXBUFFER_BINDING_TOSTR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Gorgon_2_x_Logo_Small {
            get {
                object obj = ResourceManager.GetObject("Gorgon_2_x_Logo_Small", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
