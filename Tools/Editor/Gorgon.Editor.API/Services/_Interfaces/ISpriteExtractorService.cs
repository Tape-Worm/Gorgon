#region MIT
// 
// Gorgon.
// Copyright (C) 2019 Michael Winsor
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
// 
// Created: April 27, 2019 11:52:36 AM
// 
#endregion

using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;
using Gorgon.Editor.Content;
using Gorgon.Graphics.Imaging;
using Gorgon.Renderers;

namespace Gorgon.Editor.Services;

/// <summary>
/// The service used to retrieve sprite data from a texture atlas.
/// </summary>
/// <remarks>
/// <para>
/// Developers can use this to extract sprite information using a fixed size grid to retrieve texture coordinates from a texture passed to the service.
/// </para>
/// </remarks>
public interface ISpriteExtractorService
{
    /// <summary>
    /// Function to retrieve the sprites from the texture atlas.
    /// </summary>
    /// <param name="data">The data used to extract the sprites.</param>
    /// <param name="imageData">The system memory version of the texture.</param>
    /// <param name="progressCallback">A callback method used to report on progress of the operation.</param>
    /// <param name="cancelToken">The token used to cancel the operation.</param>
    /// <returns>A list of sprites generated by this method.</returns>
    IReadOnlyList<GorgonSprite> ExtractSprites(SpriteExtractionData data, IGorgonImage imageData, Action<ProgressData> progressCallback, CancellationToken cancelToken);

    /// <summary>
    /// Function to retrieve the image data for a sprite texture as a 32 bit RGBA pixel data.
    /// </summary>
    /// <param name="data">The data used for sprite extraction.</param>
    /// <returns>The image data for the texture.</returns>
    Task<IGorgonImage> GetSpriteTextureImageDataAsync(SpriteExtractionData data);

    /// <summary>
    /// Function to save the sprites to the file system.
    /// </summary>
    /// <param name="path">The path to save the sprites into.</param>
    /// <param name="baseFileName">The base file name.</param>
    /// <param name="sprites">The sprites to save.</param>
    /// <param name="textureFile">The texture file associated with the sprites.</param>
    void SaveSprites(string path, string baseFileName, IEnumerable<GorgonSprite> sprites, IContentFile textureFile);
}
