<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SharpUtilities</name>
    </assembly>
    <members>
        <member name="T:SharpUtilities.Utility.YourComputer">
            <summary>
            An object containing information about the computer and the operating system.
            </summary>
        </member>
        <member name="M:SharpUtilities.Utility.YourComputer.GetWMIValue``1(System.String,System.String)">
            <summary>
            Function to retrieve a WMI value.
            </summary>
            <typeparam name="T">Type of data to retrieve.</typeparam>
            <param name="WMIItem">Name of the item to retrieve.</param>
            <param name="WMIClass">Class to retrieve data from.</param>
        </member>
        <member name="M:SharpUtilities.Utility.YourComputer.GetLoginInfo">
            <summary>
            Function to retrieve login information.
            </summary>
        </member>
        <member name="M:SharpUtilities.Utility.YourComputer.GetCPUInfo">
            <summary>
            Function to retrieve CPU information.
            </summary>
        </member>
        <member name="M:SharpUtilities.Utility.YourComputer.GetOSInfo">
            <summary>
            Function to retrieve the operating system information.
            </summary>
        </member>
        <member name="M:SharpUtilities.Utility.YourComputer.Refresh">
            <summary>
            Function to force an update to the system information.
            </summary>
        </member>
        <member name="M:SharpUtilities.Utility.YourComputer.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:SharpUtilities.Utility.YourComputer.Dispose(System.Boolean)">
            <summary>
            Function to perform actual clean-up.
            </summary>
            <param name="disposing">TRUE if disposing managed items and unmanaged items, FALSE if only disposing unmanaged.</param>
        </member>
        <member name="M:SharpUtilities.Utility.YourComputer.Dispose">
            <summary>
            Function to clean up.
            </summary>
        </member>
        <member name="M:SharpUtilities.Utility.YourComputer.Finalize">
            <summary>
            Destructor.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.YourComputer.OSFullName">
            <summary>
            Property to return the Operating System name in full.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.YourComputer.IsPartOfDomain">
            <summary>
            Property to return whether this system has been joined to a domain.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.YourComputer.UserName">
            <summary>
            Property to return the username of the currently logged in user. 
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.YourComputer.ComputerName">
            <summary>
            Property to return this computer's name. 
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.YourComputer.DomainName">
            <summary>
            Property to return the name of the network domain. 
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.YourComputer.CPU">
            <summary>
            Property to return infomation about a specific processor.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.YourComputer.EnvironmentVariables">
            <summary>
            Property to return the environment variable list.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.YourComputer.TotalPhysical">
            <summary>
            Property to return the total amount of physical memory installed in KB.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.YourComputer.TotalVirtual">
            <summary>
            Property to return the total amount of virtual memory in KB.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.YourComputer.FreePhysical">
            <summary>
            Property to return the free amount of physical memory installed in KB.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.YourComputer.FreeVirtual">
            <summary>
            Property to return the free amount of virtual memory in KB.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.YourComputer.HasTerminalServices">
            <summary>
            Property to return whether the OS has a terminal server.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.YourComputer.HasLimitedTerminalSessions">
            <summary>
            Property to return whether the terminal server is limited to only 1 connection.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.YourComputer.OSType">
            <summary>
            Property to return the OS type.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.YourComputer.OSExtensions">
            <summary>
            Property to return extended information about the OS.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.YourComputer.OSVersion">
            <summary>
            Property to return operating system version.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.YourComputer.OSBuildNumber">
            <summary>
            Property to return operating system build #.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.YourComputer.OSServicePack">
            <summary>
            Property to return operating system service pack info.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.YourComputer.OSWindowsDirectory">
            <summary>
            Property to return the windows directory.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.YourComputer.OSSystemDirectory">
            <summary>
            Property to return the system directory.
            </summary>
        </member>
        <member name="T:SharpUtilities.Utility.JoystickEnumerator">
            <summary>
            Delegate used for callback when enumerating joystick devices.
            </summary>
            <param name="ID">ID of the joystick.</param>
            <param name="name">Name of the joystick.</param>
            <param name="caps">Capabilities of the joystick.</param>
            <param name="threshold">Threshold of the joystick.</param>
            <param name="connected">TRUE if the device is connected, FALSE if not.</param>
            <returns>TRUE to keep enumerating, FALSE to stop.</returns>
        </member>
        <member name="T:SharpUtilities.Utility.FontCharSetData">
            <summary>
            Value type containing a font character set.
            </summary>
        </member>
        <member name="M:SharpUtilities.Utility.FontCharSetData.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="name">Character set name.</param>
            <param name="startOrdinal">Starting ordinal.</param>
            <param name="endOrdinal">Ending ordinal.</param>
        </member>
        <member name="P:SharpUtilities.Utility.FontCharSetData.Name">
            <summary>
            Property to return the character set name.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.FontCharSetData.StartOrdinal">
            <summary>
            Property to return the starting ordinal.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.FontCharSetData.EndOrdinal">
            <summary>
            Property to return the ending ordinal.
            </summary>
        </member>
        <member name="T:SharpUtilities.Utility.FontData">
            <summary>
            Value type containing font data.
            </summary>
        </member>
        <member name="M:SharpUtilities.Utility.FontData.GetCharSets(System.UInt32[])">
            <summary>
            Function to retrieve the character sets from the font.
            </summary>
            <param name="charSetData">Data for the character sets.</param>
        </member>
        <member name="M:SharpUtilities.Utility.FontData.#ctor(System.String,SharpUtilities.Native.Win32.NEWTEXTMETRICEX)">
            <summary>
            Constructor.
            </summary>
            <param name="fontName">Name of the font.</param>
            <param name="fontData">Data for the font.</param>
        </member>
        <member name="P:SharpUtilities.Utility.FontData.Name">
            <summary>
            Property to return the name of the font.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.FontData.CharacterSets">
            <summary>
            Property to return the character sets available to the font.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.FontData.StartingCharacter">
            <summary>
            Propert to return the starting character.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.FontData.EndingCharacter">
            <summary>
            Property to return the ending character.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.FontData.DefaultCharacter">
            <summary>
            Property to return the default character.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.FontData.WordBreakCharacter">
            <summary>
            Property to return the word breaking character.
            </summary>
        </member>
        <member name="T:SharpUtilities.Utility.Utilities">
            <summary>
            Static object that contains helper functionality.
            </summary>
        </member>
        <member name="M:SharpUtilities.Utility.Utilities.FontEnumerator(SharpUtilities.Native.Win32.ENUMLOGFONTEX@,SharpUtilities.Native.Win32.NEWTEXTMETRICEX@,SharpUtilities.Native.Win32.FontTypes,System.IntPtr)">
            <summary>
            Function called during font family enumeration.
            </summary>
            <param name="logFont">Logical font data.</param>
            <param name="textMetric">Physical font data.</param>
            <param name="type">Type of font.</param>
            <param name="param">User supplied parameter.</param>
            <returns>0 to stop enumeration, -1 to keep going.</returns>
        </member>
        <member name="M:SharpUtilities.Utility.Utilities.ConvertUnmanagedIcon(System.IntPtr)">
            <summary>
            Function to build a managed icon from an unmanaged icon handle.
            </summary>
            <param name="iconHandle">Icon handle to create from.</param>
            <returns>A new managed icon.</returns>
        </member>
        <member name="M:SharpUtilities.Utility.Utilities.GetFontData(System.Drawing.IDeviceContext,System.Drawing.Font,SharpUtilities.Native.Win32.FontCharacterSet)">
            <summary>
            Function to retrieve font data.
            </summary>
            <param name="context">Device context.</param>
            <param name="font">Font to extract data for.</param>
            <param name="charSet">Character set used to restrict enumeration.</param>
            <returns>A value type containing information about the font.</returns>
        </member>
        <member name="M:SharpUtilities.Utility.Utilities.GetFontData(System.Drawing.IDeviceContext,System.Drawing.Font)">
            <summary>
            Gets the font data.
            </summary>
            <param name="context">The context.</param>
            <param name="font">The font.</param>
            <returns></returns>
        </member>
        <member name="M:SharpUtilities.Utility.Utilities.FormatByteUnits(System.UInt64)">
            <summary>
            Function to return a string formatted to the nearest unit of measure for byte amounts.
            </summary>
            <param name="amount">Amount in bytes.</param>
            <returns>A string containing the amount and proper unit for memory.</returns>
        </member>
        <member name="M:SharpUtilities.Utility.Utilities.EnumerateJoysticks(SharpUtilities.Utility.JoystickEnumerator,System.Boolean)">
            <summary>
            Function to enumerate the available joysticks.
            </summary>
            <param name="enumerator">Enumerator callback.</param>
            <param name="includeDisconnected">TRUE to include all joysticks, include those that are disconnected, FALSE to exclude.</param>
            <returns>The number of devices enumerated.</returns>
        </member>
        <member name="M:SharpUtilities.Utility.Utilities.IsJoystickConnected(System.Int32)">
            <summary>
            Function to determine if a joystick is connected.
            </summary>
            <param name="ID">ID of the joystick to check.</param>
            <returns>TRUE if connected, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Utility.Utilities.GetJoystickName(System.Int32)">
            <summary>
            Function to retrieve a joystick name from the registry.
            </summary>
            <param name="ID">ID of the joystick to retrieve data for.</param>
            <returns>The name of the joystick.</returns>
        </member>
        <member name="M:SharpUtilities.Utility.Utilities.GetJoystickName(SharpUtilities.Native.Win32.JOYCAPS,System.Int32)">
            <summary>
            Function to retrieve a joystick name from the registry.
            </summary>
            <param name="joystickData">Joystick capability data.</param>
            <param name="ID">ID of the joystick to retrieve data for.</param>
            <returns>The name of the joystick.</returns>
        </member>
        <member name="M:SharpUtilities.Utility.Utilities.IsNumeric(System.String)">
            <summary>
            Function to determine if a function is numeric or not.
            </summary>
            <param name="value">Value to test.</param>
            <returns>TRUE if the value is numeric, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Utility.Utilities.GetCharacterWidth(System.Drawing.IDeviceContext,System.Char,System.Drawing.Font)">
            <summary>
            Function to return the widths for a character.
            </summary>
            <param name="dc">Device context in which the font resides.</param>
            <param name="character">Character to retrieve metrics for.</param>
            <param name="font">Font to use.</param>
            <returns>ABC character metrics.</returns>
        </member>
        <member name="M:SharpUtilities.Utility.Utilities.GetCharacterWidthFloat(System.Drawing.IDeviceContext,System.Char,System.Drawing.Font)">
            <summary>
            Function to return the widths for a character.
            </summary>
            <param name="dc">Device context in which the font resides.</param>
            <param name="character">Character to retrieve metrics for.</param>
            <param name="font">Font to use.</param>
            <returns>ABC character metrics.</returns>
        </member>
        <member name="M:SharpUtilities.Utility.Utilities.GetIconsFromFile(System.String,SharpUtilities.Native.Win32.ShellIconSize)">
            <summary>
            Function to return all the icons from a file.
            </summary>
            <param name="fileName">Path and name of the file.</param>
            <param name="size">Size of the icon to retrieve.</param>
            <returns>A list of icons.</returns>
            <remarks>This code was created by Gil Schmidt from CodeProject.com.  http://www.codeproject.com/csharp/iconhandler.asp</remarks>
        </member>
        <member name="M:SharpUtilities.Utility.Utilities.IconFromExtension(System.String,SharpUtilities.Native.Win32.ShellIconSize)">
            <summary>
            Function to get an icon based on a file extension.
            </summary>
            <param name="extension">File extension to use.</param>
            <param name="size">Size of the icon.</param>
            <returns>An icon from the shell that is related to the extension passed.</returns>
            <remarks>This code was created by Gil Schmidt from CodeProject.com.  http://www.codeproject.com/csharp/iconhandler.asp</remarks>
        </member>
        <member name="T:SharpUtilities.Mathematics.Vector2D">
            <summary>
            Value type to represent a 2 dimensional vector.
            </summary>
            <remarks>
            Vector mathematics are commonly used in graphical 3D applications.  And other
            spatial related computations.
            This valuetype provides us a convienient way to use vectors and their operations.
            </remarks>
        </member>
        <member name="F:SharpUtilities.Mathematics.Vector2D.X">
            <summary>
            Horizontal position of the vector.
            </summary>
        </member>
        <member name="F:SharpUtilities.Mathematics.Vector2D.Y">
            <summary>
            Vertical position of the vector.
            </summary>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector2D.DotProduct(SharpUtilities.Mathematics.Vector2D)">
            <summary>
            Function to perform a dot product between this and another vector.
            </summary>
            <param name="vector">Vector to get the dot product against.</param>
            <returns>The dot product.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector2D.Normalize">
            <summary>
            Function to normalize the vector.
            </summary>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector2D.CrossProduct(SharpUtilities.Mathematics.Vector2D)">
            <summary>
            Function to perform a cross product between this and another vector.
            </summary>
            <param name="vector">Vector to perform the cross product with.</param>
            <returns>A new vector containing the cross product.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector2D.Equals(System.Object)">
            <summary>
            Function to compare this vector to another object.
            </summary>
            <param name="obj">Object to compare.</param>
            <returns>TRUE if equal, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector2D.GetHashCode">
            <summary>
            Function to return the hash code for this object.
            </summary>
            <returns>The hash code for this object.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector2D.ToString">
            <summary>
            Function to return the textual representation of this object.
            </summary>
            <returns>A string containing the type and values of the object.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector2D.Add(SharpUtilities.Mathematics.Vector2D,SharpUtilities.Mathematics.Vector2D)">
            <summary>
            Function to perform addition upon two vectors.
            </summary>
            <param name="left">Vector to add to.</param>
            <param name="right">Vector to add with.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector2D.Subtract(SharpUtilities.Mathematics.Vector2D,SharpUtilities.Mathematics.Vector2D)">
            <summary>
            Function to perform subtraction upon two vectors.
            </summary>
            <param name="left">Vector to subtract.</param>
            <param name="right">Vector to subtract with.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector2D.Negate(SharpUtilities.Mathematics.Vector2D)">
            <summary>
            Function to return a negated vector.
            </summary>
            <param name="left">Vector to negate.</param>
            <returns>A negated vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector2D.Divide(SharpUtilities.Mathematics.Vector2D,System.Single)">
            <summary>
            Function to divide a vector by a scalar value.
            </summary>
            <param name="left">Vector to divide.</param>
            <param name="scalar">Scalar value to divide by.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector2D.Divide(SharpUtilities.Mathematics.Vector2D,SharpUtilities.Mathematics.Vector2D)">
            <summary>
            Function to divide a vector by another vector.
            </summary>
            <param name="left">Vector to divide.</param>
            <param name="right">Vector to divide by.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector2D.Multiply(SharpUtilities.Mathematics.Vector2D,SharpUtilities.Mathematics.Vector2D)">
            <summary>
            Function to multiply two vectors together.
            </summary>
            <param name="left">Vector to multiply.</param>
            <param name="right">Vector to multiply by.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector2D.Multiply(SharpUtilities.Mathematics.Vector2D,System.Single)">
            <summary>
            Function to multiply a vector by a scalar value.
            </summary>
            <param name="left">Vector to multiply with.</param>
            <param name="scalar">Scalar value to multiply by.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector2D.Multiply(System.Single,SharpUtilities.Mathematics.Vector2D)">
            <summary>
            Function to multiply a vector by a scalar value.
            </summary>
            <param name="scalar">Scalar value to multiply by.</param>
            <param name="right">Vector to multiply with.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector2D.op_Equality(SharpUtilities.Mathematics.Vector2D,SharpUtilities.Mathematics.Vector2D)">
            <summary>
            Operator to perform equality tests.
            </summary>
            <param name="left">Vector to compare.</param>
            <param name="right">Vector to compare with.</param>
            <returns>TRUE if equal, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector2D.op_Inequality(SharpUtilities.Mathematics.Vector2D,SharpUtilities.Mathematics.Vector2D)">
            <summary>
            Operator to perform inequality tests.
            </summary>
            <param name="left">Vector to compare.</param>
            <param name="right">Vector to compare with.</param>
            <returns>TRUE if not equal, FALSE if they are.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector2D.op_LessThan(SharpUtilities.Mathematics.Vector2D,SharpUtilities.Mathematics.Vector2D)">
            <summary>
            Operator to perform a test to see if the left is less than the right.
            </summary>
            <param name="left">Left vector to compare.</param>
            <param name="right">Right vector to compare.</param>
            <returns>TRUE if left is less than right, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector2D.op_GreaterThan(SharpUtilities.Mathematics.Vector2D,SharpUtilities.Mathematics.Vector2D)">
            <summary>
            Operator to perform a test to see if the left is greater than the right.
            </summary>
            <param name="left">Left vector to compare.</param>
            <param name="right">Right vector to compare.</param>
            <returns>TRUE if left is greater than right, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector2D.op_LessThanOrEqual(SharpUtilities.Mathematics.Vector2D,SharpUtilities.Mathematics.Vector2D)">
            <summary>
            Operator to perform a test to see if the left is less or equal to the right.
            </summary>
            <param name="left">Left vector to compare.</param>
            <param name="right">Right vector to compare.</param>
            <returns>TRUE if left is less than right, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector2D.op_GreaterThanOrEqual(SharpUtilities.Mathematics.Vector2D,SharpUtilities.Mathematics.Vector2D)">
            <summary>
            Operator to perform a test to see if the left is greater or equal to the right.
            </summary>
            <param name="left">Left vector to compare.</param>
            <param name="right">Right vector to compare.</param>
            <returns>TRUE if left is greater than right, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector2D.op_Addition(SharpUtilities.Mathematics.Vector2D,SharpUtilities.Mathematics.Vector2D)">
            <summary>
            Operator to perform addition upon two vectors.
            </summary>
            <param name="left">Vector to add to.</param>
            <param name="right">Vector to add with.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector2D.op_Subtraction(SharpUtilities.Mathematics.Vector2D,SharpUtilities.Mathematics.Vector2D)">
            <summary>
            Operator to perform subtraction upon two vectors.
            </summary>
            <param name="left">Vector to subtract.</param>
            <param name="right">Vector to subtract with.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector2D.op_UnaryNegation(SharpUtilities.Mathematics.Vector2D)">
            <summary>
            Operator to negate a vector.
            </summary>
            <param name="left">Vector to negate.</param>
            <returns>A negated vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector2D.op_Multiply(SharpUtilities.Mathematics.Vector2D,SharpUtilities.Mathematics.Vector2D)">
            <summary>
            Operator to multiply two vectors together.
            </summary>
            <param name="left">Vector to multiply.</param>
            <param name="right">Vector to multiply by.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector2D.op_Multiply(SharpUtilities.Mathematics.Vector2D,System.Single)">
            <summary>
            Operator to multiply a vector by a scalar value.
            </summary>
            <param name="left">Vector to multiply with.</param>
            <param name="scalar">Scalar value to multiply by.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector2D.op_Multiply(System.Single,SharpUtilities.Mathematics.Vector2D)">
            <summary>
            Operator to multiply a vector by a scalar value.
            </summary>
            <param name="scalar">Scalar value to multiply by.</param>
            <param name="right">Vector to multiply with.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector2D.op_Division(SharpUtilities.Mathematics.Vector2D,System.Single)">
            <summary>
            Operator to divide a vector by a scalar value.
            </summary>
            <param name="left">Vector to divide.</param>
            <param name="scalar">Scalar value to divide by.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector2D.op_Division(SharpUtilities.Mathematics.Vector2D,SharpUtilities.Mathematics.Vector2D)">
            <summary>
            Operator to divide a vector by another vector.
            </summary>
            <param name="left">Vector to divide.</param>
            <param name="right">Vector to divide by.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector2D.op_Implicit(SharpUtilities.Mathematics.Vector3D)~SharpUtilities.Mathematics.Vector2D">
            <summary>
            Operator to convert a 3D vector into a 2D vector.
            </summary>
            <param name="vector">3D gorgon vector.</param>
            <returns>A new 2D vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector2D.op_Implicit(System.Drawing.Point)~SharpUtilities.Mathematics.Vector2D">
            <summary>
            Operator to convert a System.Drawing.Point to a 2D vector.
            </summary>
            <param name="point">System.Drawing.Point to convert.</param>
            <returns>A new 2D vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector2D.op_Implicit(System.Drawing.PointF)~SharpUtilities.Mathematics.Vector2D">
            <summary>
            Operator to convert a System.Drawing.PointF to a 2D vector.
            </summary>
            <param name="point">System.Drawing.PointF to convert.</param>
            <returns>A new 2D vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector2D.op_Implicit(System.Drawing.Size)~SharpUtilities.Mathematics.Vector2D">
            <summary>
            Operator to convert a System.Drawing.Size to a 2D vector.
            </summary>
            <param name="point">System.Drawing.Size to convert.</param>
            <returns>A new 2D vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector2D.op_Implicit(System.Drawing.SizeF)~SharpUtilities.Mathematics.Vector2D">
            <summary>
            Operator to convert a System.Drawing.SizeF to a 2D vector.
            </summary>
            <param name="point">System.Drawing.SizeF to convert.</param>
            <returns>A new 2D vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector2D.op_Explicit(SharpUtilities.Mathematics.Vector2D)~System.Drawing.Point">
            <summary>
            Operator to convert a 2D vector to a System.Drawing.Point.
            </summary>
            <param name="vector">2D gorgon vector.</param>
            <returns>A new point with the values from the vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector2D.op_Implicit(SharpUtilities.Mathematics.Vector2D)~System.Drawing.PointF">
            <summary>
            Operator to convert a 2D vector to a System.Drawing.PointF.
            </summary>
            <param name="vector">2D gorgon vector.</param>
            <returns>A new point with the values from the vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector2D.op_Explicit(SharpUtilities.Mathematics.Vector2D)~System.Drawing.Size">
            <summary>
            Operator to convert a 2D vector to a System.Drawing.Size.
            </summary>
            <param name="vector">2D gorgon vector.</param>
            <returns>A new point with the values from the vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector2D.op_Implicit(SharpUtilities.Mathematics.Vector2D)~System.Drawing.SizeF">
            <summary>
            Operator to convert a 2D vector to a System.Drawing.SizeF.
            </summary>
            <param name="vector">2D gorgon vector.</param>
            <returns>A new point with the values from the vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector2D.#ctor(System.Single,System.Single)">
            <summary>
            Constructor.
            </summary>
            <param name="x">Horizontal position of the vector.</param>
            <param name="y">Vertical posiition of the vector.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector2D.#ctor(System.Drawing.PointF)">
            <summary>
            Constructor.
            </summary>
            <param name="point">System.Drawing.PointF to initialize with.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector2D.#ctor(System.Drawing.Point)">
            <summary>
            Constructor.
            </summary>
            <param name="point">System.Drawing.Point to initialize with.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector2D.#ctor(System.Drawing.Size)">
            <summary>
            Constructor.
            </summary>
            <param name="size">System.Drawing.Size to initialize with.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector2D.#ctor(System.Drawing.SizeF)">
            <summary>
            Constructor.
            </summary>
            <param name="size">System.Drawing.SizeF to initialize with.</param>
        </member>
        <member name="P:SharpUtilities.Mathematics.Vector2D.Length">
            <summary>
            Property to return the length of this vector.
            </summary>
        </member>
        <member name="P:SharpUtilities.Mathematics.Vector2D.LengthSquare">
            <summary>
            Property to return the length of this vector squared.
            </summary>
        </member>
        <member name="P:SharpUtilities.Mathematics.Vector2D.InverseLength">
            <summary>
            Property to return the inverse length of this vector.
            </summary>
        </member>
        <member name="P:SharpUtilities.Mathematics.Vector2D.Zero">
            <summary>
            Property to return a zeroed vector.
            </summary>
        </member>
        <member name="P:SharpUtilities.Mathematics.Vector2D.Unit">
            <summary>
            Property to return a unit vector (1,1,1).
            </summary>
        </member>
        <member name="P:SharpUtilities.Mathematics.Vector2D.UnitX">
            <summary>
            Property to return a unit vector for the X axis (1,0,0).
            </summary>
        </member>
        <member name="P:SharpUtilities.Mathematics.Vector2D.UnitY">
            <summary>
            Property to return a unit vector for the Y axis (0,1,0).
            </summary>
        </member>
        <member name="T:SharpUtilities.Mathematics.PlaneList">
            <summary>
            Object to represent a list of planes.
            </summary>
            <remarks>
            There are times when you will need to send a list of planes for intersection 
            tests (like when doing a frustrum culling).  This class will help facilitate this.  
            </remarks>
        </member>
        <member name="T:SharpUtilities.Collections.DynamicArray`1">
            <summary>
            Object representing a more concrete version of the dynamic array.
            </summary>
            <typeparam name="T">Type of object to store.</typeparam>
        </member>
        <member name="T:SharpUtilities.Collections.BaseDynamicArray`1">
            <summary>
            An abstract class for representing a dynamic array of objects.
            </summary>
            <remarks>
            This was designed as a point of convenience to take some of the annoyance out of inheriting a collection.
            <para>
            This class provides a simplified method of inheriting a basic list collection.  It holds no benefit over the System.Collections.Generic.List object, which it uses internally.
            </para>
            	<para>
            This class, like the other classes in the <see cref="N:SharpUtilities.Collections">Collections</see> namespace, implements the IEnumerable interface already to return an iterator interface for enumeration.
            </para>
            </remarks>
            <typeparam name="T">Type of data to store.</typeparam>
        </member>
        <member name="M:SharpUtilities.Collections.BaseDynamicArray`1.GetItem(System.Int32)">
            <summary>
            Function to retrieve an item by its index.
            </summary>
            <param name="index">Index of the item to retrieve.</param>
        </member>
        <member name="M:SharpUtilities.Collections.BaseDynamicArray`1.SetItem(System.Int32,`0)">
            <summary>
            Function to update an item in the list by its index.
            </summary>
            <param name="index">Index of the item to set.</param>
            <param name="item">Item to set.</param>
        </member>
        <member name="M:SharpUtilities.Collections.BaseDynamicArray`1.RemoveItem(System.Int32)">
            <summary>
            Function to remove an object from the list by index.
            </summary>
            <param name="index">Index to remove at.</param>
        </member>
        <member name="M:SharpUtilities.Collections.BaseDynamicArray`1.ClearItems">
            <summary>
            Function to clear the collection.
            </summary>
        </member>
        <member name="M:SharpUtilities.Collections.BaseDynamicArray`1.Contains(`0)">
            <summary>
            Function to return whether or not the array contains an instance of the specified object.
            </summary>
            <param name="item">Object to check for.</param>
            <returns>TRUE if object exists, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Collections.BaseDynamicArray`1.StaticArray(System.Int32,System.Int32)">
            <summary>
            Function to return the items in the dynamic array as a static array.
            </summary>
            <param name="start">Starting index of the array.</param>
            <param name="count">Number of items to copy.</param>
            <returns>A static array containing a copy of this array.</returns>
        </member>
        <member name="M:SharpUtilities.Collections.BaseDynamicArray`1.StaticArray">
            <summary>
            Function to return the items in the dynamic array as a static array.
            </summary>
            <returns>A static array containing a copy of this array.</returns>
        </member>
        <member name="M:SharpUtilities.Collections.BaseDynamicArray`1.#ctor(System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="defaultsize">Default size of the collection.</param>
        </member>
        <member name="M:SharpUtilities.Collections.BaseDynamicArray`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Function to return a new enumerator object.
            </summary>
            <returns>Enumerator object.</returns>
        </member>
        <member name="M:SharpUtilities.Collections.BaseDynamicArray`1.GetEnumerator">
            <summary>
            Function to return a new enumerator object.
            </summary>
            <returns>Enumerator object.</returns>
        </member>
        <member name="P:SharpUtilities.Collections.BaseDynamicArray`1.Items">
            <summary>
            Property to return the internal list of items.
            </summary>
        </member>
        <member name="P:SharpUtilities.Collections.BaseDynamicArray`1.Count">
            <summary>
            Property to return the number of items in the collection.
            </summary>
        </member>
        <member name="M:SharpUtilities.Collections.DynamicArray`1.Remove(System.Int32)">
            <summary>
            Function to remove an object from the list by index.
            </summary>
            <param name="index">Index to remove at.</param>
        </member>
        <member name="M:SharpUtilities.Collections.DynamicArray`1.Clear">
            <summary>
            Function to clear the collection.
            </summary>
        </member>
        <member name="M:SharpUtilities.Collections.DynamicArray`1.#ctor(System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="defaultsize">Default size of the collection.</param>
        </member>
        <member name="M:SharpUtilities.Collections.DynamicArray`1.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:SharpUtilities.Collections.DynamicArray`1.Item(System.Int32)">
            <summary>
            Property to get or set the item at the specified index.
            </summary>
            <value></value>
            <returns></returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.PlaneList.Add(SharpUtilities.Mathematics.Plane)">
            <summary>
            Function to add a plane to the list.
            </summary>
            <param name="plane">Plane to add.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.PlaneList.Add(SharpUtilities.Mathematics.Vector3D,System.Single)">
            <summary>
            Function to add a plane to the list.
            </summary>
            <param name="normal">Normal for the plane.</param>
            <param name="deltaAngle">Angle distance from normal.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.PlaneList.Add(SharpUtilities.Mathematics.Vector3D,SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Function to add a plane to the list.
            </summary>
            <param name="point">Point in space for the plane.</param>
            <param name="normal">Normal of the plane.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.PlaneList.Add(SharpUtilities.Mathematics.Vector3D,SharpUtilities.Mathematics.Vector3D,SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Function to add a plane to the list.
            </summary>
            <param name="point1">Point 1.</param>
            <param name="point2">Point 2.</param>
            <param name="point3">Point 3.</param>
        </member>
        <member name="T:SharpUtilities.Mathematics.RayIntersectionQueryResult">
            <summary>
            Value type containing the result of the intersection test.
            </summary>
        </member>
        <member name="M:SharpUtilities.Mathematics.RayIntersectionQueryResult.#ctor(System.Boolean,System.Single)">
            <summary>
            Constructor.
            </summary>
            <param name="intersects">TRUE if there's an intersection, FALSE if not.</param>
            <param name="distance">Distance along a ray where the intersection occurs.</param>
        </member>
        <member name="P:SharpUtilities.Mathematics.RayIntersectionQueryResult.Intersects">
            <summary>
            Property to return whether or not there was an intersection.
            </summary>
        </member>
        <member name="P:SharpUtilities.Mathematics.RayIntersectionQueryResult.Distance">
            <summary>
            Property to return the distance along a ray at which the intersection occurs.
            </summary>
        </member>
        <member name="T:SharpUtilities.Mathematics.PlaneIntersectionQueryResult">
            <summary>
            Value type containing the result of the intersection test.
            </summary>
        </member>
        <member name="M:SharpUtilities.Mathematics.PlaneIntersectionQueryResult.#ctor(System.Boolean,SharpUtilities.Mathematics.PlaneSide)">
            <summary>
            Constructor.
            </summary>
            <param name="intersects">TRUE if there's an intersection, FALSE if not.</param>
            <param name="side">Side of the plane that intersects.</param>
        </member>
        <member name="P:SharpUtilities.Mathematics.PlaneIntersectionQueryResult.Intersects">
            <summary>
            Property to return whether or not there was an intersection.
            </summary>
        </member>
        <member name="P:SharpUtilities.Mathematics.PlaneIntersectionQueryResult.Side">
            <summary>
            Property to return the side of the plane that intersects.
            </summary>
        </member>
        <member name="T:SharpUtilities.Mathematics.IntersectionQueries">
            <summary>
            Static class to handle intersection tests.
            </summary>
            <remarks>
            An intersection is a test to determine if a point or volume intersects with 
            another point or volume.
            Intersections are often used in 3D math to determine occlusion, frustrum culling,
            and general collision detection among other things.
            </remarks>
        </member>
        <member name="M:SharpUtilities.Mathematics.IntersectionQueries.Query(SharpUtilities.Mathematics.Ray,SharpUtilities.Mathematics.Plane)">
            <summary>
            Function to perform an intersection test between a ray and a plane.
            </summary>
            <param name="ray">Ray to test.</param>
            <param name="plane">Plane to test.</param>
            <returns>Result of the intersection query.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.IntersectionQueries.Query(SharpUtilities.Mathematics.Plane,SharpUtilities.Mathematics.Ray)">
            <summary>
            Function to perform an intersection test between a plane and a ray.
            </summary>
            <param name="plane">Plane to test.</param>
            <param name="ray">Ray to test.</param>		
            <returns>Result of the intersection query.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.IntersectionQueries.Query(SharpUtilities.Mathematics.Ray,SharpUtilities.Mathematics.AABB)">
            <summary>
            Function to perform an intersection test between a ray and an AABB.
            </summary>
            <param name="ray">Ray to test.</param>
            <param name="aabb">AABB to test.</param>
            <returns>Result of the intersection query.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.IntersectionQueries.Query(SharpUtilities.Mathematics.Plane,SharpUtilities.Mathematics.AABB)">
            <summary>
            Function to perform an intersection test on a plane and an AABB.
            </summary>
            <param name="plane">Plane to test.</param>
            <param name="aabb">AABB to test.</param>
            <returns>Intersection result.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.IntersectionQueries.Query(SharpUtilities.Mathematics.Ray,SharpUtilities.Mathematics.SphereVolume,System.Boolean)">
            <summary>
            Function to perform an intersection test on a ray and a sphere volume.
            </summary>
            <param name="ray">Ray to test.</param>
            <param name="sphere">Sphere to test.</param>
            <param name="discardInside">TRUE to discard results from inside the sphere, FALSE to include.</param>
            <returns>Intersection result.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.IntersectionQueries.Query(SharpUtilities.Mathematics.SphereVolume,SharpUtilities.Mathematics.AABB)">
            <summary>
            Function to perform an intersection test on a sphere and an AABB.
            </summary>
            <param name="sphere">Sphere to test.</param>
            <param name="box">AABB to test.</param>
            <returns>TRUE if an intersection exists, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.IntersectionQueries.Query(SharpUtilities.Mathematics.SphereVolume,SharpUtilities.Mathematics.Plane)">
            <summary>
            Function to perform an intersection test on a sphere and a plane.
            </summary>
            <param name="sphere">Sphere to test.</param>
            <param name="plane">Plane to test.</param>
            <returns>TRUE if an intersection exists, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.IntersectionQueries.Query(SharpUtilities.Mathematics.Ray,SharpUtilities.Mathematics.PlaneList,System.Boolean)">
            <summary>
            Function to perform an intersection test on a ray and a list of planes.
            </summary>
            <param name="ray">Ray to test.</param>
            <param name="planes">Planes to test.</param>
            <param name="invertNormals">TRUE to use inverse normals, FALSE to use regular.</param>
            <returns>Intersection results.</returns>
        </member>
        <member name="T:SharpUtilities.Console.ConsoleErrorCodes">
            <summary>
            Enumeration containing console error codes.
            </summary>
        </member>
        <member name="F:SharpUtilities.Console.ConsoleErrorCodes.WindowSizeOutOfBounds">
            <summary>
            Window size is does not fit within buffer size.
            </summary>
        </member>
        <member name="F:SharpUtilities.Console.ConsoleErrorCodes.CursorHeightInvalid">
            <summary>
            Cursor height is invalid.
            </summary>
        </member>
        <member name="F:SharpUtilities.Console.ConsoleErrorCodes.InvalidCursorPosition">
            <summary>
            Position of the cursor is out of bounds.
            </summary>
        </member>
        <member name="F:SharpUtilities.Console.ConsoleErrorCodes.InvalidStringBuffer">
            <summary>
            Size of the string buffer is invalid.
            </summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.FontCharacterSet">
            <summary>
            Enumeration for font code-page character sets.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontCharacterSet.ANSI">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontCharacterSet.Default">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontCharacterSet.Symbol">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontCharacterSet.ShiftJIS">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontCharacterSet.Hangeul">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontCharacterSet.Hangul">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontCharacterSet.GB2312">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontCharacterSet.ChineseBig5">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontCharacterSet.OEM">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontCharacterSet.Johab">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontCharacterSet.Hebrew">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontCharacterSet.Arabic">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontCharacterSet.Greek">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontCharacterSet.Turkish">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontCharacterSet.Vietnamese">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontCharacterSet.Thai">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontCharacterSet.EastEurope">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontCharacterSet.Russian">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontCharacterSet.Mac">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontCharacterSet.Baltic">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.FontPrecision">
            <summary>
            Enumeration for font output precision.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontPrecision.Default">
            <summary>
            
            </summary>		
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontPrecision.String">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontPrecision.Character">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontPrecision.Stroke">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontPrecision.TrueType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontPrecision.Device">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontPrecision.Raster">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontPrecision.TrueTypeOnly">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontPrecision.Outline">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontPrecision.ScreenOutline">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontPrecision.PostScriptOnly">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.FontPitchAndFamily">
            <summary>
            Enumeration for font pitches/families.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontPitchAndFamily.Default">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontPitchAndFamily.Fixed">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontPitchAndFamily.Variable">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontPitchAndFamily.DontCare">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontPitchAndFamily.Roman">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontPitchAndFamily.Swiss">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontPitchAndFamily.Modern">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontPitchAndFamily.Script">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontPitchAndFamily.Decorative">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.FontTypes">
            <summary>
            Enumeration for font types.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontTypes.Raster">
            <summary>
            Raster font.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontTypes.Device">
            <summary>
            Device font.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontTypes.TrueType">
            <summary>
            Truetype font.
            </summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.JoystickMessages">
            <summary>
            Enumeration for messages sent by the joystick if captured.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickMessages.Joystick1Moved">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickMessages.Joystick2Moved">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickMessages.Joystick1ZMoved">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickMessages.Joystick2ZMoved">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickMessages.Joystick1ButtonDown">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickMessages.Joystick2ButtonDown">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickMessages.Joystick1ButtonUp">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickMessages.Joystick2ButtonUp">
            <summary></summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.JoystickPOVDirections">
            <summary>
            Enumeration containing joystick POV directions.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickPOVDirections.Back">
            <summary>Hat is pulled back.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickPOVDirections.Centered">
            <summary>Hat is centered.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickPOVDirections.Forward">
            <summary>Hat is pushed forward.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickPOVDirections.Left">
            <summary>Hat is pushed left.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickPOVDirections.Right">
            <summary>Hat is pushed right.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.JoystickInfoFlags">
            <summary>
            Enumeration containing the joystick information flags.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickInfoFlags.All">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickInfoFlags.ReturnX">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickInfoFlags.ReturnY">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickInfoFlags.ReturnZ">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickInfoFlags.ReturnRudder">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickInfoFlags.ReturnAxis5">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickInfoFlags.ReturnAxis6">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickInfoFlags.ReturnPOV">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickInfoFlags.ReturnButtons">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickInfoFlags.ReturnRawData">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickInfoFlags.ReturnPOVContinuousDegreeBearings">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickInfoFlags.ReturnCentered">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickInfoFlags.UseDeadzone">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickInfoFlags.CalibrationReadAlways">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickInfoFlags.CalibrationReadXYOnly">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickInfoFlags.CalibrationRead3">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickInfoFlags.CalibrationRead4">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickInfoFlags.CalibrationReadXOnly">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickInfoFlags.CalibrationReadYOnly">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickInfoFlags.CalibrationRead5">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickInfoFlags.CalibrationRead6">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickInfoFlags.CalibrationReadZOnly">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickInfoFlags.CalibrationReadRudderOnly">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickInfoFlags.CalibrationReadAxis5Only">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickInfoFlags.CalibrationReadaxis6Only">
            <summary></summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.JoystickButtons">
            <summary>
            Enumeration for joystick buttons.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickButtons.Button1">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickButtons.Button2">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickButtons.Button3">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickButtons.Button4">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickButtons.Button1Changed">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickButtons.Button2Changed">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickButtons.Button3Changed">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickButtons.Button4Changed">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickButtons.Button5">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickButtons.Button6">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickButtons.Button7">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickButtons.Button8">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickButtons.Button9">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickButtons.Button10">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickButtons.Button11">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickButtons.Button12">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickButtons.Button13">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickButtons.Button14">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickButtons.Button15">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickButtons.Button16">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickButtons.Button17">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickButtons.Button18">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickButtons.Button19">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickButtons.Button20">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickButtons.Button21">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickButtons.Button22">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickButtons.Button23">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickButtons.Button24">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickButtons.Button25">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickButtons.Button26">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickButtons.Button27">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickButtons.Button28">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickButtons.Button29">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickButtons.Button30">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickButtons.Button31">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickButtons.Button32">
            <summary></summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.JoystickCapabilities">
            <summary>
            Enumeration for joystick capabilities.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickCapabilities.HasZ">
            <summary>Has a Z axis.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickCapabilities.HasRudder">
            <summary>Has a rudder axis.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickCapabilities.HasU">
            <summary>Has a 5th axis.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickCapabilities.HasV">
            <summary>Has a 6th axis.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickCapabilities.HasPOV">
            <summary>Has a POV hat.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickCapabilities.POV4Directions">
            <summary>Has a 4 direction POV hat.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JoystickCapabilities.POVContinuousDegreeBearings">
            <summary>Has a continuous degree bearing POV hat.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.HIDUsagePage">
            <summary>
            Enumeration containing HID usage page flags.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsagePage.Undefined">
            <summary>Unknown usage page.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsagePage.Generic">
            <summary>Generic desktop controls.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsagePage.Simulation">
            <summary>Simulation controls.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsagePage.VR">
            <summary>Virtual reality controls.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsagePage.Sport">
            <summary>Sports controls.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsagePage.Game">
            <summary>Games controls.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsagePage.Keyboard">
            <summary>Keyboard controls.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsagePage.LED">
            <summary>LED controls.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsagePage.Button">
            <summary>Button.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsagePage.Ordinal">
            <summary>Ordinal.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsagePage.Telephony">
            <summary>Telephony.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsagePage.Consumer">
            <summary>Consumer.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsagePage.Digitizer">
            <summary>Digitizer.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsagePage.PID">
            <summary>Physical interface device.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsagePage.Unicode">
            <summary>Unicode.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsagePage.AlphaNumeric">
            <summary>Alphanumeric display.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsagePage.Medical">
            <summary>Medical instruments.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsagePage.MonitorPage0">
            <summary>Monitor page 0.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsagePage.MonitorPage1">
            <summary>Monitor page 1.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsagePage.MonitorPage2">
            <summary>Monitor page 2.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsagePage.MonitorPage3">
            <summary>Monitor page 3.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsagePage.PowerPage0">
            <summary>Power page 0.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsagePage.PowerPage1">
            <summary>Power page 1.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsagePage.PowerPage2">
            <summary>Power page 2.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsagePage.PowerPage3">
            <summary>Power page 3.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsagePage.BarCode">
            <summary>Bar code scanner.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsagePage.Scale">
            <summary>Scale page.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsagePage.MSR">
            <summary>Magnetic strip reading devices.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.HIDUsage">
            <summary>
            Constants for HID usage flags.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.Pointer">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.Mouse">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.Joystick">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.Gamepad">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.Keyboard">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.Keypad">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.SystemControl">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.X">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.Y">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.Z">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.RelativeX">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.RelativeY">
            <summary></summary>		
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.RelativeZ">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.Slider">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.Dial">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.Wheel">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.HatSwitch">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.CountedBuffer">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.ByteCount">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.MotionWakeup">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.VX">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.VY">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.VZ">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.VBRX">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.VBRY">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.VBRZ">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.VNO">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.SystemControlPower">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.SystemControlSleep">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.SystemControlWake">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.SystemControlContextMenu">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.SystemControlMainMenu">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.SystemControlApplicationMenu">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.SystemControlHelpMenu">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.SystemControlMenuExit">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.SystemControlMenuSelect">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.SystemControlMenuRight">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.SystemControlMenuLeft">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.SystemControlMenuUp">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.SystemControlMenuDown">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.KeyboardNoEvent">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.KeyboardRollover">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.KeyboardPostFail">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.KeyboardUndefined">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.KeyboardaA">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.KeyboardzZ">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.Keyboard1">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.Keyboard0">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.KeyboardLeftControl">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.KeyboardLeftShift">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.KeyboardLeftALT">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.KeyboardLeftGUI">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.KeyboardRightControl">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.KeyboardRightShift">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.KeyboardRightALT">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.KeyboardRightGUI">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.KeyboardScrollLock">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.KeyboardNumLock">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.KeyboardCapsLock">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.KeyboardF1">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.KeyboardF12">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.KeyboardReturn">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.KeyboardEscape">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.KeyboardDelete">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.KeyboardPrintScreen">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDNumLock">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDCapsLock">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDScrollLock">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDCompose">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDKana">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDPower">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDShift">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDDoNotDisturb">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDMute">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDToneEnable">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDHighCutFilter">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDLowCutFilter">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDEqualizerEnable">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDSoundFieldOn">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDSurroundFieldOn">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDRepeat">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDStereo">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDSamplingRateDirect">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDSpinning">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDCAV">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDCLV">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDRecordingFormatDet">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDOffHook">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDRing">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDMessageWaiting">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDDataMode">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDBatteryOperation">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDBatteryOK">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDBatteryLow">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDSpeaker">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDHeadset">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDHold">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDMicrophone">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDCoverage">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDNightMode">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDSendCalls">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDCallPickup">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDConference">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDStandBy">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDCameraOn">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDCameraOff">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDOnLine">
            <summary></summary>		
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDOffLine">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDBusy">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDReady">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDPaperOut">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDPaperJam">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDRemote">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDForward">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDReverse">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDStop">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDRewind">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDFastForward">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDPlay">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDPause">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDRecord">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDError">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDSelectedIndicator">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDInUseIndicator">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDMultiModeIndicator">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDIndicatorOn">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDIndicatorFlash">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDIndicatorSlowBlink">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDIndicatorFastBlink">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDIndicatorOff">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDFlashOnTime">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDSlowBlinkOnTime">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDSlowBlinkOffTime">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDFastBlinkOnTime">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDFastBlinkOffTime">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDIndicatorColor">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDRed">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDGreen">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDAmber">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.LEDGenericIndicator">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.TelephonyPhone">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.TelephonyAnsweringMachine">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.TelephonyMessageControls">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.TelephonyHandset">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.TelephonyHeadset">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.TelephonyKeypad">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.TelephonyProgrammableButton">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.SimulationRudder">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HIDUsage.SimulationThrottle">
            <summary></summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.ErrorFormattingFlags">
            <summary>
            Enumeration containing the flags for error message formatting.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ErrorFormattingFlags.AllocateBuffer">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ErrorFormattingFlags.IgnoreInserts">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ErrorFormattingFlags.FromString">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ErrorFormattingFlags.FromHModule">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ErrorFormattingFlags.FromSystem">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ErrorFormattingFlags.ArgumentArray">
            <summary></summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.RawInputDeviceFlags">
            <summary>
            Enumeration containing flags for a raw input device.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RawInputDeviceFlags.None">
            <summary>No flags.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RawInputDeviceFlags.Remove">
            <summary>If set, this removes the top level collection from the inclusion list. This tells the operating system to stop reading from a device which matches the top level collection.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RawInputDeviceFlags.Exclude">
            <summary>If set, this specifies the top level collections to exclude when reading a complete usage page. This flag only affects a TLC whose usage page is already specified with PageOnly.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RawInputDeviceFlags.PageOnly">
            <summary>If set, this specifies all devices whose top level collection is from the specified usUsagePage. Note that Usage must be zero. To exclude a particular top level collection, use Exclude.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RawInputDeviceFlags.NoLegacy">
            <summary>If set, this prevents any devices specified by UsagePage or Usage from generating legacy messages. This is only for the mouse and keyboard.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RawInputDeviceFlags.InputSink">
            <summary>If set, this enables the caller to receive the input even when the caller is not in the foreground. Note that WindowHandle must be specified.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RawInputDeviceFlags.CaptureMouse">
            <summary>If set, the mouse button click does not activate the other window.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RawInputDeviceFlags.NoHotKeys">
            <summary>If set, the application-defined keyboard device hotkeys are not handled. However, the system hotkeys; for example, ALT+TAB and CTRL+ALT+DEL, are still handled. By default, all keyboard hotkeys are handled. NoHotKeys can be specified even if NoLegacy is not specified and WindowHandle is NULL.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RawInputDeviceFlags.AppKeys">
            <summary>If set, application keys are handled.  NoLegacy must be specified.  Keyboard only.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.RawInputType">
            <summary>
            Enumeration containing the type device the raw input is coming from.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RawInputType.Mouse">
            <summary>
            Mouse input.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RawInputType.Keyboard">
            <summary>
            Keyboard input.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RawInputType.HID">
            <summary>
            Another device that is not the keyboard or the mouse.
            </summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.RawMouseFlags">
            <summary>
            Enumeration containing the flags for raw mouse data.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RawMouseFlags.MoveRelative">
            <summary>Relative to the last position.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RawMouseFlags.MoveAbsolute">
            <summary>Absolute positioning.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RawMouseFlags.VirtualDesktop">
            <summary>Coordinate data is mapped to a virtual desktop.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RawMouseFlags.AttributesChanged">
            <summary>Attributes for the mouse have changed.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.RawMouseButtons">
            <summary>
            Enumeration containing the button data for raw mouse input.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RawMouseButtons.None">
            <summary>No button.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RawMouseButtons.LeftDown">
            <summary>Left (button 1) down.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RawMouseButtons.LeftUp">
            <summary>Left (button 1) up.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RawMouseButtons.RightDown">
            <summary>Right (button 2) down.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RawMouseButtons.RightUp">
            <summary>Right (button 2) up.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RawMouseButtons.MiddleDown">
            <summary>Middle (button 3) down.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RawMouseButtons.MiddleUp">
            <summary>Middle (button 3) up.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RawMouseButtons.Button4Down">
            <summary>Button 4 down.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RawMouseButtons.Button4Up">
            <summary>Button 4 up.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RawMouseButtons.Button5Down">
            <summary>Button 5 down.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RawMouseButtons.Button5Up">
            <summary>Button 5 up.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RawMouseButtons.MouseWheel">
            <summary>Mouse wheel moved.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.RawKeyboardFlags">
            <summary>
            Enumeration containing flags for raw keyboard input.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RawKeyboardFlags.KeyMake">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RawKeyboardFlags.KeyBreak">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RawKeyboardFlags.KeyE0">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RawKeyboardFlags.KeyE1">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RawKeyboardFlags.TerminalServerSetLED">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RawKeyboardFlags.TerminalServerShadow">
            <summary></summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.RawInputCommand">
            <summary>
            Enumeration contanining the command types to issue.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RawInputCommand.Input">
            <summary>
            Get input data.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RawInputCommand.Header">
            <summary>
            Get header data.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RawInputCommand.PreparsedData">
            <summary>
            Previously parsed data.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RawInputCommand.DeviceName">
            <summary>
            Only return the device name, return value means number of characters, not bytes.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RawInputCommand.DeviceInfo">
            <summary>
            Return RAWINPUTDEVICEINFO data.
            </summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.VirtualKeys">
            <summary>
            Enumeration for virtual keys.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.None">
            <summary>Key: None</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.LButton">
            <summary>Key: LButton</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.RButton">
            <summary>Key: RButton</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Cancel">
            <summary>Key: Cancel</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.MButton">
            <summary>Key: MButton</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.XButton1">
            <summary>Key: XButton1</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.XButton2">
            <summary>Key: XButton2</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Back">
            <summary>Key: Back</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Tab">
            <summary>Key: Tab</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.LineFeed">
            <summary>Key: LineFeed</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Clear">
            <summary>Key: Clear</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Enter">
            <summary>Key: Enter</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Return">
            <summary>Key: Return</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.ShiftKey">
            <summary>Key: ShiftKey</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.ControlKey">
            <summary>Key: ControlKey</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Menu">
            <summary>Key: Menu</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Pause">
            <summary>Key: Pause</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.CapsLock">
            <summary>Key: CapsLock</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Capital">
            <summary>Key: Capital</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.HangulMode">
            <summary>Key: HangulMode</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.HanguelMode">
            <summary>Key: HanguelMode</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.KanaMode">
            <summary>Key: KanaMode</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.JunjaMode">
            <summary>Key: JunjaMode</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.FinalMode">
            <summary>Key: FinalMode</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.KanjiMode">
            <summary>Key: KanjiMode</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.HanjaMode">
            <summary>Key: HanjaMode</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Escape">
            <summary>Key: Escape</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.IMEConvert">
            <summary>Key: IMEConvert</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.IMENonconvert">
            <summary>Key: IMENonconvert</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.IMEAccept">
            <summary>Key: IMEAccept</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.IMEAceept">
            <summary>Key: IMEAceept</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.IMEModeChange">
            <summary>Key: IMEModeChange</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Space">
            <summary>Key: Space</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Prior">
            <summary>Key: Prior</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.PageUp">
            <summary>Key: PageUp</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.PageDown">
            <summary>Key: PageDown</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Next">
            <summary>Key: Next</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.End">
            <summary>Key: End</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Home">
            <summary>Key: Home</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Left">
            <summary>Key: Left</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Up">
            <summary>Key: Up</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Right">
            <summary>Key: Right</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Down">
            <summary>Key: Down</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Select">
            <summary>Key: Select</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Print">
            <summary>Key: Print</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Execute">
            <summary>Key: Execute</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Snapshot">
            <summary>Key: Snapshot</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.PrintScreen">
            <summary>Key: PrintScreen</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Insert">
            <summary>Key: Insert</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Delete">
            <summary>Key: Delete</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Help">
            <summary>Key: Help</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.D0">
            <summary>Key: D0</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.D1">
            <summary>Key: D1</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.D2">
            <summary>Key: D2</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.D3">
            <summary>Key: D3</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.D4">
            <summary>Key: D4</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.D5">
            <summary>Key: D5</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.D6">
            <summary>Key: D6</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.D7">
            <summary>Key: D7</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.D8">
            <summary>Key: D8</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.D9">
            <summary>Key: D9</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.A">
            <summary>Key: A</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.B">
            <summary>Key: B</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.C">
            <summary>Key: C</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.D">
            <summary>Key: D</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.E">
            <summary>Key: E</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.F">
            <summary>Key: F</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.G">
            <summary>Key: G</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.H">
            <summary>Key: H</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.I">
            <summary>Key: I</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.J">
            <summary>Key: J</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.K">
            <summary>Key: K</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.L">
            <summary>Key: L</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.M">
            <summary>Key: M</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.N">
            <summary>Key: N</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.O">
            <summary>Key: O</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.P">
            <summary>Key: P</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Q">
            <summary>Key: Q</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.R">
            <summary>Key: R</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.S">
            <summary>Key: S</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.T">
            <summary>Key: T</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.U">
            <summary>Key: U</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.V">
            <summary>Key: V</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.W">
            <summary>Key: W</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.X">
            <summary>Key: X</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Y">
            <summary>Key: Y</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Z">
            <summary>Key: Z</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.LWin">
            <summary>Key: LWin</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.RWin">
            <summary>Key: RWin</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Apps">
            <summary>Key: Apps</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Sleep">
            <summary>Key: Sleep</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.NumPad0">
            <summary>Key: NumPad0</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.NumPad1">
            <summary>Key: NumPad1</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.NumPad2">
            <summary>Key: NumPad2</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.NumPad3">
            <summary>Key: NumPad3</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.NumPad4">
            <summary>Key: NumPad4</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.NumPad5">
            <summary>Key: NumPad5</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.NumPad6">
            <summary>Key: NumPad6</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.NumPad7">
            <summary>Key: NumPad7</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.NumPad8">
            <summary>Key: NumPad8</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.NumPad9">
            <summary>Key: NumPad9</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Multiply">
            <summary>Key: Multiply</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Add">
            <summary>Key: Add</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Separator">
            <summary>Key: Separator</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Subtract">
            <summary>Key: Subtract</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Decimal">
            <summary>Key: Decimal</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Divide">
            <summary>Key: Divide</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.F1">
            <summary>Key: F1</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.F2">
            <summary>Key: F2</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.F3">
            <summary>Key: F3</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.F4">
            <summary>Key: F4</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.F5">
            <summary>Key: F5</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.F6">
            <summary>Key: F6</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.F7">
            <summary>Key: F7</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.F8">
            <summary>Key: F8</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.F9">
            <summary>Key: F9</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.F10">
            <summary>Key: F10</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.F11">
            <summary>Key: F11</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.F12">
            <summary>Key: F12</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.F13">
            <summary>Key: F13</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.F14">
            <summary>Key: F14</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.F15">
            <summary>Key: F15</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.F16">
            <summary>Key: F16</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.F17">
            <summary>Key: F17</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.F18">
            <summary>Key: F18</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.F19">
            <summary>Key: F19</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.F20">
            <summary>Key: F20</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.F21">
            <summary>Key: F21</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.F22">
            <summary>Key: F22</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.F23">
            <summary>Key: F23</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.F24">
            <summary>Key: F24</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.NumLock">
            <summary>Key: NumLock</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Scroll">
            <summary>Key: Scroll</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.LShiftKey">
            <summary>Key: LShiftKey</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.RShiftKey">
            <summary>Key: RShiftKey</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.LControlKey">
            <summary>Key: LControlKey</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.RControlKey">
            <summary>Key: RControlKey</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.LMenu">
            <summary>Key: LMenu</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.RMenu">
            <summary>Key: RMenu</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.BrowserBack">
            <summary>Key: BrowserBack</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.BrowserForward">
            <summary>Key: BrowserForward</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.BrowserRefresh">
            <summary>Key: BrowserRefresh</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.BrowserStop">
            <summary>Key: BrowserStop</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.BrowserSearch">
            <summary>Key: BrowserSearch</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.BrowserFavorites">
            <summary>Key: BrowserFavorites</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.BrowserHome">
            <summary>Key: BrowserHome</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.VolumeMute">
            <summary>Key: VolumeMute</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.VolumeDown">
            <summary>Key: VolumeDown</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.VolumeUp">
            <summary>Key: VolumeUp</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.MediaNextTrack">
            <summary>Key: MediaNextTrack</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.MediaPreviousTrack">
            <summary>Key: MediaPreviousTrack</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.MediaStop">
            <summary>Key: MediaStop</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.MediaPlayPause">
            <summary>Key: MediaPlayPause</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.LaunchMail">
            <summary>Key: LaunchMail</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.SelectMedia">
            <summary>Key: SelectMedia</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.LaunchApplication1">
            <summary>Key: LaunchApplication1</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.LaunchApplication2">
            <summary>Key: LaunchApplication2</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.OemSemicolon">
            <summary>Key: OemSemicolon</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Oem1">
            <summary>Key: Oem1</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Oemplus">
            <summary>Key: Oemplus</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Oemcomma">
            <summary>Key: Oemcomma</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.OemMinus">
            <summary>Key: OemMinus</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.OemPeriod">
            <summary>Key: OemPeriod</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Oem2">
            <summary>Key: Oem2</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.OemQuestion">
            <summary>Key: OemQuestion</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Oem3">
            <summary>Key: Oem3</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Oemtilde">
            <summary>Key: Oemtilde</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Oem4">
            <summary>Key: Oem4</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.OemOpenBrackets">
            <summary>Key: OemOpenBrackets</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.OemPipe">
            <summary>Key: OemPipe</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Oem5">
            <summary>Key: Oem5</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.OemCloseBrackets">
            <summary>Key: OemCloseBrackets</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Oem6">
            <summary>Key: Oem6</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.OemQuotes">
            <summary>Key: OemQuotes</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Oem7">
            <summary>Key: Oem7</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Oem8">
            <summary>Key: Oem8</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Oem102">
            <summary>Key: Oem102</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.OemBackslash">
            <summary>Key: OemBackslash</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.ProcessKey">
            <summary>Key: ProcessKey</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Packet">
            <summary>Key: Packet</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Attn">
            <summary>Key: Attn</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Crsel">
            <summary>Key: Crsel</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Exsel">
            <summary>Key: Exsel</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.EraseEof">
            <summary>Key: EraseEof</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Play">
            <summary>Key: Play</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Zoom">
            <summary>Key: Zoom</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.NoName">
            <summary>Key: NoName</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Pa1">
            <summary>Key: Pa1</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.OemClear">
            <summary>Key: OemClear</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.KeyCode">
            <summary>Key: KeyCode</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Shift">
            <summary>Key: Shift</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Control">
            <summary>Key: Control</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Alt">
            <summary>Key: Alt</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.VirtualKeys.Modifiers">
            <summary>Key: Modifiers</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.FontWeight">
            <summary>
            Enumeration for font weights.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontWeight.DontCare">
            <summary>
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontWeight.Thin">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontWeight.ExtraLight">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontWeight.Light">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontWeight.Normal">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontWeight.Medium">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontWeight.SemiBold">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontWeight.Bold">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontWeight.ExtraBold">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontWeight.Heavy">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.FontOutputPrecision">
            <summary>
            Enumeration for font output precision.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontOutputPrecision.Default">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontOutputPrecision.String">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontOutputPrecision.Character">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontOutputPrecision.Stroke">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontOutputPrecision.TrueType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontOutputPrecision.Device">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontOutputPrecision.Raster">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontOutputPrecision.TrueTypeOnly">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontOutputPrecision.Outline">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontOutputPrecision.ScreenOutline">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontOutputPrecision.PostscriptOnly">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.FontClippingPrecision">
            <summary>
            Enumeration for clipping precision.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontClippingPrecision.Default">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontClippingPrecision.Character">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontClippingPrecision.Stroke">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontClippingPrecision.Mask">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontClippingPrecision.LeftHandAngles">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontClippingPrecision.TrueTypeAlways">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontClippingPrecision.DisableFontAssociation">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontClippingPrecision.Embedded">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.FontQuality">
            <summary>
            Enumeration for font quality.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontQuality.Default">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontQuality.Draft">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontQuality.Proof">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontQuality.NonAntialiased">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontQuality.AntiAliased">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontQuality.ClearType">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontQuality.ClearTypeNatural">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.SystemMetrics">
            <summary>
            Enumeration for system metrics.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.ScreenWidth">
            <summary>
            Screen width.
            </summary>		
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.ScreenHeight">
            <summary>
            Screen height.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.VerticalScrollbarArrowWidth">
            <summary>
            Width in pixels of the arrow bitmap on the vertical scrollbar.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.HorizontalScrollbarHeight">
            <summary>
            Height of a horizontal scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.CaptionHeight">
            <summary>
            Height, in pixels, of a normal caption area.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.BorderWidth">
            <summary>
            Width, in pixels, of a window border. This is equivalent to the SM_CXEDGE value for windows with the 3-D look.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.BorderHeight">
            <summary>
            Height, in pixels, of a window border. This is equivalent to the SM_CXEDGE value for windows with the 3-D look.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.DialogFrameThicknessWidth">
            <summary>
            Same as FixedFrameThicknessWidth.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.DialogFrameThicknessHeight">
            <summary>
            Same as FixedFrameThicknessHeight.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.VerticalThumbBoxHeight">
            <summary>
            Height of the thumb box in a vertical scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.HorizontalThumbBoxWidth">
            <summary>
            Width of the thumb box in a horizontal scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.DefaultIconWidth">
            <summary>
            Default width of an icon, in pixels. 
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.DefaultIconHeight">
            <summary>
            Default height of an icon, in pixels.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.CursorWidth">
            <summary>
            Width of a cursor, in pixels. The system cannot create cursors of other sizes.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.CursorHeight">
            <summary>
            Height of a cursor, in pixels. The system cannot create cursors of other sizes.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.SingleLineMenuHeight">
            <summary>
            Height of a single-line menu bar, in pixels.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.FullScreenWidth">
            <summary>
            Width of the client area for a full-screen window on the primary display monitor, in pixels. 
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.FullScreenHeight">
            <summary>
            Height of the client area for a full-screen window on the primary display monitor, in pixels. 
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.KanjiWindowHeight">
            <summary>
            For double byte character set versions of the system, this is the height of the Kanji window at the bottom of the screen, in pixels.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.MousePresent">
            <summary>
            Nonzero if a mouse is installed; zero otherwise. This value is rarely zero, because of support for virtual mice and because some systems detect the presence of the port instead of the presence of a mouse.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.VerticalScrollbarWidth">
            <summary>
            Width of a vertical scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.HorizontalScrollbarArrowWidth">
            <summary>
            Width of the arrow bitmap on a horizontal scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.DebugUser">
            <summary>
            Nonzero if the debug version of User.exe is installed; zero otherwise.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.MouseButtonsSwapped">
            <summary>
            Nonzero if the meanings of the left and right mouse buttons are swapped; zero otherwise.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.MinimumWindowWidth">
            <summary>
            Minimum width of a window, in pixels.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.MinimumWindowHeight">
            <summary>
            Minimum height of a window, in pixels.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.CaptionButtonWidth">
            <summary>
            Width of a button in a window's caption or title bar, in pixels.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.CaptionButtonHeight">
            <summary>
            Height of a button in a window's caption or title bar, in pixels.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.WindowBorderThicknessWidth">
            <summary>
            Thickness of the sizing border around the perimeter of a window that can be resized, in pixels. 
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.WindowBorderThicknessHeight">
            <summary>
            Thickness of the sizing border around the perimeter of a window that can be resized, in pixels.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.MinimumTrackingWidth">
            <summary>
            Minimum tracking width of a window, in pixels. The user cannot drag the window frame to a size smaller than these dimensions. 
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.MinimumTrackingHeight">
            <summary>
            Minimum tracking height of a window, in pixels. The user cannot drag the window frame to a size smaller than these dimensions. 
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.DoubleClickRegionWidth">
            <summary>
            Width of the rectangle around the location of a first click in a double-click sequence, in pixels. 
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.DoubleClickRegionHeight">
            <summary>
            Height of the rectangle around the location of a first click in a double-click sequence, in pixels. 
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.IconHorizontalSpacing">
            <summary>
            Width of a grid cell for items in large icon view, in pixels
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.IconVerticalSpacing">
            <summary>
            Height of a grid cell for items in large icon view, in pixels
            </summary>		
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.MenuDropAlignment">
            <summary>
            Nonzero if drop-down menus are right-aligned with the corresponding menu-bar item; zero if the menus are left-aligned.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.PenWindows">
            <summary>
            Nonzero if the Microsoft Windows for Pen computing extensions are installed; zero otherwise.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.DBCSEnabled">
            <summary>
            Nonzero if User32.dll supports DBCS; zero otherwise. 
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.MouseButtonCount">
            <summary>
            Number of buttons on mouse, or zero if no mouse is installed.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.FixedFrameWidth">
            <summary>
            Same as DialogFrameThicknessWidth.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.FixedFrameHeight">
            <summary>
            Same as DialogFrameThicknessHeight.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.SizingBorderWidth">
            <summary>
            Same as WindowBorderThicknessWidth.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.SizingBorderHeight">
            <summary>
            Same as WindowBorderThicknessHeight.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.SecurityPresent">
            <summary>
            Nonzero if security is present; zero otherwise.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.EdgeWidth">
            <summary>
            Width of a 3-D border, in pixels.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.EdgeHeight">
            <summary>
            Height of a 3-D border, in pixels.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.MinimizedSpacingWidth">
            <summary>
            Width of a grid cell for a minimized window, in pixels.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.MinimizedSpacingHeight">
            <summary>
            Height of a grid cell for a minimized window, in pixels.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.SmallIconWidth">
            <summary>
            Default width of a small icon.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.SmallIconHeight">
            <summary>
            Default height of a small icon.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.SmallCaptionHeight">
            <summary>
            Height of a small caption, in pixels.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.SmallCaptionButtonsWidth">
            <summary>
            Width of small caption buttons, in pixels.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.SmallCaptionButtonsHeight">
            <summary>
            Height of small caption buttons, in pixels.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.MenuBarButtonWidth">
            <summary>
            Width of menu bar buttons, such as the child window close button used in the multiple document interface, in pixels.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.MenuBarButtonHeight">
            <summary>
            Height of menu bar buttons, such as the child window close button used in the multiple document interface, in pixels.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.ArrangementFlags">
            <summary>
            Flags specifying how the system arranged minimized windows.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.MinimizedWindowWidth">
            <summary>
            Width of a minimized window, in pixels.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.MinimizedWindowHeight">
            <summary>
            Height of a minimized window, in pixels.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.MaximumTrackingWidth">
            <summary>
            Default maximum width of a window that has a caption and sizing borders, in pixels. 
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.MaximumTrackingHeight">
            <summary>
            Default maximum height of a window that has a caption and sizing borders, in pixels. 
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.MaximizedTopLevelWidth">
            <summary>
            Default width, in pixels, of a maximized top-level window on the primary display monitor.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.MaximizedTopLevelHeight">
            <summary>
            Default height, in pixels, of a maximized top-level window on the primary display monitor.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.NetworkPresent">
            <summary>
            Least significant bit is set if a network is present; otherwise, it is cleared. The other bits are reserved for future use.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.CleanBoot">
            <summary>
            Value that specifies how the system was started: 
            0 Normal boot 
            1 Fail-safe boot 
            2 Fail-safe with network boot 
            Fail-safe boot (also called SafeBoot, Safe Mode, or Clean Boot) bypasses the user's startup files.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.DragRectangleWidth">
            <summary>
            Width of a rectangle centered on a drag point to allow for limited movement of the mouse pointer before a drag operation begins, in pixels. It allows the user to click and release the mouse button easily without unintentionally starting a drag operation.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.DragRectangleHeight">
            <summary>
            Height of a rectangle centered on a drag point to allow for limited movement of the mouse pointer before a drag operation begins, in pixels. It allows the user to click and release the mouse button easily without unintentionally starting a drag operation.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.ShowSounds">
            <summary>
            Nonzero if the user requires an application to present information visually in situations where it would otherwise present the information only in audible form; zero otherwise. 
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.MenuCheckMarkBitmapWidth">
            <summary>
            Width of the default menu check-mark bitmap, in pixels.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.MenuCheckMarkBitmapHeight">
            <summary>
            Height of the default menu check-mark bitmap, in pixels.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.SlowMachine">
            <summary>
            Nonzero if the computer has a low-end (slow) processor; zero otherwise.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.MiddleEastEnabled">
            <summary>
            Nonzero if the system is enabled for Hebrew and Arabic languages, zero if not.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.MouseWheelPresent">
            <summary>
            Nonzero if a mouse with a wheel is installed; zero otherwise. 
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.VirtualScreenLeft">
            <summary>
            Coordinates for the left side of the virtual screen. The virtual screen is the bounding rectangle of all display monitors. 
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.VirtualScreenTop">
            <summary>
            Coordinates for the top side of the virtual screen. The virtual screen is the bounding rectangle of all display monitors. 
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.VirtualScreenWidth">
            <summary>
            Width of the virtual screen, in pixels. The virtual screen is the bounding rectangle of all display monitors.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.VirtualScreenHeight">
            <summary>
            Height of the virtual screen, in pixels. The virtual screen is the bounding rectangle of all display monitors.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.MonitorCount">
            <summary>
            Number of display monitors on the desktop.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.SameDisplayFormat">
            <summary>
            Nonzero if all the display monitors have the same color format, zero otherwise. Note that two displays can have the same bit depth, but different color formats. 
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.InputMethodManagedEnabled">
            <summary>
            Nonzero if Input Method Manager/Input Method Editor features are enabled; zero otherwise. 
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.FocusBorderWidth">
            <summary>
            Width of the left and right edges of the focus rectangle drawn by DrawFocusRect. This value is in pixels. 
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.FocusBorderHeight">
            <summary>
            Height of the left and right edges of the focus rectangle drawn by DrawFocusRect. This value is in pixels. 
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.TabletPC">
            <summary>
            Nonzero if the current operating system is the Windows XP Tablet PC edition, zero if not.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.MediaCenter">
            <summary>
            Nonzero if the current operating system is the Windows XP, Media Center Edition, zero if not.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.RemoteSession">
            <summary>
            This system metric is used in a Terminal Services environment. If the calling process is associated with a Terminal Services client session, the return value is nonzero. If the calling process is associated with the Terminal Server console session, the return value is zero. 
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.ShuttingDown">
            <summary>
            Nonzero if the current session is shutting down; zero otherwise. 
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SystemMetrics.RemoteControl">
            <summary>
            This system metric is used in a Terminal Services environment. Its value is nonzero if the current session is remotely controlled; zero otherwise. 
            </summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.EventHookTypes">
            <summary>
            Available event hooks.
            </summary>
            <remarks>See the MSDN documentation for more detail.</remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.EventHookTypes.JournalRecord">
            <summary>Journal record.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.EventHookTypes.JournalPlayback">
            <summary>Journal playback.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.EventHookTypes.Keyboard">
            <summary>Keyboard event.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.EventHookTypes.GetMessage">
            <summary>Get message.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.EventHookTypes.CallWindowProc">
            <summary>Window callback.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.EventHookTypes.ComputerBasedTraining">
            <summary>Computer based training.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.EventHookTypes.SystemMessageFilter">
            <summary>System message filter.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.EventHookTypes.Mouse">
            <summary>Mouse event.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.EventHookTypes.Hardware">
            <summary>Hardware.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.EventHookTypes.Debug">
            <summary>Debug.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.EventHookTypes.Shell">
            <summary>Shell.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.EventHookTypes.ForegroundIdle">
            <summary>Foreground idle.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.EventHookTypes.CallWindowProcReturn">
            <summary>Return from window callback procedure.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.EventHookTypes.PreviewKeyboard">
            <summary>Keyboard pre-event monitor.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.EventHookTypes.PreviewMouse">
            <summary>Mouse pre-event monitor.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.ControlEventTypes">
            <summary>
            Control event types.
            </summary>
            <remarks>See the MSDN documentation for more detail.</remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ControlEventTypes.CtrlC">
            <summary>Ctrl-C was pressed.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ControlEventTypes.Break">
            <summary>Break pressed.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ControlEventTypes.WindowClosed">
            <summary>Window closed.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ControlEventTypes.Logoff">
            <summary>Logoff.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ControlEventTypes.ShutDown">
            <summary>Shutdown.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.ConsoleControlFlags">
            <summary>
            Flags for shifted keys with console events.
            </summary>
            <remarks>See the MSDN documentation for more detail.</remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ConsoleControlFlags.RightAltPressed">
            <summary>Right ALT key pressed.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ConsoleControlFlags.LeftAltPressed">
            <summary>Left ALT key pressed.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ConsoleControlFlags.RightCtrlPressed">
            <summary>Right CTRL key pressed.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ConsoleControlFlags.LeftCtrlPressed">
            <summary>Left CTRL key pressed.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ConsoleControlFlags.ShiftPressed">
            <summary>Shift key pressed.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.ConsoleEventTypes">
            <summary>
            Console event types.
            </summary>
            <remarks>See the MSDN documentation for more detail.</remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ConsoleEventTypes.KeyEvent">
            <summary>Key event record present.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ConsoleEventTypes.MouseEvent">
            <summary>Mouse event record present.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ConsoleEventTypes.BufferSizeEvent">
            <summary>Buffer size event record present.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ConsoleEventTypes.MenuEvent">
            <summary>Menu event record present.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ConsoleEventTypes.FocusEvent">
            <summary>Focus event record present.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.ConsoleMouseEventFlags">
            <summary>
            Flags for the mouse event for the console.
            </summary>
            <remarks>See the MSDN documentation for more detail.</remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ConsoleMouseEventFlags.Moved">
            <summary>Mouse has been moved.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ConsoleMouseEventFlags.DoubleClick">
            <summary>Mouse button double clicked.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ConsoleMouseEventFlags.Wheel">
            <summary>Mouse wheel moved.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.ConsoleMouseButtonFlags">
            <summary>
            Flags for the mouse button event for the console.
            </summary>
            <remarks>See the MSDN documentation for more detail.</remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ConsoleMouseButtonFlags.Left1stButton">
            <summary>Left-most button.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ConsoleMouseButtonFlags.RightButton">
            <summary>Right-most button.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ConsoleMouseButtonFlags.Left2ndButton">
            <summary>2nd left-most button.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ConsoleMouseButtonFlags.Left3rdButton">
            <summary>3rd left-most button.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ConsoleMouseButtonFlags.Left4thButton">
            <summary>4th left-most button.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.WindowMessages">
            <summary>
            Types of messages that passed to a window.
            </summary>
            <remarks>See the MSDN documentation for more detail.</remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.SysCommand">
            <summary>System command (WM_SYSCOMMAND)</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.Quit">
            <summary>Quit command (WM_QUIT)</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.Size">
            <summary>Window has been resized. (WM_SIZE)</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.QueryDragIcon">
            <summary>Query the drag icon. (WM_QUERYDRAGICON)</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.GetIcon">
            <summary>Get the window icon. (WM_GETICON)</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.SetIcon">
            <summary>Set the window icon. (WM_SETICON)</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.NULL">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.Create">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.Destroy">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.Move">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.Activate">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.SetFocus">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.KillFocus">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.Enable">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.SetRedraw">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.SetText">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.GetText">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.GetTextLength">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.Paint">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.Close">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.QueryEndSession">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.QueryOpen">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.EraseBackground">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.SystemColorChange">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.EndSession">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.ShowWindow">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.ControlColor">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.WinINIChange">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.SettingChange">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.DeviceModeChange">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.ActivateApplication">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.FontChange">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.TimeChange">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.CancelMode">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.SetCursor">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.MouseActivate">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.ChildActivate">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.QueueSync">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.GetMinMaxInformation">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.PaintIcon">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.IconEraseBackground">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.NextDialogControl">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.SpoolerStatus">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.DrawItem">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.MeasureItem">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.DeleteItem">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.VKeyToItem">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.CharToItem">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.SetFont">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.GetFont">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.SetHotKey">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.GetHotKey">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.CompareItem">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.GetObject">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.Compacting">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.COMMNotify">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.WindowPositionChanging">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.WindowPositionChanged">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.Power">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.CopyData">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.CancelJournal">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.Notify">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.InputLanguageChangeRequest">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.InputLanguageChange">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.TCard">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.Help">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.UserChanged">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.NotifyFormat">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.ContextMenu">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.StyleChanging">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.StyleChanged">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.DisplayChange">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.NCCreate">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.NCDestroy">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.NCCalcSize">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.NCHitTest">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.NCPaint">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.NCActivate">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.GetDialogCode">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.SynchronizePaint">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.NCMouseMove">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.NCLeftButtonDown">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.NCLeftButtonUp">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.NCLeftButtonDoubleClick">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.NCRightButtonDown">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.NCRightButtonUp">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.NCRightButtonDoubleClick">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.NCMiddleButtonDown">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.NCMiddleButtonUp">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.NCMiddleButtonDoubleClick">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.KeyDown">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.KeyUp">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.Char">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.DeadChar">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.SysKeyDown">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.SysKeyUp">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.SysChar">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.SysDeadChar">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.KeyLast">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.IMEStartComposition">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.IMEEndComposition">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.IMEComposition">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.IMEKeyLast">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.InitializeDialog">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.Command">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.Timer">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.HorizontalScroll">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.VerticalScroll">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.InitializeMenu">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.InitializeMenuPopup">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.MenuSelect">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.MenuChar">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.EnterIdle">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.MenuRightButtonUp">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.MenuDrag">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.MenuGetObject">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.UnInitializeMenuPopup">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.MenuCommand">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.ControlColorMessageBox">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.ControlColorEdit">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.ControlColorListBox">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.ControlColorButton">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.ControlColorDialog">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.ControlColorScrollbar">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.ControlColorStatic">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.MouseMove">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.LeftButtonDown">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.LeftButtonUp">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.LeftButtonDoubleClick">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.RightButtonDown">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.RightButtonUp">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.RightButtonDoubleClick">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.MiddleButtonDown">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.MiddleButtonUp">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.MiddleButtonDoubleClick">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.MouseWheel">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.ParentNotify">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.EnterMenuLoop">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.ExitMenuLoop">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.NextMenu">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.Sizing">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.CaptureChanged">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.Moving">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.DeviceChange">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.MDICreate">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.MDIDestroy">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.MDIActivate">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.MDIRestore">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.MDINext">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.MDIMaximize">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.MDITile">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.MDICacade">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.MDIIconArrange">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.MDIGetActive">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.MDISetMenu">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.EnterSizeMove">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.ExitSizeMove">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.DropFiles">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.MDIRefreshMenu">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.IMESetContext">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.IMENotify">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.IMEControl">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.IMECompositionFull">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.IMESelect">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.IMEChar">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.IMERequest">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.IMEKeyDown">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.IMEKeyUp">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.MouseHover">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.MouseLeave">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.Cut">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.Copy">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.Paste">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.Clear">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.Undo">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.RenderFormat">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.RenderAllFormats">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.DestroyClipboard">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.DrawClipboard">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.Paintclipboard">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.VerticalScrollClipboard">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.SizeClipboard">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.AskClipboardFormatName">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.ChangeClipboardChain">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.HorizontalScrollClipboard">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.QueryNewPalette">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.PaletteIsChanging">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.PaletteChanged">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.HotKey">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.Print">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.PrintClient">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.HandheldFirst">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.HandheldLast">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.AFXFirst">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.AFXLast">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.PenWindowFirst">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.PenWindowLast">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.Application">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.User">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowMessages.RawInput">
            <summary></summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.SendMessageTimeoutFlags">
            <summary>
            Flags passed to SendMessageTimeout().
            </summary>
            <remarks>See the MSDN documentation for more detail.</remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SendMessageTimeoutFlags.AbortIfHung">
            <summary>Aborts the send if the thread appears to be hung.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.BrushStyles">
            <summary>
            Brush styles used with GDI applications.
            </summary>
            <remarks>See the MSDN documentation for more detail.</remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.BrushStyles.White">
            <summary>A white brush.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.BrushStyles.LightGray">
            <summary>A light gray brush.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.BrushStyles.Gray">
            <summary>A gray brush.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.BrushStyles.DarkGray">
            <summary>A dark gray brush.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.BrushStyles.Black">
            <summary>A black brush.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.BrushStyles.Null">
            <summary>A null brush.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.BrushStyles.Hollow">
            <summary>A hollow brush (same as null).</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.PenStyles">
            <summary>
            Pen styles used with GDI applications.
            </summary>
            <remarks>See the MSDN documentation for more detail.</remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.PenStyles.White">
            <summary>A white pen.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.PenStyles.Black">
            <summary>A black pen.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.PenStyles.Null">
            <summary>A NULL pen.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.FontStyles">
            <summary>
            Font styles used with GDI applications.
            </summary>
            <remarks>See the MSDN documentation for more detail.</remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontStyles.OEMFixed">
            <summary>Fixed OEM font.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontStyles.ANSIFixed">
            <summary>Fixed ANSI font.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontStyles.ANSIVariable">
            <summary>Variable ANSI font.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontStyles.System">
            <summary>System font.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontStyles.Device">
            <summary>Device font.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FontStyles.SystemFixed">
            <summary>Fixed system font.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.WParameters">
            <summary>
            wParam parameters to send with window messages.
            </summary>
            <remarks>See the MSDN documentation for more detail.</remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WParameters.IconBig">
            <summary>Set/Get the large icon with WM_GET/SETICON.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WParameters.IconSmall">
            <summary>Set/Get the small icon with WM_GET/SETICON.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.LParameters">
            <summary>
            lParam parameters to send with window messages.
            </summary>
            <remarks>See the MSDN documentation for more detail.</remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.LParameters.ParentClosing">
            <summary>Parent window is being minimized.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.LParameters.OtherZoom">
            <summary>The window is being covered by another window that is maximized.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.LParameters.ParentOpening">
            <summary>Parent window is being restored.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.LParameters.OtherUnZoom">
            <summary>The window is being uncovered.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.SetWindowPositionFlags">
            <summary>
            Flags to pass to the SetWindowPosition() function.
            </summary>
            <remarks>See the MSDN documentation for more detail.</remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SetWindowPositionFlags.NoSize">
            <summary>Don't resize.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SetWindowPositionFlags.NoMove">
            <summary>Don't move.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SetWindowPositionFlags.NoZOrder">
            <summary>Don't change the Z order of the window.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SetWindowPositionFlags.NoRedraw">
            <summary>Don't redraw the window.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SetWindowPositionFlags.NoActivate">
            <summary>Don't activate the window.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SetWindowPositionFlags.FrameChanged">
            <summary>Flag to indicate the window has changed.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SetWindowPositionFlags.ShowWindow">
            <summary>Displays the window.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SetWindowPositionFlags.HideWindow">
            <summary>Hides the window.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SetWindowPositionFlags.NoCopyBits">
            <summary>Erases the contents of the client area.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SetWindowPositionFlags.NoOwnerZOrder">
            <summary>Don't change the owner's Z order position.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SetWindowPositionFlags.NoSendChanging">
            <summary>Don't send the changing message (WM_WINDOWPOSCHANGING).</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SetWindowPositionFlags.DrawFrame">
            <summary>Same as FrameChanged.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SetWindowPositionFlags.AsynchronousWindowPosition">
            <summary>This prevents the calling thread from blocking its execution while other threads process the request.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.SetWindowPositionHandles">
            <summary>
            Default window handles for the SetWindowPosition() function.
            </summary>
            <remarks>See the MSDN documentation for more detail.</remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SetWindowPositionHandles.Top">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SetWindowPositionHandles.Bottom">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SetWindowPositionHandles.TopMost">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SetWindowPositionHandles.NoTopMost">
            <summary></summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.SysCommands">
            <summary>
            Types of System commands.
            </summary>
            <remarks>
            See the MSDN documentation for more detail.
            <para>
            These are often used with the WM_SYSCOMMAND message.
            </para>
            </remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SysCommands.ScreenSave">
            <summary>Screen saver. (SC_SCREENSAVE)</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SysCommands.MonitorPower">
            <summary>Monitor power saving. (SC_MONITORPOWER)</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.PeekMessageFlags">
            <summary>
            Flags for PeekMessage function.
            </summary>
            <remarks>See the MSDN documentation for more detail.</remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.PeekMessageFlags.NoRemove">
            <summary>Keep message on the message queue.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.PeekMessageFlags.Remove">
            <summary>Remove message from the queue.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.PeekMessageFlags.NoYield">
            <summary>Do not yield execution to waiting threads.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.StandardHandles">
            <summary>
            Types of standard handles.
            </summary>
            <remarks>See the MSDN documentation for more detail.</remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.StandardHandles.Input">
            <summary>Standard input.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.StandardHandles.Output">
            <summary>Standard output.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.StandardHandles.Error">
            <summary>Standard error.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.ConsoleAttributes">
            <summary>
            Types of foreground colors.
            </summary>
            <remarks>
            This is slightly different than the console colors listed in the MSDN documentation.
            <para>
            The <seealso cref="T:SharpUtilities.Console.ConsoleApplication">ConsoleApplication</seealso> object handles translation to the proper API colors.
            </para>
            </remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ConsoleAttributes.Black">
            <summary>Black.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ConsoleAttributes.FGRed">
            <summary>Foreground red component.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ConsoleAttributes.FGBlue">
            <summary>Foreground blue component.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ConsoleAttributes.FGGreen">
            <summary>Foreground green component.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ConsoleAttributes.FGIntensity">
            <summary>Foreground intensity.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ConsoleAttributes.BGRed">
            <summary>Background red component.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ConsoleAttributes.BGGreen">
            <summary>Background green component.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ConsoleAttributes.BGBlue">
            <summary>Background blue component.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ConsoleAttributes.BGIntensity">
            <summary>Background intensity.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.ConsoleModeFlags">
            <summary>
            Flags for console modes.
            </summary>
            <remarks>See the MSDN documentation for more detail.</remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ConsoleModeFlags.EnableProcessedOutput">
            <summary>Flag to enable processed output.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ConsoleModeFlags.EnableWrapAtEOLOutput">
            <summary>Flag to enable text wrapping on output.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ConsoleModeFlags.EnableProcessedInput">
            <summary>Flag to enable processed input.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ConsoleModeFlags.EnableLineInput">
            <summary>Flag to enable line input.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ConsoleModeFlags.EnableEchoInput">
            <summary>Flag to enable echo of line input.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ConsoleModeFlags.EnableWindowInput">
            <summary>Flag to enable window input.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ConsoleModeFlags.EnableMouseInput">
            <summary>Flag to enable mouse input.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.ExtendedNameFormat">
            <summary>
            Flags for name formatting.
            </summary>
            <remarks>See the MSDN documentation for more detail.</remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ExtendedNameFormat.Unknown">
            <summary>Unknown formatting.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ExtendedNameFormat.FullyQualifiedDN">
            <summary>Fully qualified domain name.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ExtendedNameFormat.SamCompatible">
            <summary>SAM compatible.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ExtendedNameFormat.Display">
            <summary>Display name.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ExtendedNameFormat.UniqueId">
            <summary>Unique ID.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ExtendedNameFormat.Canonical">
            <summary>Canonical name.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ExtendedNameFormat.UserPrincipal">
            <summary>User principal name.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ExtendedNameFormat.CanonicalEx">
            <summary>Canonical name extended.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ExtendedNameFormat.ServicePrincipal">
            <summary>Service principal name.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ExtendedNameFormat.DnsDomain">
            <summary>DNS domain name.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.ComputerNameFormat">
            <summary>
            Flags for computer name formatting.
            </summary>
            <remarks>See the MSDN documentation for more detail.</remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ComputerNameFormat.NetBIOS">
            <summary>NET BIOS name.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ComputerNameFormat.DnsHostname">
            <summary>DNS host name.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ComputerNameFormat.NameDnsDomain">
            <summary>DNS domain name.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ComputerNameFormat.DnsFullyQualified">
            <summary>Fully qualified name.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ComputerNameFormat.PhysicalNetBIOS">
            <summary>Physical NET BIOS name.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ComputerNameFormat.PhysicalDnsHostname">
            <summary>Physical DNS host name.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ComputerNameFormat.PhysicalDnsDomain">
            <summary>Physical DNS domain name.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ComputerNameFormat.PhysicalDnsFullyQualified">
            <summary>Physical fully qualified name.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.ShellHookMessages">
            <summary>
            Windows Shell hooks.
            </summary>
            <remarks>See the MSDN documentation for more detail.</remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShellHookMessages.WindowCreated">
            <summary>Window created message.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShellHookMessages.WindowDestroyed">
            <summary>Window destroyed message.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShellHookMessages.ActivateShellWindow">
            <summary>Activate shell window message.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShellHookMessages.WindowActivated">
            <summary>Window activated message.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShellHookMessages.GetMinimumRectangle">
            <summary>Get minimum rectangle bounds message.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShellHookMessages.Redraw">
            <summary>Redraw message.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShellHookMessages.TaskManager">
            <summary>Task manager message.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShellHookMessages.Language">
            <summary>Language message.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShellHookMessages.AccessibilityState">
            <summary>Accessibility state message.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.WindowLongFields">
            <summary>
            Fields used in Get/SetWindowLong() functions.
            </summary>
            <remarks>See the MSDN documentation for more detail.</remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowLongFields.ParentHWND">
            <summary>Parent window handle.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowLongFields.StyleEX">
            <summary>Extended window style.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowLongFields.Style">
            <summary>Window style.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.ClassLongFields">
            <summary>
            Fields used in Get/SetClassLong() functions.
            </summary>
            <remarks>See the MSDN documentation for more detail.</remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ClassLongFields.IconHandle">
            <summary>Handle to the large window icon.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ClassLongFields.SmallIconHandle">
            <summary>Handle to the small window icon.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.RedrawWindowFlags">
            <summary>
            Flags for the RedrawWindow() function.
            </summary>
            <remarks>See the MSDN documentation for more detail.</remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RedrawWindowFlags.Invalidate">
            <summary>Invalidates the window.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RedrawWindowFlags.InternalPaint">
            <summary>Forces a WM_PAINT to be sent to the window.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RedrawWindowFlags.Erase">
            <summary>Erases the window, must be used with Invalidate.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RedrawWindowFlags.Validate">
            <summary>Validates the regions.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RedrawWindowFlags.NoInternalPaint">
            <summary>Suppresses the WM_PAINT message, except those regions that need updating.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RedrawWindowFlags.NoErase">
            <summary>Suppresses the WM_ERASEBKGND message.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RedrawWindowFlags.NoChildren">
            <summary>Exclude child windows.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RedrawWindowFlags.AllChildren">
            <summary>Include child windows.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RedrawWindowFlags.UpdateNow">
            <summary>Forces the window to update.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RedrawWindowFlags.EraseNow">
            <summary>Forces the window to erase.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RedrawWindowFlags.Frame">
            <summary>Sends a WM_NCPAINT message to the window, must be used with Invalidate.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RedrawWindowFlags.NoFrame">
            <summary>Suppresses the WM_NCPAINT message, must be used with Invalidate.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.ShowWindowFlags">
            <summary>
            Flags for the ShowWindow command.
            </summary>
            <remarks>See the MSDN documentation for more detail.</remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShowWindowFlags.Hide">
            <summary>Hides the window.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShowWindowFlags.ShowNormal">
            <summary>Activates and displays the window.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShowWindowFlags.Normal">
            <summary>Same as ShowNormal.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShowWindowFlags.ShowMinimized">
            <summary>Activates and displays the window in a minimized state.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShowWindowFlags.ShowMaximized">
            <summary>Activates and displays the window in a maximized state.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShowWindowFlags.Maximize">
            <summary>Same as ShowMaximized.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShowWindowFlags.ShowNoActivate">
            <summary>Shows the window, but doesn't activate it.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShowWindowFlags.Show">
            <summary>Shows the window and activates it.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShowWindowFlags.Minimize">
            <summary>Activates the window and minimizes it.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShowWindowFlags.ShowMinimizedNoActivate">
            <summary>Shows the window in a minimized state, but does not activate it.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShowWindowFlags.ShowCurrentNoActivate">
            <summary>Shows the window in a normal state, but does not activate it.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShowWindowFlags.Restore">
            <summary>Restores the window from a maximized or minimized state.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShowWindowFlags.ShowDefault">
            <summary>Show the window with the default state.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShowWindowFlags.ForceMinimize">
            <summary>Forces a window to minimize.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.WindowStylesEx">
            <summary>
            Window extended style flags.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStylesEx.DialogModalFrame">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStylesEx.NorParentNotify">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStylesEx.TopMost">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStylesEx.AcceptFiles">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStylesEx.Transparent">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStylesEx.MDIChild">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStylesEx.ToolWindow">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStylesEx.WindowEdge">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStylesEx.ClientEdge">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStylesEx.ContextHelp">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStylesEx.Right">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStylesEx.Left">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStylesEx.RightToLeftReading">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStylesEx.LeftToRightReading">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStylesEx.LeftScrollbar">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStylesEx.RightScrollbar">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStylesEx.ControlParent">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStylesEx.StaticEdge">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStylesEx.ApplicationWindow">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStylesEx.OverlappedWindow">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStylesEx.PaletteWindow">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStylesEx.LayeredWindow">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStylesEx.DontInheritLayout">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStylesEx.LayoutRightToLeft">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStylesEx.Composited">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStylesEx.NoActivate">
            <summary></summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.WindowStyles">
            <summary>
            Window style flags.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStyles.Border">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStyles.Caption">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStyles.Child">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStyles.ChildWindow">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStyles.ClipChildren">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStyles.ClipSiblings">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStyles.Disabled">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStyles.DialogFrame">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStyles.Group">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStyles.HorizontalScroll">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStyles.Maximize">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStyles.MaximizeBox">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStyles.Minimize">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStyles.MinimizeBox">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStyles.Overlapped">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStyles.Popup">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStyles.SystemMenu">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStyles.TabStop">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStyles.ThickFrame">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStyles.Visible">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStyles.VerticalScroll">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStyles.Iconic">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStyles.PopupWindow">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStyles.SizeBox">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStyles.Tiled">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WindowStyles.OverlappedWindow">
            <summary></summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.BinaryRasterOps">
            <summary>
            Binary raster operation flags.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.BinaryRasterOps.Black">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.BinaryRasterOps.NotMergePen">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.BinaryRasterOps.MaskNotPen">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.BinaryRasterOps.NotCopyPen">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.BinaryRasterOps.MaskPenNot">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.BinaryRasterOps.Not">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.BinaryRasterOps.XORPen">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.BinaryRasterOps.NotMaskPen">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.BinaryRasterOps.MaskPen">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.BinaryRasterOps.NotXORPen">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.BinaryRasterOps.NOP">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.BinaryRasterOps.MergeNotPen">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.BinaryRasterOps.CopyPen">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.BinaryRasterOps.MergePenNot">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.BinaryRasterOps.MergePen">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.BinaryRasterOps.White">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.BinaryRasterOps.Last">
            <summary></summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.TernaryRasterOps">
            <summary>
            Ternary raster operation flags.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.TernaryRasterOps.SourceCopy">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.TernaryRasterOps.SourcePaint">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.TernaryRasterOps.SourceAnd">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.TernaryRasterOps.SourceInvert">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.TernaryRasterOps.SourceErase">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.TernaryRasterOps.NotSourceCopy">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.TernaryRasterOps.NotSourceErase">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.TernaryRasterOps.MergeCopy">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.TernaryRasterOps.MergePaint">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.TernaryRasterOps.PatternCopy">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.TernaryRasterOps.PatternPaint">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.TernaryRasterOps.PatternInvert">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.TernaryRasterOps.DestinationInvert">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.TernaryRasterOps.Black">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.TernaryRasterOps.White">
            <summary></summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.HotkeyModifierFlags">
            <summary>
            Hot key modifier flags.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HotkeyModifierFlags.Alt">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HotkeyModifierFlags.Control">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HotkeyModifierFlags.Shift">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.HotkeyModifierFlags.Windows">
            <summary></summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.ShellIconSize">
            <summary>
            Shell icon size.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShellIconSize.Large">
            <summary>
            Large icon.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShellIconSize.Small">
            <summary>
            Small icon.
            </summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.ShellInfoFlags">
            <summary>
            Flags for SHGetInfo.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShellInfoFlags.Icon">
            <summary>
            Get icon.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShellInfoFlags.DisplayName">
            <summary>
            Get display name.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShellInfoFlags.TypeName">
            <summary>
            Get type name.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShellInfoFlags.Attributes">
            <summary>
            Get attributes.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShellInfoFlags.IconLocation">
            <summary>
            Get icon location.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShellInfoFlags.EXEType">
            <summary>
            Get EXE type.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShellInfoFlags.SystemIconIndex">
            <summary>
            Get system icon index.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShellInfoFlags.LinkOverlay">
            <summary>
            Put a link overlay on the icon.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShellInfoFlags.Selected">
            <summary>
            Show icon as selected.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShellInfoFlags.AttributesSpecified">
            <summary>
            Get specified attributes.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShellInfoFlags.LargeIcon">
            <summary>
            Get large icon.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShellInfoFlags.SmallIcon">
            <summary>
            Get small icon.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShellInfoFlags.OpenIcon">
            <summary>
            Get open icon.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShellInfoFlags.ShellIconSize">
            <summary>
            Get shell icon size.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShellInfoFlags.PIDL">
            <summary>
            Path is a PIDL.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShellInfoFlags.UseFileAttributes">
            <summary>
            Use dwFileAttribute.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShellInfoFlags.AddOverlays">
            <summary>
            Apply overlays.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ShellInfoFlags.OverlayIndex">
            <summary>
            Get the index of the overlay in the upper 8 bits of the IconIndex member.
            </summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.FONTENUMPROC">
            <summary>
            Callback function for the font family enumeration method.
            </summary>
            <param name="lpelfe">Info about the logical attributes of the font.</param>
            <param name="lpntme">Info about the physical attributes of the font.</param>
            <param name="FontType">Type of font being enumerated.</param>
            <param name="lParam">User specified parameter.</param>
            <returns></returns>
        </member>
        <member name="T:SharpUtilities.Native.Win32.Win32API">
            <summary>
            Static class for Native Win32 methods and corresponding structures.
            </summary>
            <remarks>
            This is a grouping of any API calls regularly used by SharpUtilities or its dependant applications.
            <para>
            This list is by no means complete.  The Win32 API is just massive and would probably take a lifetime to map.
            </para>
            	<para>
            These calls are considered "unsafe" and thus should be used with care.  If you don't know how to use a function, or why you want it, you probably don't need to use them.
            </para>
            	<para>
            Please note that a lot of the enumerators/structures have slightly different names than their Win32 counterparts.  This was done for the sake of readability.  This does NOT affect their results or their effect on the results of their related functionality.
            </para>
            </remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.Win32API.MAX_PATH">
            <summary>Maximum number of characters that can fit into a path.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.Win32API.JOYERR_UNPLUGGED">
            <summary>Joystick is unplugged.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.Win32API.JOYERR_NOCANDO">
            <summary>Joystick is already captured or timer is unavailable.</summary>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.EnumFontFamiliesEx(System.IntPtr,SharpUtilities.Native.Win32.LOGFONT@,SharpUtilities.Native.Win32.FONTENUMPROC,System.IntPtr,System.UInt32)">
            <summary>
            Function to enumerate font families.
            </summary>
            <param name="hDC">Device context.</param>
            <param name="lpLogFont">LOGFONT structure that contains information about the fonts to enumerate.</param>
            <param name="lpEnumFontProc">Callback for the enumerator.</param>
            <param name="lParam">Parameter to pass to the callback.</param>
            <param name="dw">Reserved.</param>
            <returns>The return value is the last value returned by the callback function. This value depends on which font families are available for the specified device.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.GetKeyState(System.Windows.Forms.Keys)">
            <summary>
            Function to return the state of a specified key.
            </summary>
            <param name="nVirtKey">Key state to retrieve.</param>
            <returns>A bitmap containing state information about they key.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.ExtractIconEx(System.String,System.Int32,System.IntPtr[],System.IntPtr[],System.Int32)">
            <summary>
            Function to extract an icon from a file.
            </summary>
            <param name="lpszFile">File containing the icon.</param>
            <param name="nIconIndex">Index of the icon.</param>
            <param name="phIconLarge">List of 32x32 icons.</param>
            <param name="phIconSmall">List of 16x16 icons.</param>
            <param name="nIcons">Number of icons.</param>
            <returns>If the nIconIndex parameter is -1, the phiconLarge parameter is NULL, and the phiconSmall parameter is NULL, then the return value is the number of icons contained in the specified file. Otherwise, the return value is the number of icons successfully extracted from the file.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.SHGetFileInfo(System.String,System.UInt32,SharpUtilities.Native.Win32.SHFILEINFO@,System.UInt32,System.UInt32)">
            <summary>
            Function to get file information from the shell.
            </summary>
            <param name="pszPath">Path to the file.</param>
            <param name="dwFileAttributes">File attributes.</param>
            <param name="psfi">GetFileInfo data.</param>
            <param name="cbSizeFileInfo">Size of structure.</param>
            <param name="uFlags">Flags to use.</param>
            <returns>Returns a value whose meaning depends on the uFlags parameter. If uFlags does not contain SHGFI_EXETYPE or SHGFI_SYSICONINDEX, the return value is nonzero if successful, or zero otherwise.  If uFlags contains the SHGFI_EXETYPE flag, the return value specifies the type of the executable file</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.DestroyIcon(System.IntPtr)">
            <summary>
            Function to destroy an unmanaged icon resource.
            </summary>
            <param name="handle">Handle to the icon.</param>
            <returns>Non zero if successful, 0 if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.joySetCapture(System.IntPtr,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Function to capture a joystick.
            </summary>
            <param name="hwnd">Window handle to bind joystick with.</param>
            <param name="uJoyID">ID the joystick to release.</param>
            <param name="uPeriod">Polling frequency in milliseconds.</param>
            <param name="fChanged">TRUE to send messages only if the position changes outside of the dead zone, FALSE to always send messages.</param>
            <returns>0 if successful, non-zero if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.joyReleaseCapture(System.Int32)">
            <summary>
            Function to release the capture of a joystick.
            </summary>
            <param name="uJoyID">ID the joystick to release.</param>
            <returns>0 if successful, non-zero if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.joySetThreshold(System.Int32,System.Int32)">
            <summary>
            Function to set the dead zone of the joystick.
            </summary>
            <param name="uJoyID">ID the joystick to query.</param>
            <param name="uThreshold">Threshold for the joystick.</param>
            <returns>0 if successful, non-zero if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.joyGetThreshold(System.Int32,System.Int32@)">
            <summary>
            Function to retrieve the dead zone of the joystick.
            </summary>
            <param name="uJoyID">ID the joystick to query.</param>
            <param name="puThreshold">Threshold for the joystick.</param>
            <returns>0 if successful, non-zero if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.joyConfigChanged(System.Int32)">
            <summary>
            Function to notify the system that joystick properties have changed.
            </summary>
            <param name="reserved">Reserved, do not use.</param>
            <returns>0 if successful, non-zero if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.joyGetNumDevs">
            <summary>
            Function to return the number of joystick devices supported by the current driver.
            </summary>
            <returns>Number of joysticks supported, 0 if no driver is installed.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.joyGetDevCaps(System.Int32,SharpUtilities.Native.Win32.JOYCAPS@,System.Int32)">
            <summary>
            Function to return the joystick device capabilities.
            </summary>
            <param name="uJoyID">ID of the joystick to return.  -1 will return registry key, whether a device exists or not.</param>
            <param name="pjc">Joystick capabilities.</param>
            <param name="cbjc">Size of the JOYCAPS structure in bytes.</param>
            <returns>0 if successful, non zero if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.joyGetPos(System.Int32,SharpUtilities.Native.Win32.JOYINFO@)">
            <summary>
            Function to retrieve joystick position information.
            </summary>
            <param name="uJoyID">ID the of joystick to query.</param>
            <param name="pji">Position information.</param>
            <returns>0 if successful, non zero if not.  JOYERR_UNPLUGGED if not connected.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.joyGetPosEx(System.Int32,SharpUtilities.Native.Win32.JOYINFOEX@)">
            <summary>
            Function to retrieve joystick position information.
            </summary>
            <param name="uJoyID">ID the of joystick to query.</param>
            <param name="pji">Position information.</param>
            <returns>0 if successful, non zero if not.  JOYERR_UNPLUGGED if not connected.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.FormatMessage(SharpUtilities.Native.Win32.ErrorFormattingFlags,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr@,System.UInt32,System.String[])">
            <summary>
            Function to format an error message.
            </summary>
            <param name="dwFlags">Flags for the message.</param>
            <param name="lpSource">Pointer to the location of the message definition. The type of this parameter depends on the settings in the dwFlags parameter. </param>
            <param name="dwMessageId">Specifies the 32-bit message identifier for the requested message.</param>
            <param name="dwLanguageId">Not supported.</param>
            <param name="lpBuffer">Buffer that holds the message.</param>
            <param name="nSize">Size of the buffer in bytes.</param>
            <param name="Arguments">Miscellaneous arguments for formatting.</param>
            <returns>Number of characters in the buffer, 0 if failure.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.GetRawInputDeviceList(SharpUtilities.Native.Win32.RAWINPUTDEVICELIST[],System.Int32@,System.Int32)">
            <summary>
            Function to return a list of input devices.
            </summary>
            <param name="pRawInputDeviceList">List of devices.</param>
            <param name="puiNumDevices">Number of devices.</param>
            <param name="cbSize">Size of RAWINPUTDEVICELIST in bytes.</param>
            <returns>-1 for error, otherwise number of devices in the returned array.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.GetRawInputDeviceInfo(System.IntPtr,SharpUtilities.Native.Win32.RawInputCommand,System.IntPtr,System.Int32@)">
            <summary>
            Function to retrieve device information.
            </summary>
            <param name="hDevice">Handle to the device.</param>
            <param name="uiCommand">Command to determine what type of data to return.</param>
            <param name="pData">Pointer to the buffer that holds the data.</param>
            <param name="pcbSize">Size of the buffer in bytes (or characters in the case of DeviceName).</param>
            <returns>-1 for error, otherwise number of bytes in the buffer.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.GetRawInputDeviceInfo(System.IntPtr,SharpUtilities.Native.Win32.RawInputCommand,SharpUtilities.Native.Win32.RAWINPUTDEVICEINFO@,System.Int32@)">
            <summary>
            Function to retrieve device information.
            </summary>
            <param name="hDevice">Handle to the device.</param>
            <param name="uiCommand">Command to determine what type of data to return.</param>
            <param name="pData">Pointer to the buffer that holds the data.</param>
            <param name="pcbSize">Size of the buffer in bytes (or characters in the case of DeviceName).</param>
            <returns>-1 for error, otherwise number of bytes in the buffer.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.GetRawInputData(System.IntPtr,SharpUtilities.Native.Win32.RawInputCommand,SharpUtilities.Native.Win32.RAWINPUT@,System.Int32@,System.Int32)">
            <summary>
            Function to retrieve raw input data.
            </summary>
            <param name="hRawInput">Handle to the raw input.</param>
            <param name="uiCommand">Command to issue when retrieving data.</param>
            <param name="pData">Raw input data.</param>
            <param name="pcbSize">Number of bytes in the array.</param>
            <param name="cbSizeHeader">Size of the header.</param>
            <returns>0 if successful if pData is null, otherwise number of bytes if pData is not null.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.GetRawInputData(System.IntPtr,SharpUtilities.Native.Win32.RawInputCommand,SharpUtilities.Native.Win32.RAWINPUTx64@,System.Int32@,System.Int32)">
            <summary>
            Function to retrieve raw input data.
            </summary>
            <param name="hRawInput">Handle to the raw input.</param>
            <param name="uiCommand">Command to issue when retrieving data.</param>
            <param name="pData">Raw input data.</param>
            <param name="pcbSize">Number of bytes in the array.</param>
            <param name="cbSizeHeader">Size of the header.</param>
            <returns>0 if successful if pData is null, otherwise number of bytes if pData is not null.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.GetRawInputData(System.IntPtr,SharpUtilities.Native.Win32.RawInputCommand,System.Byte[],System.Int32@,System.Int32)">
            <summary>
            Function to retrieve raw input data.
            </summary>
            <param name="hRawInput">Handle to the raw input.</param>
            <param name="uiCommand">Command to issue when retrieving data.</param>
            <param name="pData">Raw input data.</param>
            <param name="pcbSize">Number of bytes in the array.</param>
            <param name="cbSizeHeader">Size of the header.</param>
            <returns>0 if successful if pData is null, otherwise number of bytes if pData is not null.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.RegisterRawInputDevices(SharpUtilities.Native.Win32.RAWINPUTDEVICE[],System.Int32,System.Int32)">
            <summary>
            Function to register a raw input device.
            </summary>
            <param name="pRawInputDevices">Array of raw input devices.</param>
            <param name="uiNumDevices">Number of devices.</param>
            <param name="cbSize">Size of the RAWINPUTDEVICE structure.</param>
            <returns>TRUE if successful, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.RegisterRawInputDevices(SharpUtilities.Native.Win32.RAWINPUTDEVICE[])">
            <summary>
            Function to register a raw input device.
            </summary>
            <param name="devices">Array of device information.</param>
            <returns>TRUE if successful, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.RegisterRawInputDevices(SharpUtilities.Native.Win32.RAWINPUTDEVICE)">
            <summary>
            Function to register a raw input device.
            </summary>
            <param name="device">Device information.</param>
            <returns>TRUE if successful, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.SetTextColor(System.IntPtr,System.Int32)">
            <summary>
            Function to set the text color for the specified device context to the specified color. 
            </summary>
            <param name="hdc">Handle to the device context.</param>
            <param name="crColor">Specifies the color of the text.</param>
            <returns>If the function succeeds, the return value is a color reference for the previous text color.  If the function fails, the return value is CLR_INVALID.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.CreateSolidBrush(System.UInt32)">
            <summary>
            Function to create a logical brush that has the specified solid color
            </summary>
            <param name="crColor">Color of the brush.</param>
            <returns>Handle to the brush, NULL if failed.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.TextOut(System.IntPtr,System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            Function that writes a character string at the specified location, using the currently selected font, background color, and text color.
            </summary>
            <param name="hdc">Handle to the device context.</param>
            <param name="nXStart">Specifies the x-coordinate, in logical coordinates, of the reference point that the system uses to align the string.</param>
            <param name="nYStart">Specifies the y-coordinate, in logical coordinates, of the reference point that the system uses to align the string.</param>
            <param name="lpString">The string to be drawn.</param>
            <param name="cbString">Specifies the length of the string.</param>
            <returns>If the function succeeds, the return value is nonzero.  If the function fails, the return value is zero.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.CreateCompatibleDC(System.IntPtr)">
            <summary>
            Function that creates a memory device context (DC) compatible with the specified device. 
            </summary>
            <param name="hdc">Handle to an existing DC. If this handle is NULL, the function creates a memory DC compatible with the application's current screen.</param>
            <returns>If the function succeeds, the return value is the handle to a memory DC.  If the function fails, the return value is NULL. </returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.MulDiv(System.Int32,System.Int32,System.Int32)">
            <summary>
            The MulDiv function multiplies two 32-bit values and then divides the 64-bit result by a third 32-bit value. The return value is rounded up or down to the nearest integer.
            </summary>
            <param name="nNumber">Multiplicand.</param>
            <param name="nNumerator">Multiplier.</param>
            <param name="nDenominator">Number by which the result of the multiplication (nNumber * nNumerator) is to be divided.</param>
            <returns>If the function succeeds, the return value is the result of the multiplication and division. If either an overflow occurred or nDenominator was 0, the return value is –1.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.CreateFont(System.Int32,System.Int32,System.Int32,System.Int32,SharpUtilities.Native.Win32.FontWeight,System.Boolean,System.Boolean,System.Boolean,SharpUtilities.Native.Win32.FontCharacterSet,SharpUtilities.Native.Win32.FontOutputPrecision,SharpUtilities.Native.Win32.FontClippingPrecision,SharpUtilities.Native.Win32.FontQuality,SharpUtilities.Native.Win32.FontPitchAndFamily,System.String)">
            <summary>
            Function to create a font.
            </summary>
            <param name="nHeight">Height of the font.</param>
            <param name="nWidth">Width of the font.</param>
            <param name="nEscapement">Specifies the angle, in tenths of degrees, between the escapement vector and the x-axis of the device. The escapement vector is parallel to the base line of a row of text.</param>
            <param name="nOrientation">Specifies the angle, in tenths of degrees, between each character's base line and the x-axis of the device.</param>
            <param name="fnWeight">Specifies the weight of the font in the range 0 through 1000. For example, 400 is normal and 700 is bold. If this value is zero, a default weight is used.</param>
            <param name="fdwItalic">Specifies an italic font if set to TRUE.</param>
            <param name="fdwUnderline">Specifies an underlined font if set to TRUE.</param>
            <param name="fdwStrikeOut">Specifies a strikeout font if set to TRUE.</param>
            <param name="fdwCharSet">Specifies the character set.</param>
            <param name="fdwOutputPrecision">Specifies the output precision. The output precision defines how closely the output must match the requested font's height, width, character orientation, escapement, pitch, and font type.</param>
            <param name="fdwClipPrecision">Specifies the clipping precision. The clipping precision defines how to clip characters that are partially outside the clipping region.</param>
            <param name="fdwQuality">Specifies the output quality. The output quality defines how carefully GDI must attempt to match the logical-font attributes to those of an actual physical font.</param>
            <param name="fdwPitchAndFamily">Specifies the pitch and family of the font. The two low-order bits specify the pitch of the font.</param>
            <param name="lpszFace">Name of the font face.</param>
            <returns>Handle to a font object.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.GetCharABCWidths(System.IntPtr,System.UInt32,System.UInt32,SharpUtilities.Native.Win32.ABC[])">
            <summary>
            Function to retrieve character widths.
            </summary>
            <param name="hdc">Device context.</param>
            <param name="uFirstChar">First character.</param>
            <param name="uLastChar">Last character.</param>
            <param name="lpabc">Array of ABC widths.</param>
            <returns>TRUE if successful, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.GetCharABCWidthsFloat(System.IntPtr,System.UInt32,System.UInt32,SharpUtilities.Native.Win32.ABCFloat[])">
            <summary>
            Function to retrieve character widths.
            </summary>
            <param name="hdc">Device context.</param>
            <param name="uFirstChar">First character.</param>
            <param name="uLastChar">Last character.</param>
            <param name="lpabc">Array of ABC widths.</param>
            <returns>TRUE if successful, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.ShowCursor(System.Boolean)">
            <summary>
            Function to set the visibility of the mouse cursor.
            </summary>
            <param name="bShow">TRUE to show, FALSE to hide.</param>
            <returns>-1 if no mouse is installed, 0 or greater for the number of times this function has been called with TRUE.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.ClipCursor(SharpUtilities.Native.Win32.RECT@)">
            <summary>
            Function to clip the mouse cursor position.
            </summary>
            <param name="lpRect">Rectangle to constrain the cursor.</param>
            <returns>TRUE if successful, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.ClipCursor(System.Drawing.Rectangle)">
            <summary>
            Function to clip the mouse cursor position.
            </summary>
            <param name="rectangle">Rectangle to constrain the cursor.</param>
            <returns>TRUE if successful, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.GetCursorPos(SharpUtilities.Native.Win32.POINT@)">
            <summary>
            Function to retrieve the mouse cursor position.
            </summary>
            <param name="lpPoint">Point that will contain the cursor position.</param>
            <returns>TRUE if successful, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.SetCursorPos(System.Int32,System.Int32)">
            <summary>
            Function to set the mouse cursor position.
            </summary>
            <param name="X">Horizontal position.</param>
            <param name="Y">Vertical position.</param>
            <returns>TRUE if successful, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.SetCursorPos(System.Drawing.Point)">
            <summary>
            Function to set the mouse cursor position.
            </summary>
            <param name="position">Position of the cursor.</param>
            <returns></returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.RegisterClassEx(SharpUtilities.Native.Win32.WNDCLASSEX@)">
            <summary>
            Function to register a window class.
            </summary>
            <param name="lpwcx">Window class information.</param>
            <returns>An identifier for the window class, 0 for failure.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.UnregisterClass(System.String,System.IntPtr)">
            <summary>
            Function to unregister a window class.
            </summary>
            <param name="lpClassName">Name of the window class to remove.</param>
            <param name="hInstance">Owning instance of the class.</param>
            <returns>TRUE for success, FALSE for failure.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.CreateWindowEx(SharpUtilities.Native.Win32.WindowStylesEx,System.String,System.String,SharpUtilities.Native.Win32.WindowStyles,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            Function to create a window.
            </summary>
            <param name="dwExStyle">Extended style attributes.</param>
            <param name="lpClassName">Class name of the window.</param>
            <param name="lpWindowName">Caption for the window.</param>
            <param name="dwStyle">Style attributes.</param>
            <param name="x">Horizontal position.</param>
            <param name="y">Vertical position.</param>
            <param name="nWidth">Width of the window.</param>
            <param name="nHeight">Height of the window.</param>
            <param name="hWndParent">Parent window handle.</param>
            <param name="hMenu">Menu handle.</param>
            <param name="hInstance">Owning instance of the window.</param>
            <param name="lpParam">Parameters to pass upon window creation.</param>
            <returns>A window handle for the new window, IntPtr.Zero for failure.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.DestroyWindow(System.IntPtr)">
            <summary>
            Function to destroy a window.
            </summary>
            <param name="hWnd">Handle to the window to destroy.</param>
            <returns>TRUE for success, FALSE for failure.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.RegisterHotKey(System.IntPtr,System.Int32,SharpUtilities.Native.Win32.HotkeyModifierFlags,System.UInt32)">
            <summary>
            Function to register a hotkey with the system.
            </summary>
            <param name="hWnd">Window handle that will receive the hotkey notification.</param>
            <param name="id">ID of the hot key.</param>
            <param name="modifiers">Modifiers that need to be pressed with the hot key.</param>
            <param name="virtualkeyCode">Key code for the hot key.</param>
            <returns>TRUE if successful, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.UnregisterHotKey(System.IntPtr,System.Int32)">
            <summary>
            Function to unregister the hot key.
            </summary>
            <param name="hWnd">Window handle that is associated with the hot key.</param>
            <param name="id">ID of the hot key.</param>
            <returns>TRUE if successful, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.GlobalAddAtom(System.String)">
            <summary>
            Function to add a string to the global atom table.
            </summary>
            <param name="atomName">String to add to the table.</param>
            <returns>Handle to the ATOM, zero if failed.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.GlobalDeleteAtom(System.Int16)">
            <summary>
            Function to remove an atom.
            </summary>
            <param name="atom">Atom handle to delete.</param>
            <returns>Zero if successful, if failed the atom handle is returned.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.PathGetArgs(System.String)">
            <summary>
            Function to retrieve the command line arguments given a path.
            </summary>
            <param name="path">Path to be searched.</param>
            <returns>Arguments from the path.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.PathCompactPathEx(System.Text.StringBuilder,System.Text.StringBuilder,System.UInt32,System.UInt32)">
            <summary>
            Function to truncate a path to fit within a certain number of characters by replacing path components with ellipses.
            </summary>
            <param name="pszOut">Altered string.</param>
            <param name="pszSrc">String that contains the path to alter.</param>
            <param name="cchMax">Maximum number of characters for the altered string.</param>
            <param name="dwFlags">Reserved.</param>
            <returns>TRUE if successful, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.BitBlt(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32,SharpUtilities.Native.Win32.TernaryRasterOps)">
            <summary>
            Function to perform a bit block transfer.
            </summary>
            <param name="hdcDst">Device context handle of the destination.</param>
            <param name="xDst">Horizontal position on the destination to place the data.</param>
            <param name="yDst">Vertical position on the destination to place the data.</param>
            <param name="cx">Width of the data.</param>
            <param name="cy">Height of the data.</param>
            <param name="hdcSrc">Device context handle of the destination.</param>
            <param name="xSrc">Horizontal position on the source to retrieve the data from.</param>
            <param name="ySrc">Vertical position on the source to retrieve the data from.</param>
            <param name="ulRop">Raster operation. See <see cref="T:SharpUtilities.Native.Win32.BinaryRasterOps">BinaryRasterOps</see> and <see cref="T:SharpUtilities.Native.Win32.TernaryRasterOps">TernaryRasterOps</see>.</param>
            <returns>TRUE for success, FALSE if failed.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.DeleteObject(System.IntPtr)">
            <summary>
            Function to delete an object handle.
            </summary>
            <param name="hObject">Handle to the object to delete.</param>
            <returns>TRUE for success, FALSE for failure.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.StretchBlt(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32)">
            <summary>
            Function to perform a stretched bit block transfer.
            </summary>
            <param name="hdcDst">Device context handle of the destination.</param>
            <param name="xDst">Horizontal position on the destination to place the data.</param>
            <param name="yDst">Vertical position on the destination to place the data.</param>
            <param name="cx">Width of the destination data.</param>
            <param name="cy">Height of the destination data.</param>
            <param name="hdcSrc">Device context handle of the destination.</param>
            <param name="xSrc">Horizontal position on the source to retrieve the data from.</param>
            <param name="ySrc">Vertical position on the source to retrieve the data from.</param>
            <param name="cxSrc">Width of the source data.</param>
            <param name="cySrc">Height of the source data.</param>
            <param name="ulRop">Raster operation. See <see cref="T:SharpUtilities.Native.Win32.BinaryRasterOps">BinaryRasterOps</see> and <see cref="T:SharpUtilities.Native.Win32.TernaryRasterOps">TernaryRasterOps</see>.</param>
            <returns>TRUE for success, FALSE if failed.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.CreateDC(System.String,System.String,System.String,System.IntPtr)">
            <summary>
            Function to create a device context from a device name.
            </summary>
            <param name="lpszDriver">Name of the driver to use.</param>
            <param name="lpszDevice">Device name.</param>
            <param name="lpszOutput">Must be IntPtr.Zero.</param>
            <param name="lpInitData">Device initialization data, can be IntPtr.Zero (and must be if the lpszDriver is "DISPLAY".</param>
            <returns>Device context handle.  IntPtr.Zero if failed.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.CreateDC(System.String,System.String,System.String,SharpUtilities.Native.Win32.DEVMODE@)">
            <summary>
            Function to create a device context from a device name.
            </summary>
            <param name="lpszDriver">Name of the driver to use.</param>
            <param name="lpszDevice">Device name.</param>
            <param name="lpszOutput">Must be IntPtr.Zero.</param>
            <param name="lpInitData">Device initialization data.</param>
            <returns>Device context handle.  IntPtr.Zero if failed.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.DeleteDC(System.IntPtr)">
            <summary>
            Function to delete a device context handle created with <seealso cref="M:SharpUtilities.Native.Win32.Win32API.CreateDC(System.String,System.String,System.String,System.IntPtr)">CreateDC</seealso>.
            </summary>
            <param name="hdc">Device context handle to delete.</param>
            <returns>TRUE for success, FALSE for failure.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.GetWindowModuleFileName(System.IntPtr,System.Text.StringBuilder,System.Int32)">
            <summary>
            Function to retrieve the full path and file name of the module associated with the specified window handle
            </summary>
            <param name="hWnd">Window handle to query.</param>
            <param name="lpString">Filename of the module.</param>
            <param name="nMaxCount">Number of characters in the filename.</param>
            <returns>Number of characters actually copied.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.SetWindowPos(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,SharpUtilities.Native.Win32.SetWindowPositionFlags)">
            <summary>
            Function to set the position and attributes of a window.
            </summary>
            <param name="hWnd">Window to manipulate.</param>
            <param name="hWndInsertAfter">Window in the Z-Order to insert after, or one of <see cref="T:SharpUtilities.Native.Win32.SetWindowPositionHandles">SetWindowPositionHandles</see>.</param>
            <param name="X">New horizontal position.</param>
            <param name="Y">New vertical position.</param>
            <param name="cx">New width of the window.</param>
            <param name="cy">New height of the window.</param>
            <param name="uFlags">A combination of <see cref="T:SharpUtilities.Native.Win32.SetWindowPositionFlags">SetWindowPositionFlags</see>.</param>
            <returns>Non-zero for success, zero for failure.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.GetWindowPlacement(System.IntPtr,SharpUtilities.Native.Win32.WINDOWPLACEMENT@)">
            <summary>
            Function to retrieve window placement information.
            </summary>
            <param name="window">Window handle to get info for.</param>
            <param name="position">Position information.</param>
            <returns>TRUE for success, FALSE for failure.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.RegisterWindowMessage(System.String)">
            <summary>
            Function to define a new window message that is guaranteed to be unique throughout the system.
            </summary>
            <param name="message">Message to be registered.</param>
            <returns>Message identifier in the range of 0xC000 to 0xFFFF if successful, zero if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.EnumWindows(SharpUtilities.Native.Win32.EnumWindowsCallback,System.Int32)">
            <summary>
            Function to enumerate windows.
            </summary>
            <param name="callback">Window enumeration callback.</param>
            <param name="lParam">Extra parameters.</param>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.IsWindowVisible(System.IntPtr)">
            <summary>
            Function to determine if a window is visible or not.
            </summary>
            <param name="hWnd">Handle of window to check.</param>
            <returns>TRUE if visible, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.GetParent(System.IntPtr)">
            <summary>
            Function to return the parent of this window.
            </summary>
            <param name="hWnd">Child window to retrieve the parent handle for.</param>
            <returns>Window handle of the parent, IntPtr.Zero if failed or has no owner.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.GetClassName(System.IntPtr,System.Text.StringBuilder,System.Int32)">
            <summary>
            Function to get the class name of the window.
            </summary>
            <param name="hWnd">Window handle from which to retrieve the class name.</param>
            <param name="lpClassName">String buffer to hold the classname.</param>
            <param name="nMaxCount">Buffer length.</param>
            <returns>Number of characters copied if successful, zero for failure.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.GetWindowText(System.IntPtr,System.Text.StringBuilder,System.Int32)">
            <summary>
            Function to get the caption of the window.
            </summary>
            <param name="hWnd">Window handle from which to retrieve the caption.</param>
            <param name="lpString">String buffer to hold the caption.</param>
            <param name="nMaxCount">Buffer length.</param>
            <returns>Number of characters copied if successful, zero for failure.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.GetWindowLong(System.IntPtr,SharpUtilities.Native.Win32.WindowLongFields)">
            <summary>
            Function to get the window information for a window.
            </summary>
            <param name="hWnd">Window handle from which to get the styles.</param>
            <param name="index">Fields in the window structure to retrieve the data from.</param>
            <returns>Data for the window field.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.SendMessageTimeout(System.IntPtr,SharpUtilities.Native.Win32.WindowMessages,System.Int32,System.Int32,SharpUtilities.Native.Win32.SendMessageTimeoutFlags,System.Int32,System.Int32@)">
            <summary>
            Function to send a message to the system with a specified timeout.
            </summary>
            <param name="hWnd">Window handle that will receive the message, or NULL for the system.</param>
            <param name="uMsg">Message to send.</param>
            <param name="wParam">1st set of parameters.</param>
            <param name="lParam">2nd set of parameters.</param>
            <param name="fuFlags">One or more flags from <see cref="T:SharpUtilities.Native.Win32.SendMessageTimeoutFlags">SendMessageTimeoutFlags</see>.</param>
            <param name="uTimeout">Duration in milliseconds to wait.</param>
            <param name="lpdwResult">Result of the message.</param>
            <returns>Nonzero if successful, zero if failed.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.GetClassLong(System.IntPtr,SharpUtilities.Native.Win32.ClassLongFields)">
            <summary>
            Function to get an item from the window class.
            </summary>
            <param name="hWnd">Window handle associated with the class.</param>
            <param name="index">Field in the window class declaration.</param>
            <returns>Requested value for the field, zero if failed.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.GetWindowThreadProcessId(System.IntPtr,System.Int32@)">
            <summary>
            Function to retrieve the ID of the thread for the window, and the process ID.
            </summary>
            <param name="hWnd">Window handle created by the thread.</param>
            <param name="processId">Process ID associated with the thread.</param>
            <returns>The thread ID.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.SendMessage(System.IntPtr,SharpUtilities.Native.Win32.WindowMessages,System.IntPtr,System.IntPtr)">
            <summary>
            Function to send a message to a window.
            </summary>
            <param name="hWnd">Window handle that receives the message.</param>
            <param name="uMsg">Message to send.</param>
            <param name="wParam">1st set of parameters.</param>
            <param name="lParam">2nd set of parameters.</param>
            <returns>Depends on the message being sent.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.PostMessage(System.IntPtr,SharpUtilities.Native.Win32.WindowMessages,System.IntPtr,System.IntPtr)">
            <summary>
            Function to post a message to a window.
            </summary>
            <param name="hWnd">Window handle that receives the message.</param>
            <param name="uMsg">Message to send.</param>
            <param name="wParam">1st set of parameters.</param>
            <param name="lParam">2nd set of parameters.</param>
            <returns>Depends on the message being sent.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.SwitchToThisWindow(System.IntPtr,System.Boolean)">
            <summary>
            Function to switch to a window.
            </summary>
            <param name="hWnd">Handle of the window to switch to.</param>
            <param name="altTabActivated">TRUE to indicate that this window is being switched by ALT+TAB, FALSE if not.</param>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.ShowWindowAsync(System.IntPtr,SharpUtilities.Native.Win32.ShowWindowFlags)">
            <summary>
            Function to asynchronously show a window.
            </summary>
            <param name="hWnd">Window handle to show.</param>
            <param name="command">Show window command.</param>
            <returns>If previously visible, returns non-zero, zero if the window was invisible.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.GetDesktopWindow">
            <summary>
            Function to retrieve the handle of the desktop window.
            </summary>
            <returns>Handle to the desktop window, IntPtr.Zero if failure.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.GetForegroundWindow">
            <summary>
            Function to retrieve the handle of the foreground window.
            </summary>
            <returns>Handle to the foreground window, IntPtr.Zero if failure.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.BringWindowToTop(System.IntPtr)">
            <summary>
            Function to bring the specified window to the foreground.
            </summary>
            <param name="window">Handle to the window to bring forward.</param>
            <returns>TRUE for success, FALSE for failure.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.GetWindowInfo(System.IntPtr,SharpUtilities.Native.Win32.WINDOWINFO@)">
            <summary>
            Function to get window information.
            </summary>
            <param name="hwnd">Window handle to get information from.</param>
            <param name="info"><see cref="T:SharpUtilities.Native.Win32.WINDOWINFO">Information</see> value type.</param>
            <returns>TRUE for success, FALSE for failure.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.GetWindowDC(System.IntPtr)">
            <summary>
            Function to retrieve a device context handle (HDC) for a window.
            </summary>
            <param name="hwnd">Window handle that owns the device context handle.</param>
            <returns>The device context handle, IntPtr.Zero for failure.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.GetDC(System.IntPtr)">
            <summary>
            Function to retrieve a device context handle (HDC).
            </summary>
            <param name="hwnd">Window handle that owns the device context handle.  Use IntPtr.Zero to retrieve the desktop DC.</param>
            <returns>The device context handle, IntPtr.Zero for failure.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.ReleaseDC(System.IntPtr,System.IntPtr)">
            <summary>
            Function to release a device context handle.
            </summary>
            <param name="hwnd">Window that owns the handle.</param>
            <param name="hdc">Handle to release</param>
            <returns>1 if the handle was released, 0 if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.GetWindowRect(System.IntPtr,SharpUtilities.Native.Win32.RECT@)">
            <summary>
            Function to return window boundaries.
            </summary>
            <param name="hwnd">Window handle to retrieve the dimensions for.</param>
            <param name="rectangle">Boundaries of the entire window.</param>
            <returns>TRUE for success, FALSE for failure.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.GetClientRect(System.IntPtr,SharpUtilities.Native.Win32.RECT@)">
            <summary>
            Function to return client window boundaries.
            </summary>
            <param name="hwnd">Window handle to retrieve the client dimensions for.</param>
            <param name="rectangle">Boundaries of the client area.</param>
            <returns>TRUE for success, FALSE for failure.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.WindowFromPoint(SharpUtilities.Native.Win32.POINT)">
            <summary>
            Function to return a window handle from a point.
            </summary>
            <param name="pt">Point to test.</param>
            <returns>The window handle that intersects the point, IntPtr.Zero for no window.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.SetCapture(System.IntPtr)">
            <summary>
            Function to capture the mouse.
            </summary>
            <param name="hWnd">Window handle that will own the mouse.</param>
            <returns>Previous owner of the mouse, IntPtr.Zero if there was no owner.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.ReleaseCapture">
            <summary>
            Function to release the mouse from capture.
            </summary>
            <returns>TRUE if successful, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.SelectObject(System.IntPtr,System.IntPtr)">
            <summary>
            Function to select an object into the specified device context.
            </summary>
            <param name="hDc">Device context that will retrieve the object handle.</param>
            <param name="hObject">Handle to the object.</param>
            <returns>Previous object that was selected, IntPtr.Zero if no such object.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.GetStockObject(System.Int32)">
            <summary>
            Function to return the handle to a stock set of objects.
            </summary>
            <param name="nObject">Stock object to retrieve, one of <see cref="T:SharpUtilities.Native.Win32.BrushStyles">BrushStyles</see> or <see cref="T:SharpUtilities.Native.Win32.PenStyles">PenStyles</see> or <see cref="T:SharpUtilities.Native.Win32.FontStyles">FontStyles</see>.</param>
            <returns>Handle to the stock object, IntPtr.Zero for failure.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.InvalidateRect(System.IntPtr,System.IntPtr,System.Boolean)">
            <summary>
            Function to invalidate a windows client area.
            </summary>
            <param name="hWnd">Window to invalidate.</param>
            <param name="lpRect">Area in the client area to invalidate.</param>
            <param name="bErase">TRUE to erase the contents, FALSE to leave them.</param>
            <returns>TRUE if successful, FALSE if not</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.UpdateWindow(System.IntPtr)">
            <summary>
            Function to refresh a window.
            </summary>
            <param name="hWnd">Handle of the window to update.</param>
            <returns>TRUE if successful, FALSE if not</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.RedrawWindow(System.IntPtr,System.IntPtr,System.IntPtr,SharpUtilities.Native.Win32.RedrawWindowFlags)">
            <summary>
            Function to redraw a window.
            </summary>
            <param name="hWnd">Handle to window to redraw.</param>
            <param name="lprcUpdate">List of rectangles for the area to redraw.  If IntPtr.Zero, then the region is used.</param>
            <param name="hrgnUpdate">Region to redraw, if both the region and the rectangles are equal to IntPtr.Zero then the entire client area is redrawn.</param>
            <param name="flags">One or more of the <see cref="T:SharpUtilities.Native.Win32.RedrawWindowFlags">RedrawWindowFlags</see>.</param>
            <returns>TRUE if successful, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.SetWindowsHookEx(SharpUtilities.Native.Win32.EventHookTypes,SharpUtilities.Native.Win32.HookCallback,System.IntPtr,System.Int32)">
            <summary>
            Function to set a windows hook.
            </summary>
            <param name="hookType">Type of hook.</param>
            <param name="hookProc">Callback function for the hook.</param>
            <param name="hInstance">Instance ID of the application.</param>
            <param name="nThreadId">Thread ID of the application.</param>
            <returns>Handle to the hook if successful, IntPtr.Zero (NULL) for failure.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.UnhookWindowsHookEx(System.IntPtr)">
            <summary>
            Function to remove a windows hook.
            </summary>
            <param name="hookHandle">Handle to the hook.</param>
            <returns>Non zero if successful, zero if failure.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.CallNextHookEx(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Function to call the next hook.
            </summary>
            <param name="hookHandle">Handle of the hook to call.</param>
            <param name="nCode">Code for the hook.</param>
            <param name="wParam">1st set of parameters.</param>
            <param name="lParam">2nd set of parameters.</param>
            <returns>Dependant on the hook type.  Consult the MSDN for more detail.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.RegisterShellHookWindow(System.IntPtr)">
            <summary>
            Function to register a hook with a window.
            </summary>
            <param name="hWnd">Window handle to register hook with.</param>
            <returns>TRUE if successful, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.DeregisterShellHookWindow(System.IntPtr)">
            <summary>
            Function to remove a hook from a window.
            </summary>
            <param name="hWnd">Window to remove the hook from.</param>
            <returns>TRUE if successful, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.GetLastError">
            <summary>
            Function to return the last error.
            </summary>
            <returns>An integer containing the last error code.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.MakeWORD(System.Byte,System.Byte)">
            <summary>
            Function to create a 16 bit value from two bytes.
            </summary>
            <param name="low">Low byte.</param>
            <param name="high">High byte.</param>
            <returns>A 16 bit value containing the two bytes.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.LowBYTE(System.Int16)">
            <summary>
            Function to return the low end byte from a 16 bit value.
            </summary>
            <param name="wordValue">16 bit value.</param>
            <returns>The low byte of the 16 bit value.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.HighBYTE(System.Int16)">
            <summary>
            Function to return the high end byte from a 16 bit value.
            </summary>
            <param name="wordValue">16 bit value.</param>
            <returns>The high byte of the 16 bit value.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.MakeDWORD(System.Int16,System.Int16)">
            <summary>
            Function to create a 32 bit value from two bytes.
            </summary>
            <param name="low">Low 16 bit value.</param>
            <param name="high">High 16 bit value.</param>
            <returns>A 32 bit value containing the two 16 bit values.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.HighWORD(System.Int32)">
            <summary>
            Function to return the high end 16 bit value from a 32 bit value.
            </summary>
            <param name="intValue">32 bit value.</param>
            <returns>The high 16 bit value of the 32 bit value.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.LowWORD(System.Int32)">
            <summary>
            Function to return the low end 16 bit value from a 32 bit value.
            </summary>
            <param name="intValue">32 bit value.</param>
            <returns>The low 16 bit value of the 32 bit value.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.GetComputerNameEx(SharpUtilities.Native.Win32.ComputerNameFormat,System.Text.StringBuilder,System.UInt32@)">
            <summary>
            Function to return the computer name.
            </summary>
            <remarks>See the MSDN documentation for a detailed description.</remarks>
            <param name="NameType">Formatting for the computer name.</param>
            <param name="lpBuffer">Buffer for the computer name.</param>
            <param name="lpnSize">Length of the computer name.</param>
            <returns>TRUE for success, FALSE if failed.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.GetUserNameEx(SharpUtilities.Native.Win32.ExtendedNameFormat,System.Text.StringBuilder,System.UInt32@)">
            <summary>
            Function to return the windows login name.
            </summary>
            <remarks>See the MSDN documentation for a detailed description.</remarks>
            <param name="nameFormat">Formatting for the username.</param>
            <param name="userName">Buffer for the username.</param>
            <param name="userNameSize">Length of the username.</param>
            <returns>Zero if failure, non-zero for success.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.PeekMessage(SharpUtilities.Native.Win32.MSG@,System.IntPtr,System.Int32,System.Int32,SharpUtilities.Native.Win32.PeekMessageFlags)">
            <summary>
            Function to process window messages.
            </summary>
            <remarks>See the MSDN documentation for a detailed description.</remarks>
            <param name="msg">Message block to retrieve.</param>
            <param name="hwnd">Window to retrieve messages from, FALSE for all.</param>
            <param name="wFilterMin">Minimum message.</param>
            <param name="wFilterMax">Maximum message.</param>
            <param name="flags">Flags for the function.</param>
            <returns>TRUE if messages are ready for processing, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.TranslateMessage(SharpUtilities.Native.Win32.MSG@)">
            <summary>
            Function to translate windows messages.
            </summary>
            <param name="msg">Message to translate.</param>
            <returns>TRUE if successful, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.DispatchMessage(SharpUtilities.Native.Win32.MSG@)">
            <summary>
            Function to dispatch windows messages.
            </summary>
            <param name="msg">Message to dispatch.</param>
            <returns>TRUE if successful, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.QueryPerformanceFrequency(System.Int64@)">
            <summary>
            Function to return the frequency of the high precision timer.
            </summary>
            <remarks>See the MSDN documentation for a detailed description.</remarks>
            <param name="PerformanceFrequency">Frequency of timer.</param>
            <returns>TRUE if system supports high precision timing, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.QueryPerformanceCounter(System.Int64@)">
            <summary>
            Function to return the time from a high resolution timer.
            </summary>
            <remarks>See the MSDN documentation for a detailed description.</remarks>
            <param name="PerformanceCount">Time from the timer.</param>
            <returns>TRUE if system supports high precision timing, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.timeGetTime">
            <summary>
            Function to return time from a medium precision timer.
            </summary>
            <remarks>
            See the MSDN documentation for a detailed description.
            <para>
            This timer is of lower precision than the high precision timers, do not use unless
            your system does not support high resolution timers.
            </para>
            </remarks>
            <returns>Time in milliseconds.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.timeBeginPeriod(System.UInt32)">
            <summary>
            Function to start a timing session.
            </summary>
            <param name="uPeriod">Minimum resolution in milliseconds.</param>
            <returns>0 if successful, non 0 if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.timeEndPeriod(System.UInt32)">
            <summary>
            Function to end a timing session.
            </summary>
            <param name="uPeriod">Minimum resolution in milliseconds.</param>
            <returns>0 if successful, non 0 if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.GetTickCount">
            <summary>
            Function to return the number of milliseconds since system start.
            </summary>
            <remarks>See the MSDN documentation for a detailed description.</remarks>
            <returns>Milliseconds since system start.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.GetStdHandle(SharpUtilities.Native.Win32.StandardHandles)">
            <summary>
            Function to return a standard handle for consoles.
            </summary>
            <remarks>See the MSDN documentation for a detailed description.</remarks>
            <param name="nStdHandle">One of the standard handle types.</param>
            <returns>A new handle for the specified handle type.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.FlushConsoleInputBuffer(System.IntPtr)">
            <summary>
            Function to flush a console buffer.
            </summary>
            <remarks>See the MSDN documentation for a detailed description.</remarks>
            <param name="hConsoleInput">Handle to the buffer to flush.</param>
            <returns>TRUE if successful, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.SetConsoleScreenBufferSize(System.IntPtr,SharpUtilities.Native.Win32.COORD)">
            <summary>
            Function to set the buffer size of a console window.
            </summary>
            <remarks>See the MSDN documentation for a detailed description.</remarks>
            <param name="hConsoleOutput">Handle to the console.</param>
            <param name="dwSize">Size of the buffer.</param>
            <returns>TRUE if successful, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.ReadConsoleOutput(System.IntPtr,SharpUtilities.Native.Win32.CHAR_INFO[],SharpUtilities.Native.Win32.COORD,SharpUtilities.Native.Win32.COORD,SharpUtilities.Native.Win32.SMALL_RECT@)">
            <summary>
            Function to read the buffer contents from a console.
            </summary>
            <remarks>See the MSDN documentation for a detailed description.</remarks>
            <param name="hConsoleOutput">Handle of console to read.</param>
            <param name="lpBuffer">Buffer to use.</param>
            <param name="dwBufferSize">Size of the buffer.</param>
            <param name="dwBufferCoord">Buffer coordinates to start writing at.</param>
            <param name="lpReadRegion">Region to read.</param>
            <returns>TRUE if successful, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.GetConsoleScreenBufferInfo(System.IntPtr,SharpUtilities.Native.Win32.CONSOLE_SCREEN_BUFFER_INFO@)">
            <summary>
            Function to get information about the current console buffer.
            </summary>
            <remarks>See the MSDN documentation for a detailed description.</remarks>
            <param name="hConsoleOutput">Handle of console to read.</param>
            <param name="lpConsoleScreenBufferInfo">Structure containing information about the buffer.</param>
            <returns>TRUE if successful, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.SetConsoleWindowInfo(System.IntPtr,System.Boolean,SharpUtilities.Native.Win32.SMALL_RECT@)">
            <summary>
            Function to set the console window information.
            </summary>
            <remarks>See the MSDN documentation for a detailed description.</remarks>
            <param name="hConsoleOutput">Handle of console.</param>
            <param name="bAbsolute">TRUE if using absolute coordinates, FALSE if not.</param>
            <param name="lpConsoleWindow">Dimensions of the window.</param>
            <returns>TRUE if successful, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.SetConsoleTextAttribute(System.IntPtr,SharpUtilities.Native.Win32.ConsoleAttributes)">
            <summary>
            Function to set a the attributes for a console window.
            </summary>
            <remarks>See the MSDN documentation for a detailed description.</remarks>
            <param name="hConsoleOutput">Handle of console.</param>
            <param name="wAttributes">Attributes to set.</param>
            <returns>TRUE if successful, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.SetConsoleMode(System.IntPtr,SharpUtilities.Native.Win32.ConsoleModeFlags)">
            <summary>
            Function to set the mode for a console.
            </summary>
            <remarks>See the MSDN documentation for a detailed description.</remarks>
            <param name="hConsoleHandle">Handle of console.</param>
            <param name="dwMode">Mode flags.</param>
            <returns>TRUE if successful, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.GetConsoleTitle(System.Text.StringBuilder,System.UInt32)">
            <summary>
            Function to retrieve the caption for the console window.
            </summary>
            <remarks>See the MSDN documentation for a detailed description.</remarks>
            <param name="lpConsoleTitle">Stringbuilder holding the caption.</param>
            <param name="nSize">Size of the buffer.</param>
            <returns>Length in characters, 0 if failed.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.GetConsoleMode(System.IntPtr,SharpUtilities.Native.Win32.ConsoleModeFlags@)">
            <summary>
            Function to retrieve the current console mode.
            </summary>
            <remarks>See the MSDN documentation for a detailed description.</remarks>
            <param name="hConsoleHandle">Handle of console.</param>
            <param name="lpMode">Mode flags.</param>
            <returns>TRUE if successful, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.SetConsoleTitle(System.String)">
            <summary>
            Function to set the console caption.
            </summary>
            <remarks>See the MSDN documentation for a detailed description.</remarks>
            <param name="lpConsoleTitle">New caption for the console window.</param>
            <returns>TRUE if successful, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.GetConsoleCursorInfo(System.IntPtr,SharpUtilities.Native.Win32.CONSOLE_CURSOR_INFO@)">
            <summary>
            Function to retrieve console cursor information.
            </summary>
            <remarks>See the MSDN documentation for a detailed description.</remarks>
            <param name="hConsoleOutput">Handle of console.</param>
            <param name="lpConsoleCursorInfo">Structure for cursor information.</param>
            <returns>TRUE if successful, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.SetConsoleCursorInfo(System.IntPtr,SharpUtilities.Native.Win32.CONSOLE_CURSOR_INFO@)">
            <summary>
            Function to set the cursor information for the console.
            </summary>
            <remarks>See the MSDN documentation for a detailed description.</remarks>
            <param name="hConsoleOutput">Handle of console.</param>
            <param name="lpConsoleCursorInfo">Structure for cursor information.</param>
            <returns>TRUE if successful, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.SetConsoleCursorPosition(System.IntPtr,SharpUtilities.Native.Win32.COORD)">
            <summary>
            Function to set the cursor position for the console.
            </summary>
            <remarks>See the MSDN documentation for a detailed description.</remarks>
            <param name="hConsoleOutput">Handle of console.</param>
            <param name="dwCursorPosition">Cursor position.</param>
            <returns>TRUE if successful, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.FillConsoleOutputAttribute(System.IntPtr,SharpUtilities.Native.Win32.ConsoleAttributes,System.UInt32,SharpUtilities.Native.Win32.COORD,System.UInt32@)">
            <summary>
            Function to fill the console buffer with the specified attribute.
            </summary>
            <remarks>See the MSDN documentation for a detailed description.</remarks>
            <param name="hConsoleOutput">Handle of console.</param>
            <param name="wAttribute">Attribute to write.</param>
            <param name="nLength">Number of characters to write.</param>
            <param name="dwWriteCoord">Position to start writing at.</param>
            <param name="lpNumberOfAttrsWritten">Number of characters actually written.</param>
            <returns>TRUE if successful, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.FillConsoleOutputCharacter(System.IntPtr,System.Char,System.UInt32,SharpUtilities.Native.Win32.COORD,System.UInt32@)">
            <summary>
            Function to fill the console buffer with the specified character.
            </summary>
            <remarks>See the MSDN documentation for a detailed description.</remarks>
            <param name="hConsoleOutput">Handle of console.</param>
            <param name="cCharacter">Character to write.</param>
            <param name="nLength">Number of characters to write.</param>
            <param name="dwWriteCoord">Position to start writing at.</param>
            <param name="lpNumberOfCharsWritten">Number of characters actually written.</param>
            <returns>TRUE if successful, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.GetNumberOfConsoleInputEvents(System.IntPtr,System.UInt32@)">
            <summary>
            Function to return the number of console events.
            </summary>
            <remarks>See the MSDN documentation for a detailed description.</remarks>
            <param name="hConsoleInput">Handle of console.</param>
            <param name="lpcNumberOfEvents">Number of events present.</param>
            <returns>TRUE if successful, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.ReadConsoleInput(System.IntPtr,SharpUtilities.Native.Win32.INPUT_RECORD[],System.UInt32,System.UInt32@)">
            <summary>
            Function to return console input events.
            </summary>
            <remarks>See the MSDN documentation for a detailed description.</remarks>
            <param name="hConsoleInput">Handle of console.</param>
            <param name="lpBuffer">Buffer to read event data into.</param>
            <param name="nLength">Number of events to read.</param>
            <param name="lpNumberOfEventsRead">Number of events read.</param>
            <returns>TRUE if successful, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.SetConsoleCtrlHandler(SharpUtilities.Native.Win32.ConsoleCtrlDelegate,System.Boolean)">
            <summary>
            Function to set an event handler for the console.
            </summary>
            <remarks>See the MSDN documentation for a detailed description.</remarks>
            <param name="HandlerRoutine">Handler event.</param>
            <param name="Add">TRUE to add, FALSE to remove.</param>
            <returns>TRUE if successful, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.SetConsoleOutputCP(System.UInt32)">
            <summary>
            Function to set the codepage for the console.
            </summary>
            <remarks>See the MSDN documentation for a detailed description.</remarks>
            <param name="wCodePageID">Code page ID.</param>
            <returns>TRUE if successful, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.SetConsoleCP(System.UInt32)">
            <summary>
            Function to set the codepage for the input console.
            </summary>
            <remarks>See the MSDN documentation for a detailed description.</remarks>
            <param name="wCodePageID">Code page ID.</param>
            <returns>TRUE if successful, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.ReadConsole(System.IntPtr,System.Text.StringBuilder,System.UInt32,System.UInt32@,System.IntPtr)">
            <summary>
            Function to read input from the console.
            </summary>
            <remarks>See the MSDN documentation for a detailed description.</remarks>
            <param name="hConsoleInput">Handle of console.</param>
            <param name="lpBuffer">Buffer to use.</param>
            <param name="nNumberOfCharsToRead">Number of characters to read.</param>
            <param name="lpNumberOfCharsRead">Number of characters read.</param>
            <param name="lpReserved">Reserved.</param>
            <returns>TRUE if successful, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.WriteConsoleOutput(System.IntPtr,SharpUtilities.Native.Win32.CHAR_INFO[],SharpUtilities.Native.Win32.COORD,SharpUtilities.Native.Win32.COORD,SharpUtilities.Native.Win32.SMALL_RECT@)">
            <summary>
            Function to write a buffer to the console.
            </summary>
            <remarks>See the MSDN documentation for a detailed description.</remarks>
            <param name="hConsoleOutput">Handle of console.</param>
            <param name="lpBuffer">Buffer to use.</param>
            <param name="dwBufferSize">Size of the buffer.</param>
            <param name="dwBufferCoord">Position within buffer to read from.</param>
            <param name="lpWriteRegion">Window region to write to.</param>
            <returns>TRUE if successful, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.LockWindowUpdate(System.IntPtr)">
            <summary>
            Function to disable or enable drawing in the specified window.
            </summary>
            <param name="HWND">Window handle to lock.  Pass NULL to unlock.</param>
            <returns>Non-zero if successful, zero if successful.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.CopyFile(System.String,System.String,System.Boolean)">
            <summary>
            Function to copy a file from the source to the destination.
            </summary>
            <param name="source">Source file to copy.</param>
            <param name="destination">Destination for the file.</param>
            <param name="failIfExists">TRUE to cause the function to fail if the file exists, FALSE to ignore.</param>
            <returns>TRUE if successful, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.Win32API.GetSystemMetrics(SharpUtilities.Native.Win32.SystemMetrics)">
            <summary>
            Function to get system metrics.
            </summary>
            <param name="nIndex">System metric to retrieve.</param>
            <returns>Value for the metric.</returns>
        </member>
        <member name="T:SharpUtilities.Native.Memory">
            <summary>
            Memory -
            	Class for 'unsafe' memory management.
            </summary>
        </member>
        <member name="M:SharpUtilities.Native.Memory.AddressOfArray(System.Array)">
            <summary>
            Function to return the unsafe address of the passed array.
            </summary>
            <param name="data">Array to get the address of.</param>
            <returns>Address pointing to the array.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Memory.AddressOfArray(System.Array,System.Int32)">
            <summary>
            Function to return the unsafe address of the passed array.
            </summary>
            <param name="data">Array to get the address of.</param>
            <param name="index">Index in the array to start at.</param>
            <returns>Address pointing to the array.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Memory.WriteByte(System.IntPtr,System.Byte,System.Int32)">
            <summary>
            Function to fill a memory block with a specified unsigned byte value.
            </summary>
            <param name="data">Pointer to overwrite.</param>
            <param name="datavalue">Value to place in the memory block.</param>
            <param name="offset">Offset to start writing at.</param>
        </member>
        <member name="M:SharpUtilities.Native.Memory.WriteUInt(System.IntPtr,System.UInt32,System.Int32)">
            <summary>
            Function to fill a memory block with a specified unsigned integer value.
            </summary>
            <param name="data">Pointer to overwrite.</param>
            <param name="datavalue">Value to place in the memory block.</param>
            <param name="offset">Offset to start writing at.</param>
        </member>
        <member name="M:SharpUtilities.Native.Memory.WriteInt(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Function to fill a memory block with a specified signed integer value.
            </summary>
            <param name="data">Pointer to overwrite.</param>
            <param name="datavalue">Value to place in the memory block.</param>
            <param name="offset">Offset to start writing at.</param>
        </member>
        <member name="M:SharpUtilities.Native.Memory.WriteShort(System.IntPtr,System.Int16,System.Int32)">
            <summary>
            Function to fill a memory block with a specified signed short value.
            </summary>
            <param name="data">Pointer to overwrite.</param>
            <param name="datavalue">Value to place in the memory block.</param>
            <param name="offset">Offset to start writing at.</param>
        </member>
        <member name="M:SharpUtilities.Native.Memory.WriteUShort(System.IntPtr,System.UInt16,System.Int32)">
            <summary>
            Function to fill a memory block with a specified unsigned short value.
            </summary>
            <param name="data">Pointer to overwrite.</param>
            <param name="datavalue">Value to place in the memory block.</param>
            <param name="offset">Offset to start writing at.</param>
        </member>
        <member name="M:SharpUtilities.Native.Memory.WriteFloat(System.IntPtr,System.Single,System.Int32)">
            <summary>
            Function to fill a memory block with a specified signed floating point value.
            </summary>
            <param name="data">Pointer to overwrite.</param>
            <param name="datavalue">Value to place in the memory block.</param>
            <param name="offset">Offset to start writing at.</param>
        </member>
        <member name="M:SharpUtilities.Native.Memory.ReadByte(System.IntPtr,System.Int32)">
            <summary>
            Function to read an unsigned byte from a memory block.
            </summary>
            <param name="data">Pointer to read from.</param>
            <param name="offset">Offset to start reading at.</param>
            <returns>An unsigned byte.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Memory.ReadUInt(System.IntPtr,System.Int32)">
            <summary>
            Function to read an unsigned integer from a memory block.
            </summary>
            <param name="data">Pointer to read from.</param>
            <param name="offset">Offset to start reading at.</param>
            <returns>An unsigned integer.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Memory.ReadInt(System.IntPtr,System.Int32)">
            <summary>
            Function to read a signed integer from a memory block.
            </summary>
            <param name="data">Pointer to read from.</param>
            <param name="offset">Offset to start reading at.</param>
            <returns>A signed integer.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Memory.ReadShort(System.IntPtr,System.Int32)">
            <summary>
            Function to read a signed short from a memory block.
            </summary>
            <param name="data">Pointer to read from.</param>
            <param name="offset">Offset to start reading at.</param>
            <returns>A signed short.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Memory.ReadUShort(System.IntPtr,System.Int32)">
            <summary>
            Function to read an unsigned short from a memory block.
            </summary>
            <param name="data">Pointer to read from.</param>
            <param name="offset">Offset to start reading at.</param>
            <returns>An unsigned short.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Memory.ReadFloat(System.IntPtr,System.Int32)">
            <summary>
            Function to read a floating point value from a memory block.
            </summary>
            <param name="data">Pointer to read from.</param>
            <param name="offset">Offset to start reading at.</param>
            <returns>A floating point value.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Memory.Zero(System.IntPtr,System.Int32)">
            <summary>
            Function to fill a memory block with zeroes.
            </summary>
            <param name="data">Pointer to overwrite.</param>
            <param name="length">Number of bytes to write.</param>
        </member>
        <member name="M:SharpUtilities.Native.Memory.Zero(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Function to fill a memory block with zeroes.
            </summary>
            <param name="data">Pointer to overwrite.</param>
            <param name="offset">Offset to start writing at.</param>
            <param name="length">Number of bytes to write.</param>
        </member>
        <member name="M:SharpUtilities.Native.Memory.Memset(System.IntPtr,System.Byte,System.Int32)">
            <summary>
            Function to fill a memory block with a byte value.
            </summary>
            <param name="data">Pointer to overwrite.</param>
            <param name="datavalue">Value to write.</param>
            <param name="length">Number of bytes to write.</param>
        </member>
        <member name="M:SharpUtilities.Native.Memory.Memset(System.IntPtr,System.Byte,System.Int32,System.Int32)">
            <summary>
            Function to fill a memory block with a byte value.
            </summary>
            <param name="data">Pointer to overwrite.</param>
            <param name="datavalue">Value to write.</param>
            <param name="offset">Offset to start writing at.</param>
            <param name="length">Number of bytes to write.</param>
        </member>
        <member name="M:SharpUtilities.Native.Memory.Copy(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            Function to copy data from one memory block to another.
            </summary>
            <param name="sourcePointer">Pointer to copy from.</param>
            <param name="destinationPointer">Pointer to copy into.</param>
            <param name="length">Number of bytes to copy.</param>
        </member>
        <member name="M:SharpUtilities.Native.Memory.Copy(System.Array,System.IntPtr,System.Int32)">
            <summary>
            Function to copy an array into a memory pointer.
            </summary>
            <param name="sourceArray">Array to copy from.</param>
            <param name="destinationPointer">Pointer to copy into.</param>
            <param name="length">Length of data to write in bytes.</param>
        </member>
        <member name="M:SharpUtilities.Native.Memory.Copy(System.Array,System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Function to copy an array into a memory pointer.
            </summary>
            <param name="sourceArray">Array to copy from.</param>
            <param name="destinationPointer">Pointer to copy into.</param>
            <param name="index">Index of the array to start at.</param>
            <param name="length">Length of data to write in bytes.</param>
        </member>
        <member name="M:SharpUtilities.Native.Memory.Copy(System.Array,System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <summary>
            Function to copy an array into a memory pointer.
            </summary>
            <param name="sourceArray">Array to copy from.</param>
            <param name="destinationPointer">Pointer to copy into.</param>
            <param name="sourceIndex">Index of the array to start at.</param>
            <param name="destinationOffset">Offset in destination buffer to write at.</param>
            <param name="length">Number of bytes to write.</param>
        </member>
        <member name="M:SharpUtilities.Native.Memory.Copy(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <summary>
            Function to copy data from one memory block to another.
            </summary>
            <param name="sourcePointer">Pointer to copy from.</param>
            <param name="destinationPointer">Pointer to copy into.</param>
            <param name="sourceOffset">Position to start copying from.</param>
            <param name="destinationOffset">Position in destination.</param>
            <param name="length">Number of bytes to copy.</param>
        </member>
        <member name="T:SharpUtilities.Mathematics.Vector3D">
            <summary>
            Value type to represent a 3 dimensional vector.
            </summary>
            <remarks>
            Vector mathematics are commonly used in graphical 3D applications.  And other
            spatial related computations.
            This valuetype provides us a convienient way to use vectors and their operations.
            </remarks>
        </member>
        <member name="F:SharpUtilities.Mathematics.Vector3D.X">
            <summary>
            Horizontal position of the vector.
            </summary>
        </member>
        <member name="F:SharpUtilities.Mathematics.Vector3D.Y">
            <summary>
            Vertical position of the vector.
            </summary>
        </member>
        <member name="F:SharpUtilities.Mathematics.Vector3D.Z">
            <summary>
            Depth position of the vector.
            </summary>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector3D.RotationTo(SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Function to determine the shortest arc between this and another vector.
            </summary>
            <param name="destination">Point in space to rotate towards.</param>
            <returns>New orientation.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector3D.DotProduct(SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Function to perform a dot product between this and another vector.
            </summary>
            <param name="vector">Vector to get the dot product against.</param>
            <returns>The dot product.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector3D.CrossProduct(SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Function to perform a cross product between this and another vector.
            </summary>
            <param name="vector">Vector to perform the cross product against.</param>
            <returns>Vector containin the cross product.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector3D.Normalize">
            <summary>
            Function to normalize the vector.
            </summary>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector3D.Floor(SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Function to set this vector to the lowest values of the vector passed, if the values are lower.
            </summary>
            <param name="compare">Vector to compare.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector3D.Ceiling(SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Function to set this vector to the highest values of the vector passed, if the values are higher.
            </summary>
            <param name="compare">Vector to compare.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector3D.Equals(System.Object)">
            <summary>
            Function to compare this vector to another object.
            </summary>
            <param name="obj">Object to compare.</param>
            <returns>TRUE if equal, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector3D.GetHashCode">
            <summary>
            Function to return the hash code for this object.
            </summary>
            <returns>The hash code for this object.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector3D.ToString">
            <summary>
            Function to return the textual representation of this object.
            </summary>
            <returns>A string containing the type and values of the object.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector3D.Add(SharpUtilities.Mathematics.Vector3D,SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Function to perform addition upon two vectors.
            </summary>
            <param name="left">Vector to add to.</param>
            <param name="right">Vector to add with.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector3D.Subtract(SharpUtilities.Mathematics.Vector3D,SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Function to perform subtraction upon two vectors.
            </summary>
            <param name="left">Vector to subtract.</param>
            <param name="right">Vector to subtract with.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector3D.Negate(SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Function to return a negated vector.
            </summary>
            <param name="left">Vector to negate.</param>
            <returns>A negated vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector3D.Divide(SharpUtilities.Mathematics.Vector3D,System.Single)">
            <summary>
            Function to divide a vector by a scalar value.
            </summary>
            <param name="left">Vector to divide.</param>
            <param name="scalar">Scalar value to divide by.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector3D.Divide(SharpUtilities.Mathematics.Vector3D,SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Function to divide a vector by another vector.
            </summary>
            <param name="left">Vector to divide.</param>
            <param name="right">Vector to divide by.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector3D.Multiply(SharpUtilities.Mathematics.Vector3D,SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Function to multiply two vectors together.
            </summary>
            <param name="left">Vector to multiply.</param>
            <param name="right">Vector to multiply by.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector3D.Multiply(SharpUtilities.Mathematics.Vector3D,System.Single)">
            <summary>
            Function to multiply a vector by a scalar value.
            </summary>
            <param name="left">Vector to multiply with.</param>
            <param name="scalar">Scalar value to multiply by.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector3D.Multiply(System.Single,SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Function to multiply a vector by a scalar value.
            </summary>
            <param name="scalar">Scalar value to multiply by.</param>
            <param name="right">Vector to multiply with.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector3D.op_Equality(SharpUtilities.Mathematics.Vector3D,SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Operator to perform equality tests.
            </summary>
            <param name="left">Vector to compare.</param>
            <param name="right">Vector to compare with.</param>
            <returns>TRUE if equal, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector3D.op_Inequality(SharpUtilities.Mathematics.Vector3D,SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Operator to perform inequality tests.
            </summary>
            <param name="left">Vector to compare.</param>
            <param name="right">Vector to compare with.</param>
            <returns>TRUE if not equal, FALSE if they are.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector3D.op_LessThan(SharpUtilities.Mathematics.Vector3D,SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Operator to perform a test to see if the left is less than the right.
            </summary>
            <param name="left">Left vector to compare.</param>
            <param name="right">Right vector to compare.</param>
            <returns>TRUE if left is less than right, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector3D.op_GreaterThan(SharpUtilities.Mathematics.Vector3D,SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Operator to perform a test to see if the left is greater than the right.
            </summary>
            <param name="left">Left vector to compare.</param>
            <param name="right">Right vector to compare.</param>
            <returns>TRUE if left is greater than right, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector3D.op_LessThanOrEqual(SharpUtilities.Mathematics.Vector3D,SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Operator to perform a test to see if the left is less or equal to the right.
            </summary>
            <param name="left">Left vector to compare.</param>
            <param name="right">Right vector to compare.</param>
            <returns>TRUE if left is less than right, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector3D.op_GreaterThanOrEqual(SharpUtilities.Mathematics.Vector3D,SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Operator to perform a test to see if the left is greater or equal to the right.
            </summary>
            <param name="left">Left vector to compare.</param>
            <param name="right">Right vector to compare.</param>
            <returns>TRUE if left is greater than right, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector3D.op_Addition(SharpUtilities.Mathematics.Vector3D,SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Operator to perform addition upon two vectors.
            </summary>
            <param name="left">Vector to add to.</param>
            <param name="right">Vector to add with.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector3D.op_Subtraction(SharpUtilities.Mathematics.Vector3D,SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Operator to perform subtraction upon two vectors.
            </summary>
            <param name="left">Vector to subtract.</param>
            <param name="right">Vector to subtract with.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector3D.op_UnaryNegation(SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Operator to negate a vector.
            </summary>
            <param name="left">Vector to negate.</param>
            <returns>A negated vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector3D.op_Multiply(SharpUtilities.Mathematics.Vector3D,SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Operator to multiply two vectors together.
            </summary>
            <param name="left">Vector to multiply.</param>
            <param name="right">Vector to multiply by.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector3D.op_Multiply(SharpUtilities.Mathematics.Vector3D,System.Single)">
            <summary>
            Operator to multiply a vector by a scalar value.
            </summary>
            <param name="left">Vector to multiply with.</param>
            <param name="scalar">Scalar value to multiply by.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector3D.op_Multiply(System.Single,SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Operator to multiply a vector by a scalar value.
            </summary>
            <param name="scalar">Scalar value to multiply by.</param>
            <param name="right">Vector to multiply with.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector3D.op_Division(SharpUtilities.Mathematics.Vector3D,System.Single)">
            <summary>
            Operator to divide a vector by a scalar value.
            </summary>
            <param name="left">Vector to divide.</param>
            <param name="scalar">Scalar value to divide by.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector3D.op_Division(SharpUtilities.Mathematics.Vector3D,SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Operator to divide a vector by another vector.
            </summary>
            <param name="left">Vector to divide.</param>
            <param name="right">Vector to divide by.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector3D.op_Implicit(SharpUtilities.Mathematics.Vector2D)~SharpUtilities.Mathematics.Vector3D">
            <summary>
            Operator to convert a 2D vector into a 3D vector.
            </summary>
            <param name="vector">2D vector.</param>
            <returns>3D vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector3D.op_Explicit(SharpUtilities.Mathematics.Vector3D)~SharpUtilities.Mathematics.Vector2D">
            <summary>
            Operator to convert a 3D vector into a 2D vector.
            </summary>
            <param name="vector">3D vector to convert.</param>
            <returns>2D vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector3D.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Constructor.
            </summary>
            <param name="x">Horizontal position of the vector.</param>
            <param name="y">Vertical posiition of the vector.</param>
            <param name="z">Depth position of the vector.</param>
        </member>
        <member name="P:SharpUtilities.Mathematics.Vector3D.Length">
            <summary>
            Property to return the length of this vector.
            </summary>
        </member>
        <member name="P:SharpUtilities.Mathematics.Vector3D.LengthSquare">
            <summary>
            Property to return the length of this vector squared.
            </summary>
        </member>
        <member name="P:SharpUtilities.Mathematics.Vector3D.InverseLength">
            <summary>
            Property to return the inverse length of this vector.
            </summary>
        </member>
        <member name="P:SharpUtilities.Mathematics.Vector3D.Zero">
            <summary>
            Property to return a zeroed vector.
            </summary>
        </member>
        <member name="P:SharpUtilities.Mathematics.Vector3D.Unit">
            <summary>
            Property to return a unit vector (1,1,1).
            </summary>
        </member>
        <member name="P:SharpUtilities.Mathematics.Vector3D.UnitX">
            <summary>
            Property to return a unit vector for the X axis (1,0,0).
            </summary>
        </member>
        <member name="P:SharpUtilities.Mathematics.Vector3D.UnitY">
            <summary>
            Property to return a unit vector for the Y axis (0,1,0).
            </summary>
        </member>
        <member name="P:SharpUtilities.Mathematics.Vector3D.UnitZ">
            <summary>
            Property to return a unit vector for the X axis (0,0,1).
            </summary>
        </member>
        <member name="T:SharpUtilities.NamedObject">
            <summary>
            Abstract Class representing a named object.
            </summary>
            <remarks>Classes inheriting from this object will have a name associated with it.  This is handy when dealing with unique objects within a collection.</remarks>
        </member>
        <member name="F:SharpUtilities.NamedObject._objectName">
            <summary>
            The name of the object.
            </summary>
        </member>
        <member name="M:SharpUtilities.NamedObject.Equals(System.Object)">
            <summary>
            Function to determine if this named object is the same as another named object.
            </summary>
            <param name="obj">Object to compare.</param>
            <returns>TRUE if equal, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.NamedObject.GetHashCode">
            <summary>
            Function to return the hash code for this object.
            </summary>
            <remarks>
            A hash code is used by dictionaries and hash tables to determine uniqueness of an object within those collections.
            <para>
            Hash values are related to their types, and as such should use one or more of its instance fields hash codes to build the hash code.
            </para>
            </remarks>
            <returns>A 32 bit integer representing the hash code.</returns>
        </member>
        <member name="M:SharpUtilities.NamedObject.ToString">
            <summary>
            Function to return the string representation of this object.
            </summary>
            <returns>A string containing the name of the type and the name stored within the object.</returns>
        </member>
        <member name="M:SharpUtilities.NamedObject.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <remarks>
            Since the <seealso cref="P:SharpUtilities.NamedObject.Name"></seealso><see cref="P:SharpUtilities.NamedObject.Name">Name</see> property is read-only, the name for an object must be passed to this constructor.  
            <para>Typically it will be difficult to rename an object that resides in a collection with its name as the key, thus making the property writable would be counter-productive.</para>
            	<para>However, objects that descend from this object may choose to implement their own renaming scheme if they so choose.</para>
            	<para>Ensure that the name parameter has a non-null string or is not a zero-length string.  Failing to do so will raise a <see cref="T:SharpUtilities.SharpException">SharpException</see>.</para>
            </remarks>
            <exception cref="T:SharpUtilities.InvalidNameException">Thrown when the name parameter is NULL or a zero length string.</exception>
            <param name="name">Name for this object.</param>
        </member>
        <member name="P:SharpUtilities.NamedObject.Name">
            <summary>
            Read-only property to return the name of this object.
            </summary>
            <remarks>The name of an object need not be unique, however if it is used as a key value for a collection then it should be unique.</remarks>
            <value>A <see cref="T:System.String">string</see> containing the name of this object.</value>
        </member>
        <member name="T:SharpUtilities.Collections.DuplicateObjectException">
            <summary>
            Duplicate object exception.
            </summary>
            <remarks>Exception thrown when there is an attempt to add an object with the same key as another object already existing in the collection.</remarks>
        </member>
        <member name="T:SharpUtilities.SharpException">
            <summary>
            Base exception object.
            </summary>
            <remarks>This exception is the base exception for all other exceptions thrown from this library.</remarks>
            <example>
            [C#] The following example shows how to catch a SharpUtilities exception:
            <code>
            public void DisplayCPUName(int cpuIndex)
            {
            	YourComputer cpuID;		// CPU information.
            	/* ... create the YourComputer object, etc... */
            	
            	try
            	{
            		// This will fail if the cpuIndex is greater than the # of 
            		// CPUs present on the computer.
            		MessageBox.Show("This is a CPU named: " + cpuID.CPU[cpuIndex].Name);
            	}
            	catch(IndexOutOfBoundsException e)
            	{
            	    MessageBox.Show("The CPU Index is larger than the number of CPUs present in the computer.");
            	}
                catch(SharpException e)
                {
                    // Alternatively, the exception can be handled this way:
                    if ((CollectionErrorCodes)e.ErrorCode == CollectionErrorCodes.IndexOutOfBounds)
                        MessageBox.Show("The CPU Index is larger than the number of CPUs present in the computer.");    
                }
            }
            </code>
            </example>
        </member>
        <member name="F:SharpUtilities.SharpException._showStack">
            <summary>Flag to show execution stack info.</summary>
        </member>
        <member name="M:SharpUtilities.SharpException.#ctor(System.String,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="errorMessage">Error message to display.</param>
            <param name="errorCode">Error code.</param>
        </member>
        <member name="M:SharpUtilities.SharpException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor.
            </summary>
            <param name="errorMessage">Error message to display.</param>
            <param name="innerException">Inner exception to pass through.</param>
        </member>
        <member name="M:SharpUtilities.SharpException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="errorMessage">Error message to display.</param>
        </member>
        <member name="M:SharpUtilities.SharpException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serialized constructor.
            </summary>
            <param name="info">Serialization info.</param>
            <param name="context">Serialization context.</param>
        </member>
        <member name="M:SharpUtilities.SharpException.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:SharpUtilities.SharpException.ShowStack">
            <summary>
            Property to set or return whether we show stack information.
            </summary>
        </member>
        <member name="P:SharpUtilities.SharpException.ErrorLog">
            <summary>
            Property to return the error message.
            </summary>
        </member>
        <member name="P:SharpUtilities.SharpException.ErrorCode">
            <summary>
            Property to return the error code.
            </summary>
        </member>
        <member name="M:SharpUtilities.Collections.DuplicateObjectException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="keyName">Key name of the object that caused the exception.</param>
        </member>
        <member name="T:SharpUtilities.Collections.KeyNotFoundException">
            <summary>
            Key not found exception.
            </summary>
            <remarks>Exception thrown when a key does not exist within a collection.</remarks>
        </member>
        <member name="M:SharpUtilities.Collections.KeyNotFoundException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="keyName">Key name of the object that caused the exception.</param>
        </member>
        <member name="T:SharpUtilities.Collections.IndexOutOfBoundsException">
            <summary>
            Invalid index exception.
            </summary>
            <remarks>Exception thrown when an index is outside of the bounds of an array/collection.</remarks>
        </member>
        <member name="M:SharpUtilities.Collections.IndexOutOfBoundsException.#ctor(System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="index">Index that was outside of the bounds of the collection.</param>
        </member>
        <member name="T:SharpUtilities.Mathematics.Vector4D">
            <summary>
            Value type to represent a 4 dimensional vector.
            </summary>
            <remarks>
            Vector mathematics are commonly used in graphical 3D applications.  And other
            spatial related computations.
            This valuetype provides us a convienient way to use vectors and their operations.
            </remarks>
        </member>
        <member name="F:SharpUtilities.Mathematics.Vector4D.X">
            <summary>
            Horizontal position of the vector.
            </summary>
        </member>
        <member name="F:SharpUtilities.Mathematics.Vector4D.Y">
            <summary>
            Vertical position of the vector.
            </summary>
        </member>
        <member name="F:SharpUtilities.Mathematics.Vector4D.Z">
            <summary>
            Depth position of the vector.
            </summary>
        </member>
        <member name="F:SharpUtilities.Mathematics.Vector4D.W">
            <summary>
            Homogeneous unit.
            </summary>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector4D.DotProduct(SharpUtilities.Mathematics.Vector4D)">
            <summary>
            Function to perform a dot product between this and another vector.
            </summary>
            <param name="vector">Vector to get the dot product against.</param>
            <returns>The dot product.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector4D.CrossProduct(SharpUtilities.Mathematics.Vector4D)">
            <summary>
            Function to perform a cross product between this and another vector.
            </summary>
            <param name="vector">Vector to perform the cross product against.</param>
            <returns>Vector containin the cross product.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector4D.Normalize">
            <summary>
            Function to normalize the vector.
            </summary>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector4D.Equals(System.Object)">
            <summary>
            Function to compare this vector to another object.
            </summary>
            <param name="obj">Object to compare.</param>
            <returns>TRUE if equal, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector4D.GetHashCode">
            <summary>
            Function to return the hash code for this object.
            </summary>
            <returns>The hash code for this object.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector4D.ToString">
            <summary>
            Function to return the textual representation of this object.
            </summary>
            <returns>A string containing the type and values of the object.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector4D.Add(SharpUtilities.Mathematics.Vector4D,SharpUtilities.Mathematics.Vector4D)">
            <summary>
            Function to perform addition upon two vectors.
            </summary>
            <param name="left">Vector to add to.</param>
            <param name="right">Vector to add with.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector4D.Subtract(SharpUtilities.Mathematics.Vector4D,SharpUtilities.Mathematics.Vector4D)">
            <summary>
            Function to perform subtraction upon two vectors.
            </summary>
            <param name="left">Vector to subtract.</param>
            <param name="right">Vector to subtract with.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector4D.Negate(SharpUtilities.Mathematics.Vector4D)">
            <summary>
            Function to return a negated vector.
            </summary>
            <param name="left">Vector to negate.</param>
            <returns>A negated vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector4D.Divide(SharpUtilities.Mathematics.Vector4D,System.Single)">
            <summary>
            Function to divide a vector by a scalar value.
            </summary>
            <param name="left">Vector to divide.</param>
            <param name="scalar">Scalar value to divide by.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector4D.Divide(SharpUtilities.Mathematics.Vector4D,SharpUtilities.Mathematics.Vector4D)">
            <summary>
            Function to divide a vector by another vector.
            </summary>
            <param name="left">Vector to divide.</param>
            <param name="right">Vector to divide by.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector4D.Multiply(SharpUtilities.Mathematics.Vector4D,SharpUtilities.Mathematics.Vector4D)">
            <summary>
            Function to multiply two vectors together.
            </summary>
            <param name="left">Vector to multiply.</param>
            <param name="right">Vector to multiply by.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector4D.Multiply(SharpUtilities.Mathematics.Vector4D,System.Single)">
            <summary>
            Function to multiply a vector by a scalar value.
            </summary>
            <param name="left">Vector to multiply with.</param>
            <param name="scalar">Scalar value to multiply by.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector4D.Multiply(System.Single,SharpUtilities.Mathematics.Vector4D)">
            <summary>
            Function to multiply a vector by a scalar value.
            </summary>
            <param name="scalar">Scalar value to multiply by.</param>
            <param name="right">Vector to multiply with.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector4D.op_Equality(SharpUtilities.Mathematics.Vector4D,SharpUtilities.Mathematics.Vector4D)">
            <summary>
            Operator to perform equality tests.
            </summary>
            <param name="left">Vector to compare.</param>
            <param name="right">Vector to compare with.</param>
            <returns>TRUE if equal, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector4D.op_Inequality(SharpUtilities.Mathematics.Vector4D,SharpUtilities.Mathematics.Vector4D)">
            <summary>
            Operator to perform inequality tests.
            </summary>
            <param name="left">Vector to compare.</param>
            <param name="right">Vector to compare with.</param>
            <returns>TRUE if not equal, FALSE if they are.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector4D.op_LessThan(SharpUtilities.Mathematics.Vector4D,SharpUtilities.Mathematics.Vector4D)">
            <summary>
            Operator to perform a test to see if the left is less than the right.
            </summary>
            <param name="left">Left vector to compare.</param>
            <param name="right">Right vector to compare.</param>
            <returns>TRUE if left is less than right, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector4D.op_GreaterThan(SharpUtilities.Mathematics.Vector4D,SharpUtilities.Mathematics.Vector4D)">
            <summary>
            Operator to perform a test to see if the left is greater than the right.
            </summary>
            <param name="left">Left vector to compare.</param>
            <param name="right">Right vector to compare.</param>
            <returns>TRUE if left is greater than right, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector4D.op_LessThanOrEqual(SharpUtilities.Mathematics.Vector4D,SharpUtilities.Mathematics.Vector4D)">
            <summary>
            Operator to perform a test to see if the left is less or equal to the right.
            </summary>
            <param name="left">Left vector to compare.</param>
            <param name="right">Right vector to compare.</param>
            <returns>TRUE if left is less than right, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector4D.op_GreaterThanOrEqual(SharpUtilities.Mathematics.Vector4D,SharpUtilities.Mathematics.Vector4D)">
            <summary>
            Operator to perform a test to see if the left is greater or equal to the right.
            </summary>
            <param name="left">Left vector to compare.</param>
            <param name="right">Right vector to compare.</param>
            <returns>TRUE if left is greater than right, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector4D.op_Addition(SharpUtilities.Mathematics.Vector4D,SharpUtilities.Mathematics.Vector4D)">
            <summary>
            Operator to perform addition upon two vectors.
            </summary>
            <param name="left">Vector to add to.</param>
            <param name="right">Vector to add with.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector4D.op_Subtraction(SharpUtilities.Mathematics.Vector4D,SharpUtilities.Mathematics.Vector4D)">
            <summary>
            Operator to perform subtraction upon two vectors.
            </summary>
            <param name="left">Vector to subtract.</param>
            <param name="right">Vector to subtract with.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector4D.op_UnaryNegation(SharpUtilities.Mathematics.Vector4D)">
            <summary>
            Operator to negate a vector.
            </summary>
            <param name="left">Vector to negate.</param>
            <returns>A negated vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector4D.op_Multiply(SharpUtilities.Mathematics.Vector4D,SharpUtilities.Mathematics.Vector4D)">
            <summary>
            Operator to multiply two vectors together.
            </summary>
            <param name="left">Vector to multiply.</param>
            <param name="right">Vector to multiply by.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector4D.op_Multiply(SharpUtilities.Mathematics.Vector4D,System.Single)">
            <summary>
            Operator to multiply a vector by a scalar value.
            </summary>
            <param name="left">Vector to multiply with.</param>
            <param name="scalar">Scalar value to multiply by.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector4D.op_Multiply(System.Single,SharpUtilities.Mathematics.Vector4D)">
            <summary>
            Operator to multiply a vector by a scalar value.
            </summary>
            <param name="scalar">Scalar value to multiply by.</param>
            <param name="right">Vector to multiply with.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector4D.op_Division(SharpUtilities.Mathematics.Vector4D,System.Single)">
            <summary>
            Operator to divide a vector by a scalar value.
            </summary>
            <param name="left">Vector to divide.</param>
            <param name="scalar">Scalar value to divide by.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector4D.op_Division(SharpUtilities.Mathematics.Vector4D,SharpUtilities.Mathematics.Vector4D)">
            <summary>
            Operator to divide a vector by another vector.
            </summary>
            <param name="left">Vector to divide.</param>
            <param name="right">Vector to divide by.</param>
            <returns>A new vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector4D.op_Implicit(SharpUtilities.Mathematics.Vector2D)~SharpUtilities.Mathematics.Vector4D">
            <summary>
            Operator to convert a 2D vector into a 4D vector.
            </summary>
            <param name="vector">2D vector.</param>
            <returns>4D vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector4D.op_Implicit(SharpUtilities.Mathematics.Vector3D)~SharpUtilities.Mathematics.Vector4D">
            <summary>
            Operator to convert a 3D vector into a 4D vector.
            </summary>
            <param name="vector">3D vector</param>
            <returns>4D vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector4D.op_Explicit(SharpUtilities.Mathematics.Vector4D)~SharpUtilities.Mathematics.Vector3D">
            <summary>
            Operator to convert a 4D vector into a 3D vector.
            </summary>
            <param name="vector">4D vector to convert.</param>
            <returns>3D vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector4D.op_Explicit(SharpUtilities.Mathematics.Vector4D)~SharpUtilities.Mathematics.Vector2D">
            <summary>
            Operator to convert a 4D vector into a 2D vector.
            </summary>
            <param name="vector">4D vector to convert.</param>
            <returns>2D vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Vector4D.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Constructor.
            </summary>
            <param name="x">Horizontal position of the vector.</param>
            <param name="y">Vertical posiition of the vector.</param>
            <param name="z">Depth position of the vector.</param>
            <param name="w">W component of the vector.</param>
        </member>
        <member name="P:SharpUtilities.Mathematics.Vector4D.Length">
            <summary>
            Property to return the length of this vector.
            </summary>
        </member>
        <member name="P:SharpUtilities.Mathematics.Vector4D.LengthSquare">
            <summary>
            Property to return the length of this vector squared.
            </summary>
        </member>
        <member name="P:SharpUtilities.Mathematics.Vector4D.InverseLength">
            <summary>
            Property to return the inverse length of this vector.
            </summary>
        </member>
        <member name="P:SharpUtilities.Mathematics.Vector4D.Zero">
            <summary>
            Property to return a zeroed vector.
            </summary>
        </member>
        <member name="P:SharpUtilities.Mathematics.Vector4D.Unit">
            <summary>
            Property to return a unit vector (1,1,1,1).
            </summary>
        </member>
        <member name="P:SharpUtilities.Mathematics.Vector4D.UnitX">
            <summary>
            Property to return a unit vector for the X axis (1,0,0,1).
            </summary>
        </member>
        <member name="P:SharpUtilities.Mathematics.Vector4D.UnitY">
            <summary>
            Property to return a unit vector for the Y axis (0,1,0,1).
            </summary>
        </member>
        <member name="P:SharpUtilities.Mathematics.Vector4D.UnitZ">
            <summary>
            Property to return a unit vector for the X axis (0,0,1,1).
            </summary>
        </member>
        <member name="T:SharpUtilities.Mathematics.Plane">
            <summary>
            Value type representing a plane.
            </summary>
            <remarks>
            A plane is a 2D rectangle with infinite length in one of the dimensions.
            Planes are often used to test for intersections and frustrum culling in 3D math.
            </remarks>
        </member>
        <member name="F:SharpUtilities.Mathematics.Plane.D">
            <summary>
            Distance from the origin.
            </summary>
        </member>
        <member name="F:SharpUtilities.Mathematics.Plane.Normal">
            <summary>
            Normal to the plane.
            </summary>
        </member>
        <member name="M:SharpUtilities.Mathematics.Plane.Distance(SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Function to return the distance between a point and the plane.
            </summary>
            <param name="point1">Point to test.</param>
            <returns>Distance between point and plane.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Plane.SetNormal(System.Single,System.Single,System.Single)">
            <summary>
            Function to set the normal direction.
            </summary>
            <param name="x">Horizontal direction of the normal.</param>
            <param name="y">Vertical direction of the normal.</param>
            <param name="z">Depth direction of the normal.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.Plane.SetNormal(SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Function to set the normal direction.
            </summary>
            <param name="vector">Vector to set as the normal.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.Plane.Update(SharpUtilities.Mathematics.Vector3D,SharpUtilities.Mathematics.Vector3D,SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Function to update the dimensions of the plane.
            </summary>
            <param name="point1">First corner.</param>
            <param name="point2">Second corner.</param>
            <param name="point3">Third corner..</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.Plane.Intersects(SharpUtilities.Mathematics.Ray)">
            <summary>
            Function to test for an intersection with a ray.
            </summary>
            <param name="ray">Ray to test.</param>
            <returns>Intersection results.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Plane.Intersects(SharpUtilities.Mathematics.AABB)">
            <summary>
            Function to test for an intersection with an AABB.
            </summary>
            <param name="box">AABB to test.</param>
            <returns>Intersection results.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Plane.Intersects(SharpUtilities.Mathematics.SphereVolume)">
            <summary>
            Function to test for an intersection with a sphere volume.
            </summary>
            <param name="sphere">Sphere to test.</param>
            <returns>TRUE if there was an intersection, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Plane.WhereIs(SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Function to return whether a point is on, behind or in front of the plane.
            </summary>
            <param name="point">Point to test.</param>
            <returns>A value indicating whether the point is on, behind or in front of the plane.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Plane.Equals(System.Object)">
            <summary>
            Function to check if the object is the same as this plane.
            </summary>
            <param name="obj">Object to test.</param>
            <returns>TRUE if equal, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Plane.GetHashCode">
            <summary>
            Function to return the hashcode for this object.
            </summary>
            <returns>Hashcode for the object.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Plane.ToString">
            <summary>
            Function to return a string representation of the plane.
            </summary>
            <returns>A string representing the plane values.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Plane.op_Equality(SharpUtilities.Mathematics.Plane,SharpUtilities.Mathematics.Plane)">
            <summary>
            Operator to test if the planes are equal.
            </summary>
            <param name="left">Left plane to compare.</param>
            <param name="right">Right plane to compare.</param>
            <returns>TRUE if the same, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Plane.op_Inequality(SharpUtilities.Mathematics.Plane,SharpUtilities.Mathematics.Plane)">
            <summary>
            Operator to test if the planes aren't equal.
            </summary>
            <param name="left">Left plane to compare.</param>
            <param name="right">Right plane to compare.</param>
            <returns>TRUE if not equal, FALSE if they are.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Plane.#ctor(SharpUtilities.Mathematics.Vector3D,SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Constructors.
            </summary>
            <param name="point">Point in space for the plane.</param>
            <param name="normal">Normal of the plane.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.Plane.#ctor(SharpUtilities.Mathematics.Vector3D,System.Single)">
            <summary>
            Constructor.
            </summary>
            <param name="normal">Normal to the plane.</param>
            <param name="originDistance">Distance from origin.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.Plane.#ctor(SharpUtilities.Mathematics.Vector3D,SharpUtilities.Mathematics.Vector3D,SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Constructor.
            </summary>
            <param name="p1">Point 1.</param>
            <param name="p2">Point 2.</param>
            <param name="p3">Point 3.</param>
        </member>
        <member name="P:SharpUtilities.Mathematics.Plane.UnitX">
            <summary>
            Property to return a plane with at the origin with its normal pointing along the X axis.
            </summary>
        </member>
        <member name="P:SharpUtilities.Mathematics.Plane.UnitY">
            <summary>
            Property to return a plane with at the origin with its normal pointing along the Y axis.
            </summary>
        </member>
        <member name="P:SharpUtilities.Mathematics.Plane.UnitZ">
            <summary>
            Property to return a plane with at the origin with its normal pointing along the Z axis.
            </summary>
        </member>
        <member name="T:SharpUtilities.Utility.ConfirmationDialog">
            <summary>
            Dialog for confirmation.
            </summary>
        </member>
        <member name="T:SharpUtilities.Utility.BaseDialog">
            <summary>
            Base form for common dialogs.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.BaseDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SharpUtilities.Utility.BaseDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SharpUtilities.Utility.BaseDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.BaseDialog.imageIcon">
            <summary>
            Image used for the dialog icon.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.BaseDialog.OKButton">
            <summary>
            OK button.
            </summary>
        </member>
        <member name="M:SharpUtilities.Utility.BaseDialog.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.KeyDown"></see> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:SharpUtilities.Utility.BaseDialog.ValidateFunctions">
            <summary>
            Function to validate the various functions bound to the form.
            </summary>
        </member>
        <member name="M:SharpUtilities.Utility.BaseDialog.OnLoad(System.EventArgs)">
            <summary>
            Form load event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:SharpUtilities.Utility.BaseDialog.OnShown(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Form.Shown"></see> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:SharpUtilities.Utility.BaseDialog.DrawDialog(System.Drawing.Graphics)">
            <summary>
            Function to perform the actual drawing of the dialog.
            </summary>
            <param name="g">Graphics object to use.</param>
        </member>
        <member name="M:SharpUtilities.Utility.BaseDialog.AdjustSize(System.Drawing.Graphics,System.Int32)">
            <summary>
            Function to adjust the size of the form based on the details.
            </summary>
            <param name="g">Graphics interface.</param>
            <param name="margin">Places a margin at the bottom of the form.</param>
            <returns>The new maximum height of the client area.</returns>
        </member>
        <member name="M:SharpUtilities.Utility.BaseDialog.DrawMessage(System.Drawing.Graphics,System.Single)">
            <summary>
            Function to draw the dialog box message.
            </summary>    /// 
            <param name="g">Graphics interface.</param>
            <param name="maxTextHeight">Maximum height that the text will fit into.</param>
        </member>
        <member name="M:SharpUtilities.Utility.BaseDialog.OnSizeChanged(System.EventArgs)">
            <summary>
            Size changed event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:SharpUtilities.Utility.BaseDialog.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:Paint"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:SharpUtilities.Utility.BaseDialog.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.BaseDialog.MessageLeft">
            <summary>
            Property to set or return the horizontal position of the text.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.BaseDialog.MessageTop">
            <summary>
            Property to set or return the vertical position of the text.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.BaseDialog.MessageWidth">
            <summary>
            Property to set or return the maximum width of the text.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.BaseDialog.MessageHeight">
            <summary>
            Property to set or return the maximum height of the text.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.BaseDialog.Message">
            <summary>
            Property to set or return the message for the dialog.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.ConfirmationDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SharpUtilities.Utility.ConfirmationDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SharpUtilities.Utility.ConfirmationDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.ConfirmationDialog.buttonNo">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.ConfirmationDialog.buttonCancel">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.ConfirmationDialog._result">
            <summary>
            Result of the dialog.
            </summary>
        </member>
        <member name="M:SharpUtilities.Utility.ConfirmationDialog.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Form.FormClosing"></see> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.FormClosingEventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:SharpUtilities.Utility.ConfirmationDialog.OKButton_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the OKButton control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:SharpUtilities.Utility.ConfirmationDialog.buttonCancel_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the buttonCancel control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:SharpUtilities.Utility.ConfirmationDialog.buttonNo_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the buttonNo control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:SharpUtilities.Utility.ConfirmationDialog.DrawDialog(System.Drawing.Graphics)">
            <summary>
            Function to perform the actual drawing of the dialog.
            </summary>
            <param name="g">Graphics object to use.</param>
        </member>
        <member name="M:SharpUtilities.Utility.ConfirmationDialog.OnLoad(System.EventArgs)">
            <summary>
            Form load event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:SharpUtilities.Utility.ConfirmationDialog.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.ConfirmationDialog.ShowCancel">
            <summary>
            Property to set or return whether to show the cancel button.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.ConfirmationDialog.ConfirmationResult">
            <summary>
            Property to return the confirmation dialog result.
            </summary>
        </member>
        <member name="T:SharpUtilities.NamedObjectErrorCodes">
            <summary>
            Enumeration for named object error codes.
            </summary>
        </member>
        <member name="F:SharpUtilities.NamedObjectErrorCodes.InvalidName">
            <summary>
            Name of the object is either zero length or NULL.
            </summary>
        </member>
        <member name="T:SharpUtilities.Utility.EnvironmentVariable">
            <summary>
            A value type representing an environment variable and its value.
            </summary>
        </member>
        <member name="M:SharpUtilities.Utility.EnvironmentVariable.#ctor(System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="name">Name of the variable.</param>
            <param name="value">Value of the variable.</param>
        </member>
        <member name="P:SharpUtilities.Utility.EnvironmentVariable.Name">
            <summary>
            Property to return the variable name.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.EnvironmentVariable.Value">
            <summary>
            Property to return the variable value.
            </summary>
        </member>
        <member name="T:SharpUtilities.Mathematics.Matrix">
            <summary>
            A value type representing a 4x4 matrix.
            </summary>
            <remarks>
            A matrix is used to track linear transformations and their coefficients.
            They are used often in 3D graphics to facilitate the transformation of 
            polygonal data.
            </remarks>
        </member>
        <member name="F:SharpUtilities.Mathematics.Matrix.m11">
            <summary>Matrix row 1 values.</summary>
        </member>
        <member name="F:SharpUtilities.Mathematics.Matrix.m12">
            <summary>Matrix row 1 values.</summary>
        </member>
        <member name="F:SharpUtilities.Mathematics.Matrix.m13">
            <summary>Matrix row 1 values.</summary>
        </member>
        <member name="F:SharpUtilities.Mathematics.Matrix.m14">
            <summary>Matrix row 1 values.</summary>
        </member>
        <member name="F:SharpUtilities.Mathematics.Matrix.m21">
            <summary>Matrix row 2 values.</summary>
        </member>
        <member name="F:SharpUtilities.Mathematics.Matrix.m22">
            <summary>Matrix row 2 values.</summary>
        </member>
        <member name="F:SharpUtilities.Mathematics.Matrix.m23">
            <summary>Matrix row 2 values.</summary>
        </member>
        <member name="F:SharpUtilities.Mathematics.Matrix.m24">
            <summary>Matrix row 2 values.</summary>
        </member>
        <member name="F:SharpUtilities.Mathematics.Matrix.m31">
            <summary>Matrix row 3 values.</summary>
        </member>
        <member name="F:SharpUtilities.Mathematics.Matrix.m32">
            <summary>Matrix row 3 values.</summary>
        </member>
        <member name="F:SharpUtilities.Mathematics.Matrix.m33">
            <summary>Matrix row 3 values.</summary>
        </member>
        <member name="F:SharpUtilities.Mathematics.Matrix.m34">
            <summary>Matrix row 3 values.</summary>
        </member>
        <member name="F:SharpUtilities.Mathematics.Matrix.m41">
            <summary>Matrix row 4 values.</summary>
        </member>
        <member name="F:SharpUtilities.Mathematics.Matrix.m42">
            <summary>Matrix row 4 values.</summary>
        </member>
        <member name="F:SharpUtilities.Mathematics.Matrix.m43">
            <summary>Matrix row 4 values.</summary>
        </member>
        <member name="F:SharpUtilities.Mathematics.Matrix.m44">
            <summary>Matrix row 4 values.</summary>
        </member>
        <member name="M:SharpUtilities.Mathematics.Matrix.SetColumn(System.Int32,SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Function to set a column in the matrix.
            </summary>
            <param name="column">Column number to set.</param>
            <param name="values">Values to fill the column with.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.Matrix.Column(System.Int32)">
            <summary>
            Function to extract a column of values from the matrix.
            </summary>
            <param name="column">Column to extract.</param>
            <returns>A vector containing the values of the column from the matrix.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Matrix.FromAxes(SharpUtilities.Mathematics.Vector3D,SharpUtilities.Mathematics.Vector3D,SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Function to set the values for the matrix based on Vectors representing the axes.
            </summary>
            <param name="x">X axis.</param>
            <param name="y">Y axis.</param>
            <param name="z">Z axis.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.Matrix.Translate(System.Single,System.Single,System.Single)">
            <summary>
            Function to perform a translation on the matrix.
            </summary>
            <param name="x">Amount to translate on the x axis.</param>
            <param name="y">Amount to translate on the y axis..</param>
            <param name="z">Amount to translate on the z axis.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.Matrix.Scale(System.Single,System.Single,System.Single)">
            <summary>
            Function to scale the matrix.
            </summary>
            <param name="x">Amount to scale on the X axis.</param>
            <param name="y">Amount to scale on the Y axis.</param>
            <param name="z">Amount to scale on the Z axis.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.Matrix.Translate(SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Function to perform a translation on the matrix with a vector..
            </summary>
            <param name="vec">Vector value to translate with</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.Matrix.Scale(SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Function to scale the matrix by a vector.
            </summary>
            <param name="vec">Vector to scale this matrix with.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.Matrix.RotateX(System.Single)">
            <summary>
            Function to rotate around the X axis.
            </summary>
            <param name="degrees">Amount to rotate in degrees.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.Matrix.RotateY(System.Single)">
            <summary>
            Function to rotate around the Y axis.
            </summary>
            <param name="degrees">Amount to rotate in degrees.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.Matrix.RotateZ(System.Single)">
            <summary>
            Function to rotate around the Z axis.
            </summary>
            <param name="degrees">Amount to rotate in degrees.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.Matrix.RotateEuler(System.Single,System.Single,System.Single)">
            <summary>
            Function to create this matrix from euler angles.
            </summary>		
            <param name="yaw">Yaw (Y-axis) rotation in degrees.</param>
            <param name="pitch">Pitch (X-axis) rotation in degrees.</param>
            <param name="roll">Roll (Z-axis) rotation in degrees.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.Matrix.ProjectVector(SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Function to transform and project a vector into world space.
            </summary>
            <param name="vec">Vector to transform.</param>
            <returns>Transformed vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Matrix.ToString">
            <summary>
            Function to output a string representation of the matrix.
            </summary>
            <returns>String containing matrix values.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Matrix.Multiply(SharpUtilities.Mathematics.Matrix,SharpUtilities.Mathematics.Matrix)">
            <summary>
            Function to multiply two matrices together.
            </summary>
            <param name="left">Matrix to multiply.</param>
            <param name="right">Matrix to multiply with.</param>
            <returns>Product of two matrices.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Matrix.Multiply(SharpUtilities.Mathematics.Matrix,SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Function to multiply a matrix by a 3D vector.
            </summary>
            <param name="mat">Matrix to multiply.</param>
            <param name="vec">Vector to multiply with.</param>
            <returns>A new vector containing the product.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Matrix.Multiply(SharpUtilities.Mathematics.Matrix,SharpUtilities.Mathematics.Vector4D)">
            <summary>
            Function to multiply a matrix by a 4D vector.
            </summary>
            <param name="mat">Matrix to multiply.</param>
            <param name="vec">4D Vector to multiply with.</param>
            <returns>A new 4D vector containing the product.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Matrix.Multiply(SharpUtilities.Mathematics.Matrix,System.Single)">
            <summary>
            Function to multiply a matrix by a scalar value.
            </summary>
            <param name="mat">Matrix to multiply.</param>
            <param name="scalar">Scalar value to multiply by.</param>
            <returns>Product of the multiplication</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Matrix.Add(SharpUtilities.Mathematics.Matrix,SharpUtilities.Mathematics.Matrix)">
            <summary>
            Function to add two matrices together.
            </summary>
            <param name="left">Matrix to add with.</param>
            <param name="right">Matrix to add.</param>
            <returns>Combined matrices.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Matrix.Subtract(SharpUtilities.Mathematics.Matrix,SharpUtilities.Mathematics.Matrix)">
            <summary>
            Function to subtract two matrices.
            </summary>
            <param name="left">Matrix to subtract from.</param>
            <param name="right">Matrix to subtract.</param>
            <returns>Matrix containing the difference.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Matrix.Negate(SharpUtilities.Mathematics.Matrix)">
            <summary>
            Function to negate a matrix.
            </summary>
            <param name="matrix">Matrix to negate.</param>
            <returns>Negative matrix.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Matrix.op_Multiply(SharpUtilities.Mathematics.Matrix,SharpUtilities.Mathematics.Matrix)">
            <summary>
            Operator to multiply two matrices together.
            </summary>
            <param name="left">Matrix to multiply.</param>
            <param name="right">Matrix to multiply with.</param>
            <returns>Product of two matrices.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Matrix.op_Multiply(SharpUtilities.Mathematics.Matrix,SharpUtilities.Mathematics.Vector4D)">
            <summary>
            Operator to multiply a matrix by a 4D vector.
            </summary>
            <param name="mat">Matrix to multiply.</param>
            <param name="vec">Vector to multiply.</param>
            <returns>A new vector containing the product.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Matrix.op_Multiply(SharpUtilities.Mathematics.Matrix,SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Operator to multiply a matrix by a vector.
            </summary>
            <param name="mat">Matrix to multiply.</param>
            <param name="vec">Vector to multiply with.</param>
            <returns>A new vector containing the product.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Matrix.op_Multiply(SharpUtilities.Mathematics.Matrix,System.Single)">
            <summary>
            Operator to multiply a matrix by a scalar value.
            </summary>
            <param name="mat">Matrix to multiply.</param>
            <param name="scalar">Scalar value to multiply by.</param>
            <returns>Product of the multiplication</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Matrix.op_Addition(SharpUtilities.Mathematics.Matrix,SharpUtilities.Mathematics.Matrix)">
            <summary>
            Operator to add two matrices together.
            </summary>
            <param name="left">Matrix to add with.</param>
            <param name="right">Matrix to add.</param>
            <returns>Combined matrices.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Matrix.op_Subtraction(SharpUtilities.Mathematics.Matrix,SharpUtilities.Mathematics.Matrix)">
            <summary>
            Operator to subtract two matrices.
            </summary>
            <param name="left">Matrix to subtract from.</param>
            <param name="right">Matrix to subtract.</param>
            <returns>Matrix containing the difference.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Matrix.op_UnaryNegation(SharpUtilities.Mathematics.Matrix)">
            <summary>
            Operator to negate a matrix.
            </summary>
            <param name="matrix">Matrix to negate.</param>
            <returns>Negative matrix.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:SharpUtilities.Mathematics.Matrix.Zero">
            <summary>
            Property to return a zero matrix.
            </summary>
        </member>
        <member name="P:SharpUtilities.Mathematics.Matrix.Identity">
            <summary>
            Property to return an identity matrix.
            </summary>
        </member>
        <member name="P:SharpUtilities.Mathematics.Matrix.Adjoint">
            <summary>
            Property to return the adjoint of this matrix.
            </summary>
        </member>
        <member name="P:SharpUtilities.Mathematics.Matrix.Item(System.Int32,System.Int32)">
            <summary>
            Property to return a value from the matrix by its row and column index.
            </summary>
        </member>
        <member name="P:SharpUtilities.Mathematics.Matrix.Transpose">
            <summary>
            Property to return the transpose of this matrix.
            </summary>
        </member>
        <member name="P:SharpUtilities.Mathematics.Matrix.Determinant">
            <summary>
            Property to return the determinant of this matrix.
            </summary>
        </member>
        <member name="P:SharpUtilities.Mathematics.Matrix.Inverse">
            <summary>
            Property to return the inverse of this matrix.
            </summary>
        </member>
        <member name="T:SharpUtilities.Console.ConsoleMouseArgs">
            <summary>
            Mouse event arguments.
            </summary>
        </member>
        <member name="F:SharpUtilities.Console.ConsoleMouseArgs.Left">
            <summary>Flag to indicate the left mouse button is pressed.</summary>
        </member>
        <member name="F:SharpUtilities.Console.ConsoleMouseArgs.Middle">
            <summary>Flag to indicate the middle mouse button is pressed.</summary>
        </member>
        <member name="F:SharpUtilities.Console.ConsoleMouseArgs.Right">
            <summary>Flag to indicate the right mouse button is pressed.</summary>
        </member>
        <member name="F:SharpUtilities.Console.ConsoleMouseArgs.ShiftShift">
            <summary>Flag to indicate the shift key is pressed.</summary>
        </member>
        <member name="F:SharpUtilities.Console.ConsoleMouseArgs.ShiftAlt">
            <summary>Flag to indicate the alt key is pressed.</summary>
        </member>
        <member name="F:SharpUtilities.Console.ConsoleMouseArgs.ShiftCtrl">
            <summary>Flag to indicate the ctrl key is pressed.</summary>
        </member>
        <member name="F:SharpUtilities.Console.ConsoleMouseArgs.ShiftDoubleClick">
            <summary>Double click.</summary>
        </member>
        <member name="F:SharpUtilities.Console.ConsoleMouseArgs.X">
            <summary>Horizontal position of the mouse cursor.</summary>
        </member>
        <member name="F:SharpUtilities.Console.ConsoleMouseArgs.Y">
            <summary>Vertical position of the mouse cursor.</summary>
        </member>
        <member name="T:SharpUtilities.Console.ConsoleIdleArgs">
            <summary>
            Idle event arguments.
            </summary>
        </member>
        <member name="F:SharpUtilities.Console.ConsoleIdleArgs.Done">
            <summary>Flag to indicate that we're done.</summary>
        </member>
        <member name="T:SharpUtilities.Console.ConsoleCloseArgs">
            <summary>
            Close event arguments.
            </summary>
        </member>
        <member name="F:SharpUtilities.Console.ConsoleCloseArgs.Cancel">
            <summary>Flag to indicate that we wish to cancel the close operation.</summary>
        </member>
        <member name="T:SharpUtilities.Console.ConsoleKeyArgs">
            <summary>
            Key event arguments.
            </summary>
        </member>
        <member name="F:SharpUtilities.Console.ConsoleKeyArgs.Key">
            <summary>Key that's been pressed.</summary>
        </member>
        <member name="F:SharpUtilities.Console.ConsoleKeyArgs.Char">
            <summary>Character.</summary>
        </member>
        <member name="F:SharpUtilities.Console.ConsoleKeyArgs.ShiftShift">
            <summary>Flag to indicate the shift key is pressed.</summary>
        </member>
        <member name="F:SharpUtilities.Console.ConsoleKeyArgs.ShiftAlt">
            <summary>Flag to indicate the alt key is pressed.</summary>
        </member>
        <member name="F:SharpUtilities.Console.ConsoleKeyArgs.ShiftCtrl">
            <summary>Flag to indicate the ctrl key is pressed.</summary>
        </member>
        <member name="T:SharpUtilities.Console.ConsoleMouseEvent">
            <summary>
            Event definition for console mouse events.
            </summary>
        </member>
        <member name="T:SharpUtilities.Console.ConsoleCloseEvent">
            <summary>
            Event definition for console close events.
            </summary>
        </member>
        <member name="T:SharpUtilities.Console.ConsoleIdleEvent">
            <summary>
            Event definition for console idle event.
            </summary>
        </member>
        <member name="T:SharpUtilities.Console.ConsoleKeyEvent">
            <summary>
            Event definition for console key events.
            </summary>
        </member>
        <member name="T:SharpUtilities.Rectangle3D">
            <summary>
            A value type representing a 3D rectangle.
            </summary>
        </member>
        <member name="M:SharpUtilities.Rectangle3D.SetPoints(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Function to set the points of the cube.
            </summary>
            <param name="x">Horizontal position of the cube.</param>
            <param name="y">Vertical position of the cube.</param>
            <param name="z">Depth position of the cube.</param>
            <param name="width">Width of the cube.</param>
            <param name="height">Height of the cube.</param>
            <param name="depth">Depth of the cube.</param>
        </member>
        <member name="M:SharpUtilities.Rectangle3D.SetVolume(System.Int32,System.Int32,System.Int32)">
            <summary>
            Function to set the volume of the cube.
            </summary>
            <param name="width">Width of the cube.</param>
            <param name="height">Height of the cube.</param>
            <param name="depth">Depth of the cube.</param>
        </member>
        <member name="M:SharpUtilities.Rectangle3D.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="x">Horizontal position of the cube.</param>
            <param name="y">Vertical position of the cube.</param>
            <param name="z">Depth position of the cube.</param>
            <param name="width">Width of the cube.</param>
            <param name="height">Height of the cube.</param>
            <param name="depth">Depth of the cube.</param>
        </member>
        <member name="P:SharpUtilities.Rectangle3D.Left">
            <summary>
            Property to set or return the left position of the cube.
            </summary>
        </member>
        <member name="P:SharpUtilities.Rectangle3D.Top">
            <summary>
            Property to set or return the top position of the cube.
            </summary>
        </member>
        <member name="P:SharpUtilities.Rectangle3D.Near">
            <summary>
            Property to set or return the nearest depth position of the cube.
            </summary>
        </member>
        <member name="P:SharpUtilities.Rectangle3D.Right">
            <summary>
            Property to return the right most point of the cube.
            </summary>
        </member>
        <member name="P:SharpUtilities.Rectangle3D.Bottom">
            <summary>
            Property to return the bottom most point of the cube.
            </summary>
        </member>
        <member name="P:SharpUtilities.Rectangle3D.Far">
            <summary>
            Property to return the furthest point of the cube.
            </summary>
        </member>
        <member name="P:SharpUtilities.Rectangle3D.Width">
            <summary>
            Property to set or return the width of the cube.
            </summary>
        </member>
        <member name="P:SharpUtilities.Rectangle3D.Height">
            <summary>
            Property to set or return the height of the cube.
            </summary>
        </member>
        <member name="P:SharpUtilities.Rectangle3D.Depth">
            <summary>
            Property to set or return the depth of the cube.
            </summary>
        </member>
        <member name="T:SharpUtilities.Rectangle3DF">
            <summary>
            A value type representing a 3D rectangle.
            </summary>
        </member>
        <member name="M:SharpUtilities.Rectangle3DF.SetPoints(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Function to set the points of the cube.
            </summary>
            <param name="x">Horizontal position of the cube.</param>
            <param name="y">Vertical position of the cube.</param>
            <param name="z">Depth position of the cube.</param>
            <param name="width">Width of the cube.</param>
            <param name="height">Height of the cube.</param>
            <param name="depth">Depth of the cube.</param>
        </member>
        <member name="M:SharpUtilities.Rectangle3DF.SetVolume(System.Single,System.Single,System.Single)">
            <summary>
            Function to set the volume of the cube.
            </summary>
            <param name="width">Width of the cube.</param>
            <param name="height">Height of the cube.</param>
            <param name="depth">Depth of the cube.</param>
        </member>
        <member name="M:SharpUtilities.Rectangle3DF.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Constructor.
            </summary>
            <param name="x">Horizontal position of the cube.</param>
            <param name="y">Vertical position of the cube.</param>
            <param name="z">Depth position of the cube.</param>
            <param name="width">Width of the cube.</param>
            <param name="height">Height of the cube.</param>
            <param name="depth">Depth of the cube.</param>
        </member>
        <member name="P:SharpUtilities.Rectangle3DF.Left">
            <summary>
            Property to set or return the left position of the cube.
            </summary>
        </member>
        <member name="P:SharpUtilities.Rectangle3DF.Top">
            <summary>
            Property to set or return the top position of the cube.
            </summary>
        </member>
        <member name="P:SharpUtilities.Rectangle3DF.Near">
            <summary>
            Property to set or return the nearest depth position of the cube.
            </summary>
        </member>
        <member name="P:SharpUtilities.Rectangle3DF.Right">
            <summary>
            Property to return the right most pofloat of the cube.
            </summary>
        </member>
        <member name="P:SharpUtilities.Rectangle3DF.Bottom">
            <summary>
            Property to return the bottom most pofloat of the cube.
            </summary>
        </member>
        <member name="P:SharpUtilities.Rectangle3DF.Far">
            <summary>
            Property to return the furthest pofloat of the cube.
            </summary>
        </member>
        <member name="P:SharpUtilities.Rectangle3DF.Width">
            <summary>
            Property to set or return the width of the cube.
            </summary>
        </member>
        <member name="P:SharpUtilities.Rectangle3DF.Height">
            <summary>
            Property to set or return the height of the cube.
            </summary>
        </member>
        <member name="P:SharpUtilities.Rectangle3DF.Depth">
            <summary>
            Property to set or return the depth of the cube.
            </summary>
        </member>
        <member name="T:SharpUtilities.IO.StreamReaderEx">
            <summary>
            Object representing a stream reader that can keep its stream open after it's closed.
            </summary>
        </member>
        <member name="M:SharpUtilities.IO.StreamReaderEx.Close">
            <summary>
            Function to close the reader and its underlying stream if KeepStreamOpen is false.
            </summary>
        </member>
        <member name="M:SharpUtilities.IO.StreamReaderEx.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="input">Input stream.</param>
            <param name="encoder">Encoding for the stream reader.</param>
            <param name="detectEncodingFromByteOrderMarks">Indicates whether to look for byte order marks at the beginning of the file.</param>
            <param name="bufferSize">Sets the buffer size.</param>
            <param name="keepStreamOpen">TRUE to keep the underlying stream open when the reader is closed, FALSE for normal behaviour.</param>
        </member>
        <member name="M:SharpUtilities.IO.StreamReaderEx.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="input">Input stream.</param>
            <param name="encoder">Encoding for the stream reader.</param>
            <param name="detectEncodingFromByteOrderMarks">Indicates whether to look for byte order marks at the beginning of the file.</param>
            <param name="keepStreamOpen">TRUE to keep the underlying stream open when the reader is closed, FALSE for normal behaviour.</param>		
        </member>
        <member name="M:SharpUtilities.IO.StreamReaderEx.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="input">Input stream.</param>
            <param name="encoder">Encoding for the stream reader.</param>
            <param name="keepStreamOpen">TRUE to keep the underlying stream open when the reader is closed, FALSE for normal behaviour.</param>		
        </member>
        <member name="M:SharpUtilities.IO.StreamReaderEx.#ctor(System.IO.Stream,System.Boolean,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="input">Input stream.</param>
            <param name="detectEncodingFromByteOrderMarks">Indicates whether to look for byte order marks at the beginning of the file.</param>
            <param name="keepStreamOpen">TRUE to keep the underlying stream open when the reader is closed, FALSE for normal behaviour.</param>		
        </member>
        <member name="M:SharpUtilities.IO.StreamReaderEx.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="input">Input stream.</param>
            <param name="keepStreamOpen">TRUE to keep the underlying stream open when the reader is closed, FALSE for normal behaviour.</param>
        </member>
        <member name="P:SharpUtilities.IO.StreamReaderEx.KeepStreamOpen">
            <summary>
            Property to set or return whether to keep the underlying stream open or not after the reader is closed.
            </summary>
        </member>
        <member name="T:SharpUtilities.IO.BinaryReaderEx">
            <summary>
            Object representing a binary reader that can keep its stream open after it's closed.
            </summary>
        </member>
        <member name="M:SharpUtilities.IO.BinaryReaderEx.Close">
            <summary>
            Function to close the reader and its underlying stream if KeepStreamOpen is false.
            </summary>
        </member>
        <member name="M:SharpUtilities.IO.BinaryReaderEx.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="input">Input stream.</param>
            <param name="encoder">Encoding for the binary reader.</param>
            <param name="keepStreamOpen">TRUE to keep the underlying stream open when the reader is closed, FALSE for normal behaviour.</param>
        </member>
        <member name="M:SharpUtilities.IO.BinaryReaderEx.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="input">Input stream.</param>
            <param name="keepStreamOpen">TRUE to keep the underlying stream open when the reader is closed, FALSE for normal behaviour.</param>
        </member>
        <member name="P:SharpUtilities.IO.BinaryReaderEx.KeepStreamOpen">
            <summary>
            Property to set or return whether to keep the underlying stream open or not after the reader is closed.
            </summary>
        </member>
        <member name="T:SharpUtilities.Mathematics.SphereVolume">
            <summary>
            Object representing a sphere volume.
            </summary>
            <remarks>
            This volume is often used to determine occlusion/culling of objects in a 3D
            scene.  Combined with intersection queries it can approximately determine if 
            a point/volume lies within the volume or not.
            </remarks>
        </member>
        <member name="M:SharpUtilities.Mathematics.SphereVolume.SetCenter(System.Single,System.Single,System.Single)">
            <summary>
            Function to set the center of the bounding volume.
            </summary>
            <param name="x">Horizontal position.</param>
            <param name="y">Vertical position.</param>
            <param name="z">Depth position.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.SphereVolume.Update(SharpUtilities.Mathematics.Vector3D,System.Single)">
            <summary>
            Function to update the dimensions and position of the bounding value.
            </summary>
            <param name="center">Position of the bounding volume.</param>
            <param name="radius">Radius of the sphere.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.SphereVolume.Intersects(SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Function to perform an intersection test with a point.
            </summary>
            <param name="point">Point to test.</param>
            <returns>TRUE if an intersection exists, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.SphereVolume.Intersects(SharpUtilities.Mathematics.SphereVolume)">
            <summary>
            Function to perform an intersection test with another sphere volume.
            </summary>
            <param name="sphere">Sphere volume to test.</param>
            <returns>TRUE if an intersection exists, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.SphereVolume.Intersects(SharpUtilities.Mathematics.Ray)">
            <summary>
            Function to determine if this sphere will intersect the given ray.
            </summary>
            <param name="ray">Ray to test.</param>
            <returns>Intersection results.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.SphereVolume.Intersects(SharpUtilities.Mathematics.Ray,System.Boolean)">
            <summary>
            Function to determine if this sphere will intersect the given ray.
            </summary>
            <param name="ray">Ray to test.</param>
            <param name="discardInside">TRUE to discard results inside the sphere, FALSE to include.</param>
            <returns>Intersection results.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.SphereVolume.Intersects(SharpUtilities.Mathematics.Plane)">
            <summary>
            Function to test for an intersection with a plane.
            </summary>
            <param name="plane">Plane to test.</param>
            <returns>TRUE if there was an intersection, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.SphereVolume.Intersects(SharpUtilities.Mathematics.AABB)">
            <summary>
            Function to perform an intersection test on an AABB.
            </summary>
            <param name="aabb">AABB to test.</param>
            <returns>TRUE if an intersection exists, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.SphereVolume.#ctor(SharpUtilities.Mathematics.Vector3D,System.Single)">
            <summary>
            Constructor.
            </summary>
            <param name="center">Center position of the sphere.</param>
            <param name="radius">Radius of the sphere.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.SphereVolume.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:SharpUtilities.Mathematics.SphereVolume.Radius">
            <summary>
            Property to return or set the radius of this bounding volume.
            </summary>
        </member>
        <member name="P:SharpUtilities.Mathematics.SphereVolume.Center">
            <summary>
            Property to return or set the center of the bounding volume.
            </summary>
        </member>
        <member name="T:SharpUtilities.Mathematics.PlaneSide">
            <summary>
            Enumeration to represent which side a point is on with respect to the plane.
            </summary>
        </member>
        <member name="F:SharpUtilities.Mathematics.PlaneSide.NoIntersection">
            <summary>No intersection.</summary>
        </member>
        <member name="F:SharpUtilities.Mathematics.PlaneSide.Front">
            <summary>In front of plane.</summary>
        </member>
        <member name="F:SharpUtilities.Mathematics.PlaneSide.Behind">
            <summary>Behind the plane.</summary>
        </member>
        <member name="F:SharpUtilities.Mathematics.PlaneSide.Planar">
            <summary>On the plane.</summary>
        </member>
        <member name="T:SharpUtilities.Mathematics.MathErrorCodes">
            <summary>
            Enumeration for math related error codes.
            </summary>
        </member>
        <member name="F:SharpUtilities.Mathematics.MathErrorCodes.DivideByZero">
            <summary>
            Cannot divide by zero.
            </summary>
        </member>
        <member name="T:SURes">
            <summary>
            Internal class to work around a bug in the resource loader.  How lame is this?
            </summary>
        </member>
        <member name="T:SharpUtilities.Buffers.RingBuffer`1">
            <summary>
            Object representing a circular (or "ring") buffer.
            </summary>
            <remarks>A ring buffer contains no start and no end, the read and write position should wrap around to beginning of the buffer if the size is reached.
            <para>Thanks to SuperPig from http://www.gamedev.net for the idea and code.</para>
            </remarks>
        </member>
        <member name="M:SharpUtilities.Buffers.RingBuffer`1.FormatBuffer">
            <summary>
            Function to erase and initialize the buffer.
            </summary>
        </member>
        <member name="M:SharpUtilities.Buffers.RingBuffer`1.Read">
            <summary>
            Function to read the item at the current read position.
            </summary>
            <returns>Item at the read position.</returns>
        </member>
        <member name="M:SharpUtilities.Buffers.RingBuffer`1.Write(`0)">
            <summary>
            Function to write the specified data into the current write position.
            </summary>
            <param name="data">Data to write.</param>
        </member>
        <member name="M:SharpUtilities.Buffers.RingBuffer`1.#ctor(System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="size">Size in elements of "T".</param>
        </member>
        <member name="M:SharpUtilities.Buffers.RingBuffer`1.#ctor(System.Array)">
            <summary>
            Constructor.
            </summary>
            <param name="data">Array of data to copy.</param>
        </member>
        <member name="M:SharpUtilities.Buffers.RingBuffer`1.#ctor(SharpUtilities.Collections.Collection{`0})">
            <summary>
            Constructor.
            </summary>
            <param name="data">Data to copy.</param>
        </member>
        <member name="M:SharpUtilities.Buffers.RingBuffer`1.#ctor(SharpUtilities.Collections.DynamicArray{`0})">
            <summary>
            Constructor.
            </summary>
            <param name="data">Data to copy.</param>
        </member>
        <member name="M:SharpUtilities.Buffers.RingBuffer`1.#ctor(SharpUtilities.Collections.DictionaryCollection{`0})">
            <summary>
            Constructor.
            </summary>
            <param name="data">Data to copy.</param>
        </member>
        <member name="P:SharpUtilities.Buffers.RingBuffer`1.Buffer">
            <summary>
            Property to return the buffer.
            </summary>
        </member>
        <member name="P:SharpUtilities.Buffers.RingBuffer`1.ReadPosition">
            <summary>
            Property to return the position of the read pointer.
            </summary>
        </member>
        <member name="P:SharpUtilities.Buffers.RingBuffer`1.WritePosition">
            <summary>
            Property to return the position of the write pointer.
            </summary>
        </member>
        <member name="P:SharpUtilities.Buffers.RingBuffer`1.BufferSize">
            <summary>
            Property to set or return the size of buffer in elements of T.
            </summary>
        </member>
        <member name="P:SharpUtilities.Buffers.RingBuffer`1.DataSize">
            <summary>
            Property to return the size of the data already written to the buffer.
            </summary>
        </member>
        <member name="T:SharpUtilities.Utility.CPUList">
            <summary>
            An object representing all of the CPUs in the computer.
            </summary>
        </member>
        <member name="M:SharpUtilities.Utility.CPUList.Add(System.Management.PropertyDataCollection,SharpUtilities.Utility.OSTypes)">
            <summary>
            Function to add a CPU object to the list.
            </summary>
            <param name="cpuInfo">CPU management object info.</param>
            <param name="os">Operating system information.</param>
        </member>
        <member name="T:SharpUtilities.Utility.ErrorDialog">
            <summary>
            Dialog for error messages.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.ErrorDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SharpUtilities.Utility.ErrorDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SharpUtilities.Utility.ErrorDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:SharpUtilities.Utility.ErrorDialog.detailsButton_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the detailsButton control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:SharpUtilities.Utility.ErrorDialog.OKButton_Click(System.Object,System.EventArgs)">
            <summary>
            OK button click event.
            </summary>
            <param name="sender">Sender of the event.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:SharpUtilities.Utility.ErrorDialog.ValidateFunctions">
            <summary>
            Function to validate the buttons.
            </summary>
        </member>
        <member name="M:SharpUtilities.Utility.ErrorDialog.OnLoad(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Form.Load"></see> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:SharpUtilities.Utility.ErrorDialog.DrawDialog(System.Drawing.Graphics)">
            <summary>
            Function to perform the actual drawing of the message.
            </summary>
            <param name="g">Graphics object to use.</param>
        </member>
        <member name="M:SharpUtilities.Utility.ErrorDialog.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.ErrorDialog.ErrorIcon">
            <summary>
            Property to return or set the icon for the error dialog.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.ErrorDialog.ErrorDetails">
            <summary>
            Property to return or set the details of the error.
            </summary>
        </member>
        <member name="T:SharpUtilities.Utility.ConfirmationDialogEx">
            <summary>
            Dialog for confirmation + plus to all option.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.ConfirmationDialogEx.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SharpUtilities.Utility.ConfirmationDialogEx.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SharpUtilities.Utility.ConfirmationDialogEx.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:SharpUtilities.Utility.ConfirmationDialogEx.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Form.FormClosing"></see> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.FormClosingEventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:SharpUtilities.Utility.ConfirmationDialogEx.OnLoad(System.EventArgs)">
            <summary>
            Form load event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:SharpUtilities.Utility.ConfirmationDialogEx.DrawDialog(System.Drawing.Graphics)">
            <summary>
            Function to perform the actual drawing of the dialog.
            </summary>
            <param name="g">Graphics object to use.</param>
        </member>
        <member name="M:SharpUtilities.Utility.ConfirmationDialogEx.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:SharpUtilities.Utility.ConfirmationResult">
            <summary>
            Enumeration for confirmation results.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.ConfirmationResult.None">
            <summary>
            No confirmation.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.ConfirmationResult.Yes">
            <summary>
            Yes clicked.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.ConfirmationResult.No">
            <summary>
            No clicked.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.ConfirmationResult.Cancel">
            <summary>
            Cancel clicked.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.ConfirmationResult.ToAll">
            <summary>
            To all checked.
            </summary>
        </member>
        <member name="T:SharpUtilities.Buffers.BufferSizeInvalid">
            <summary>
            Buffer size invalid exception.
            </summary>
            <remarks>Exception thrown when a buffer's capacity is below a specified threshold.</remarks>
        </member>
        <member name="M:SharpUtilities.Buffers.BufferSizeInvalid.#ctor(System.String,SharpUtilities.Buffers.BufferErrorCodes)">
            <summary>
            Constructor.
            </summary>
            <param name="message">Message to pass through to the exception.</param>
            <param name="errorCode">Error code to pass through to the exception.</param>
        </member>
        <member name="M:SharpUtilities.Buffers.BufferSizeInvalid.#ctor(System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="minimumSize">Minimum number of elements.</param>
        </member>
        <member name="T:SharpUtilities.Buffers.BufferTypeMismatch">
            <summary>
            Buffer type mismatch exception.
            </summary>
            <remarks>Exception thrown when a buffer contains a specific data type, but there was an attempt to store another type of data.</remarks>
        </member>
        <member name="M:SharpUtilities.Buffers.BufferTypeMismatch.#ctor(System.String,SharpUtilities.Buffers.BufferErrorCodes)">
            <summary>
            Constructor.
            </summary>
            <param name="message">Message to pass through to the exception.</param>
            <param name="errorCode">Error code to pass through to the exception.</param>
        </member>
        <member name="M:SharpUtilities.Buffers.BufferTypeMismatch.#ctor(System.Type)">
            <summary>
            Constructor.
            </summary>
            <param name="type">Type of data to be stored within the buffer.</param>
        </member>
        <member name="T:SharpUtilities.Native.Win32.EventHookEventArgs">
            <summary>
            Event arguments for event hooks.
            </summary>
        </member>
        <member name="M:SharpUtilities.Native.Win32.EventHookEventArgs.#ctor(System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Constructor.
            </summary>
            <param name="code">Code for the hook.</param>
            <param name="wParam">Parameters 1.</param>
            <param name="lParam">Parameters 2.</param>
        </member>
        <member name="P:SharpUtilities.Native.Win32.EventHookEventArgs.Code">
            <summary>
            Read only property to return the hook event code.
            </summary>
        </member>
        <member name="P:SharpUtilities.Native.Win32.EventHookEventArgs.wParam">
            <summary>
            Read only property to return the 1st set of parameter data.
            </summary>
        </member>
        <member name="P:SharpUtilities.Native.Win32.EventHookEventArgs.lParam">
            <summary>
            Read only property to return the 2nd set of parameter data.
            </summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.ConsoleCtrlDelegate">
            <summary>
            Event definition for the console system event controller.
            </summary>
            <remarks>Events of this type are called when a system event is trapped in the <seealso cref="T:SharpUtilities.Console.ConsoleApplication">ConsoleApplication</seealso>.</remarks>
        </member>
        <member name="T:SharpUtilities.Native.Win32.HookEventHandler">
            <summary>
            Event definition for the event hook.
            </summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.HookCallback">
            <summary>
            Event definition for the hook callback procedure.
            </summary>
            <param name="nCode">Code returned by the hook.</param>
            <param name="wParam">1st set of parameters returned by the hook.</param>
            <param name="lParam">2nd set of parameters returned by the hook.</param>
            <returns>Less than 0 to call next hook, 0 or greater means the procedure did not process the message.</returns>
        </member>
        <member name="T:SharpUtilities.Native.Win32.EnumWindowsCallback">
            <summary>
            Event definition for the window enumeration callback.
            </summary>
            <param name="hWnd">Window handle.</param>
            <param name="lParam">Parameters.</param>
            <returns>TRUE to continue enumeration, FALSE to stop.</returns>
        </member>
        <member name="T:SharpUtilities.Native.Win32.WndProcCallback">
            <summary>
            Event definition for the window procedure callback.
            </summary>
            <param name="hWnd">Handle of the window receiving the message.</param>
            <param name="msg">Message being sent.</param>
            <param name="wParam">1st set of parameters.</param>
            <param name="lParam">2nd set of parameters.</param>
            <returns>Depends on message.</returns>
        </member>
        <member name="T:SharpUtilities.Console.ConsoleApplication">
            <summary>
            Class used to handle console operations.
            </summary>
        </member>
        <member name="M:SharpUtilities.Console.ConsoleApplication.SetConsoleAttrib">
            <summary>
            Function to set the console attribute colors.
            </summary>
        </member>
        <member name="M:SharpUtilities.Console.ConsoleApplication.GetInitialSizes">
            <summary>
            Function to retrieve the initial size of the window/buffer.
            </summary>
        </member>
        <member name="M:SharpUtilities.Console.ConsoleApplication.ControlHandler(SharpUtilities.Native.Win32.ControlEventTypes)">
            <summary>
            Function to handle control events.
            </summary>
            <param name="ctrltype">Control type.</param>
            <returns>TRUE to terminate, FALSE to keep going.</returns>
        </member>
        <member name="M:SharpUtilities.Console.ConsoleApplication.AnyKey">
            <summary>
            Function to handle the 'Any Key' which so befuddled the great Homer Simpson.
            </summary>
        </member>
        <member name="M:SharpUtilities.Console.ConsoleApplication.ReadChar">
            <summary>
            Function to read a character.
            </summary>
            <returns>Character.</returns>
        </member>
        <member name="M:SharpUtilities.Console.ConsoleApplication.ReadLine(System.UInt32)">
            <summary>
            Function to read a line of text.
            </summary>
            <param name="numchars">Number characters to read.</param>
            <returns>String containing the text.</returns>
        </member>
        <member name="M:SharpUtilities.Console.ConsoleApplication.ReadLine">
            <summary>
            Function to read a line of text.
            </summary>
            <returns>String containing the text.</returns>
        </member>
        <member name="M:SharpUtilities.Console.ConsoleApplication.Print(System.String)">
            <summary>
            Function to print a line of text.
            </summary>
            <param name="line">Line of text to print.</param>
        </member>
        <member name="M:SharpUtilities.Console.ConsoleApplication.Print(System.String,System.Object[])">
            <summary>
            Function to print a line of formatted text.
            </summary>
            <param name="format">Format to use.</param>
            <param name="arg">Arguments to use in formatting.</param>
        </member>
        <member name="M:SharpUtilities.Console.ConsoleApplication.Clear(System.ConsoleColor)">
            <summary>
            Function to clear the buffer with the specified color.
            </summary>
            <param name="color">Color to use.</param>
        </member>
        <member name="M:SharpUtilities.Console.ConsoleApplication.Clear">
            <summary>
            Function to clear the buffer with the current background color.
            </summary>
        </member>
        <member name="M:SharpUtilities.Console.ConsoleApplication.Run">
            <summary>
            Function to set the console app into a running state.
            </summary>
        </member>
        <member name="M:SharpUtilities.Console.ConsoleApplication.Stop">
            <summary>
            Function to stop the application.
            </summary>
        </member>
        <member name="M:SharpUtilities.Console.ConsoleApplication.PollInput">
            <summary>
            Function to poll the input devices.
            </summary>
        </member>
        <member name="M:SharpUtilities.Console.ConsoleApplication.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:SharpUtilities.Console.ConsoleApplication.Finalize">
            <summary>
            Destructor.
            </summary>
        </member>
        <member name="M:SharpUtilities.Console.ConsoleApplication.Dispose(System.Boolean)">
            <summary>
            Function to perform clean up.
            </summary>
            <param name="disposing">TRUE to clean up all objects, FALSE to clean up unmanaged objects only.</param>
        </member>
        <member name="M:SharpUtilities.Console.ConsoleApplication.Dispose">
            <summary>
            Function to perform clean up.
            </summary>
        </member>
        <member name="E:SharpUtilities.Console.ConsoleApplication.OnMouseAction">
            <summary>Mouse event.</summary>
        </member>
        <member name="E:SharpUtilities.Console.ConsoleApplication.OnKeyAction">
            <summary>Key event.</summary>
        </member>
        <member name="E:SharpUtilities.Console.ConsoleApplication.OnClose">
            <summary>Close event.</summary>
        </member>
        <member name="E:SharpUtilities.Console.ConsoleApplication.OnIdle">
            <summary>Idle event.</summary>
        </member>
        <member name="P:SharpUtilities.Console.ConsoleApplication.BufferWidth">
            <summary>
            Property to set or return the width of the buffer in columns.
            </summary>
        </member>
        <member name="P:SharpUtilities.Console.ConsoleApplication.BufferHeight">
            <summary>
            Property to set or return the height of the buffer in rows.
            </summary>
        </member>
        <member name="P:SharpUtilities.Console.ConsoleApplication.WindowWidth">
            <summary>
            Property to set or return the width of the console window.
            </summary>
        </member>
        <member name="P:SharpUtilities.Console.ConsoleApplication.WindowHeight">
            <summary>
            Property to set or return the height of the console window.
            </summary>
        </member>
        <member name="P:SharpUtilities.Console.ConsoleApplication.ForegroundColor">
            <summary>
            Property to set or return the foreground color.
            </summary>
        </member>
        <member name="P:SharpUtilities.Console.ConsoleApplication.BackgroundColor">
            <summary>
            Property to set or return the background color.
            </summary>
        </member>
        <member name="P:SharpUtilities.Console.ConsoleApplication.Caption">
            <summary>
            Property to set or return the caption of the window.
            </summary>
        </member>
        <member name="P:SharpUtilities.Console.ConsoleApplication.CursorVisible">
            <summary>
            Property to set or return whether the cursor is visible.
            </summary>
        </member>
        <member name="P:SharpUtilities.Console.ConsoleApplication.CursorHeight">
            <summary>
            Property to set or return the cursor height.
            </summary>
        </member>
        <member name="P:SharpUtilities.Console.ConsoleApplication.CursorLeft">
            <summary>
            Property to set or return the horizontal position of the cursor.
            </summary>
        </member>
        <member name="P:SharpUtilities.Console.ConsoleApplication.CursorTop">
            <summary>
            Property to set or return the vertical position of the cursor.
            </summary>
        </member>
        <member name="P:SharpUtilities.Console.ConsoleApplication.CodePage">
            <summary>
            Property to set or return the code page for the console.
            </summary>
        </member>
        <member name="T:SharpUtilities.Collections.Node">
            <summary>
            Abstract Class representing a node for an acyclic graph.
            </summary>
            <remarks>
            Nodes are used to represent connected points in a graph.  This allows us to create a hierarchy of objects, like an upside down tree.  A node that has no parent node is considered the root of the node-tree.
            <para>Objects deriving from this class will be able to be interconnected with other Node objects.</para>
            	<para>Node objects can also contain other objects deriving from the <seealso cref="T:SharpUtilities.Collections.INodeObject">INodeObject</seealso> interface which the derived object can modify those contained objects depending on function of the containing Node.</para>
            </remarks>
        </member>
        <member name="F:SharpUtilities.Collections.Node._children">
            <summary>
            A list of children for this node.
            </summary>
        </member>
        <member name="F:SharpUtilities.Collections.Node._parent">
            <summary>
            The parent of this node, Null (or nothing) if this is the root node.
            </summary>
        </member>
        <member name="F:SharpUtilities.Collections.Node._dirty">
            <summary>
            A list of child nodes that need to be updated.
            </summary>
        </member>
        <member name="F:SharpUtilities.Collections.Node._changed">
            <summary>
            A flag to indicate that the node has changed in some way.
            </summary>
        </member>
        <member name="M:SharpUtilities.Collections.Node.SetParent(SharpUtilities.Collections.Node)">
            <summary>
            Function to set the parent of this node.
            </summary>
            <remarks>
            This is the actual implementation for parent reassignment.  
            <para>See the <seealso cref="P:SharpUtilities.Collections.Node.Parent">Parent</seealso> property for more details.</para>
            </remarks>
            <param name="parent">Parent of this node.</param>
        </member>
        <member name="M:SharpUtilities.Collections.Node.MarkDirty(System.Boolean)">
            <summary>
            Function to set nodes to a 'dirty' state.
            </summary>
            <remarks>This function can set the calling Node to a dirty state as well, or it can only just set the children to a dirty state.  This can be useful when this node needs to propagate current changes to its children.</remarks>
            <param name="onlychildren">TRUE to only update the children of this node, FALSE to mark this node as well.</param>
            <example>
            [C#] The following will extend the <seealso cref="M:SharpUtilities.Collections.Node.Invalidate">Invalidate</seealso> example to illustrate how to use MarkDirty():
            <code>
            using System;
            using System.Windows.Forms;
            using SharpUtilities;
            
            public class MyNodeObject : INodeObject
            {
            	// Sum.
            	private int _sum = 0;
            
            	// ... Implement required functions ...
            	public void Calculate()
            	{
            		_sum += Owner.TheValue;
            	}
            }
            
            // Your derived node.
            public MyNode : Node
            {
            	// The value for this node.
            	private int _theValue;
            
            	// ... Add required functions and so on ...
            
            	// Property to return the value.
            	public int TheValue
            	{
            		get
            		{
            			return _theValue;
            		}
            	}
            
            	// Function called when updating the node.
            	protected override Invalidate()
            	{
            		// Calculate.
            		foreach (MyNodeObject obj in NodeObjects)
            			obj.Calculate();
            	}
            
            	// Function to update the value for this node.
            	public void UpdateValue(int someValue)
            	{
            		_theValue = someValue;
            		// MARKDIRTY IS CALLED HERE.  This will also update the children.
            		// Calling Invalidate would only update this node.
            		MarkDirty(true);
            		// Commit the changes.
            		Refresh();
            	}
            
            	// Function to add a child node.
            	public Add(string childName)
            	{
            		MyNode childNode = new MyNode(childName);
            
            		try
            		{
            			// ... Do custom things to the node ...
            			AddChildNode(node);
            		}
            		catch (SharpException e)
            		{
            			if (e.ErrorCode == SharpErrors.DuplicateObject)
            				MessageBox.Show("Error",childName + " already exists.  Did not add to the node.");
            		}
            	}
            }
            </code>
            </example>
        </member>
        <member name="M:SharpUtilities.Collections.Node.Invalidate">
            <summary>
            Function called when the node is changed in some way.
            </summary>
            <remarks>
            Derived classes must implement this function.
            <para>This function can be used to update the system in response to the change to the node.  For example the objects contained within this node can be updated in response to the change in this node.</para>
            </remarks>
            <example>
            [C#] The following will illustrate how to use Invalidate():
            <code>
            using System;
            using System.Windows.Forms;
            using SharpUtilities;
            
            public class MyNodeObject : INodeObject
            {
            	// Sum.
            	private int _sum = 0;
            
            	// ... Implement required functions ...
            	public void Calculate()
            	{
            		_sum += Owner.TheValue;
            	}
            }
            
            // Your derived node.
            public MyNode : Node
            {
            	// The value for this node.
            	private int _theValue;
            
            	// ... Add required functions and so on ...
            
            	// Property to return the value.
            	public int TheValue
            	{
            		get
            		{
            			return _theValue;
            		}
            	}
            
            	// Function called when updating the node.
            	protected override Invalidate()
            	{
            		// Calculate.
            		foreach (MyNodeObject obj in NodeObjects)
            			obj.Calculate();
            	}
            
            	// Function to update the value for this node.
            	public void UpdateValue(int someValue)
            	{
            		_theValue = someValue;
            		Invalidate();
            	}
            
            	// Function to add a child node.
            	public Add(string childName)
            	{
            		MyNode childNode = new MyNode(childName);
            
            		try
            		{
            			// ... Do custom things to the node ...
            			AddChildNode(node);
            		}
            		catch (SharpException e)
            		{
            			if (e.ErrorCode == SharpErrors.DuplicateObject)
            				MessageBox.Show("Error",childName + " already exists.  Did not add to the node.");
            		}
            	}
            }
            </code>
            </example>
        </member>
        <member name="M:SharpUtilities.Collections.Node.AddChildNode(SharpUtilities.Collections.Node)">
            <summary>
            Function to add a chlid node to this node.
            </summary>
            <remarks>
            Call this function in the derived class to add a child node to this node.
            <para>
            When the child node is added, it will be marked as dirty and ready to receive any notifications/changes from the <seealso cref="P:SharpUtilities.Collections.Node.Parent">Parent</seealso>.</para>
            </remarks>
            <param name="node"><see cref="T:SharpUtilities.Collections.Node">Node</see> object to add.</param>
            <example>
            [C#] The following will illustrate how to use AddChildNode:
            <code>
            using System;
            using System.Windows.Forms;
            using SharpUtilities;
            
            // Your derived node.
            public MyNode : Node
            {
            	// ... Add required functions and so on ...
            
            	// Function to add a child node.
            	public Add(string childName)
            	{
            		MyNode childNode = new MyNode(childName);
            
            		try
            		{
            			// ... Do custom things to the node ...
            			AddChildNode(node);
            		}
            		catch (SharpException e)
            		{
            			if (e.ErrorCode == SharpErrors.DuplicateObject)
            				MessageBox.Show("Error",childName + " already exists.  Did not add to the node.");
            		}
            	}
            }
            </code>
            </example>
            <exception cref="T:SharpUtilities.Collections.DuplicateObjectException">A child node with the same name already exists.</exception>
        </member>
        <member name="M:SharpUtilities.Collections.Node.Refresh">
            <summary>
            Function to invalidate and update the node.
            </summary>
            <remarks>This function will commit any changes for this node and any nodes in the internal <see cref="F:SharpUtilities.Collections.Node._dirty">dirty</see> list.</remarks>
        </member>
        <member name="M:SharpUtilities.Collections.Node.Clear">
            <summary>
            Function to clear the children from this node.
            </summary>		
        </member>
        <member name="M:SharpUtilities.Collections.Node.Remove(System.String)">
            <summary>
            Function to remove a child node by its key <see cref="T:SharpUtilities.NamedObject">name</see>.
            </summary>
            <param name="key"><seealso cref="T:SharpUtilities.NamedObject">Name</seealso> of the node to remove.</param>
            <exception cref="T:SharpUtilities.Collections.KeyNotFoundException">The name of the child node was not found.</exception>
        </member>
        <member name="M:SharpUtilities.Collections.Node.Remove(System.Int32)">
            <summary>
            Function to remove a child node by its index.
            </summary>
            <param name="index">Index of the node to remove.</param>
            <exception cref="T:SharpUtilities.Collections.IndexOutOfBoundsException">The index is not within the range of 0 to <seealso cref="P:SharpUtilities.Collections.Node.Count">Count</seealso>-1 or the child list is empty.</exception>
        </member>
        <member name="M:SharpUtilities.Collections.Node.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Function to return an enumerator for the node.
            </summary>
            <returns>An IEnumerator interface to iterate through the child nodes.</returns>
        </member>
        <member name="M:SharpUtilities.Collections.Node.GetEnumerator">
            <summary>
            Function to return an enumerator for the node.
            </summary>
            <returns>An IEnumerator interface to iterate through the child nodes.</returns>
        </member>
        <member name="M:SharpUtilities.Collections.Node.Equals(System.Object)">
            <summary>
            Function to determine if this object is the same as another.
            </summary>
            <param name="obj">Object to compare.</param>
            <returns>TRUE if equal, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Collections.Node.ToString">
            <summary>
            Function to return the string representation of this object.
            </summary>
            <returns>A string containing the type of the object and the name.</returns>
        </member>
        <member name="M:SharpUtilities.Collections.Node.GetHashCode">
            <summary>
            Function to return the hash code for this object.
            </summary>
            <remarks>
            A hash code is used by dictionaries and hash tables to determine uniqueness of an object within those collections.
            <para>
            Hash values are related to their types, and as such should use one or more of its instance fields hash codes to build the hash code.
            </para>
            </remarks>
            <returns>A 32 bit integer representing the hash code.</returns>
        </member>
        <member name="M:SharpUtilities.Collections.Node.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <remarks>This will create a new node with the name specified in the parameter.</remarks>
            <param name="nodename">Name for this node.</param>
        </member>
        <member name="P:SharpUtilities.Collections.Node.Count">
            <summary>
            Property to return the number of children contained within this node.
            </summary>
        </member>
        <member name="P:SharpUtilities.Collections.Node.NodeObjects">
            <summary>
            Read-only property to return a list of node objects.
            </summary>
            <remarks>
            The <seealso cref="P:SharpUtilities.Collections.Node.NodeObjects">NodeObjects</seealso> collection is a container of objects that will be associated with this node.
            <para>The purpose of having objects contained within the node is to allow changes to the node to be propagated to these objects via the <seealso cref="M:SharpUtilities.Collections.Node.Invalidate">Invalidate()</seealso> function.</para>
            </remarks>
            <value>This will return a <see cref="P:SharpUtilities.Collections.Node.NodeObjects">NodeObjects</see> collection containing items that are associated with this node.</value>
        </member>
        <member name="P:SharpUtilities.Collections.Node.Item(System.String)">
            <summary>
            Read-only property to return a child node by its <seealso cref="T:SharpUtilities.NamedObject">name</seealso>.
            </summary>
            <value>Returns a <see cref="T:SharpUtilities.Collections.Node">Node</see> object representing the child node.</value>
            <exception cref="T:SharpUtilities.Collections.KeyNotFoundException">The name of the child node was not found.</exception>
        </member>
        <member name="P:SharpUtilities.Collections.Node.Item(System.Int32)">
            <summary>
            Property to return a child node by its index.
            </summary>
            <value>Returns a <see cref="T:SharpUtilities.Collections.Node">Node</see> object representing the child node.</value>
            <exception cref="T:SharpUtilities.Collections.IndexOutOfBoundsException">The index is not within the range of 0 to <seealso cref="P:SharpUtilities.Collections.Node.Count">Count</seealso>-1 or the child list is empty.</exception>
        </member>
        <member name="P:SharpUtilities.Collections.Node.Parent">
            <summary>
            Property to return or set the parent for this node.
            </summary>
            <remarks>
            Use this property if it is necessary to alter the hierarchy relationship of this node.
            <para>
            Null (or Nothing) will be returned if this node is a root node and setting Null will detach this node from its current parent and make ths node a root node.
            </para>
            </remarks>
            <value>Sets or returns a <see cref="T:SharpUtilities.Collections.Node">Node</see> object that is the parent of this object.</value>
        </member>
        <member name="T:SharpUtilities.Buffers.BufferErrorCodes">
            <summary>
            Enumeration for buffer codes.
            </summary>
        </member>
        <member name="F:SharpUtilities.Buffers.BufferErrorCodes.InvalidBufferSize">
            <summary>
            Invalid buffer size.
            </summary>
        </member>
        <member name="F:SharpUtilities.Buffers.BufferErrorCodes.TypeMismatch">
            <summary>
            Type mismatch.
            </summary>
        </member>
        <member name="T:SharpUtilities.Collections.NodeObjects">
            <summary>
            A collection of objects that are contained within a node.
            </summary>
            <remarks>
            A node is an organizational unit, representing a position within a list.  
            A node is also a container for items.  For example, a node may contain 
            names and descriptions of people within a company.  With this we can organize
            groups of objects into a tree hierarchy.
            </remarks>
        </member>
        <member name="T:SharpUtilities.Collections.Collection`1">
            <summary>
            Abstract object representing a concrete version of the base collection.
            </summary>
            <remarks>
            This collection is inherited from when a standard collection interface is desired.  Several methods have been implmented, such as Remove.  
            <para>
            This collection inherits from the BaseCollection object and just implements some of the functionality for you.
            </para>
            </remarks>
            <typeparam name="T">Type of object to store.</typeparam>
        </member>
        <member name="T:SharpUtilities.Collections.BaseCollection`1">
            <summary>
            An abstract class representing a standard collection of objects.
            </summary>
            <remarks>
            This was designed as a point of convenience to take some of the annoyance out of inheriting a collection.
            <para>
            This class provides a simplified method of inheriting a basic SortedList collection.  It holds no benefit over the System.Collections.Generic.SortedList object, which it uses internally.
            </para>
            	<para>
            This class overloads properties to retrieve or remove an item by its index as well as by its key.  These are setup as protected methods so that the user can implement the collection however they see fit.
            </para>
            	<para>
            This class, like the other classes in the <see cref="N:SharpUtilities.Collections">Collections</see> namespace, implements the IEnumerable interface already to return an iterator interface for enumeration.
            </para>
            </remarks>
            <typeparam name="T">Type of data to store.</typeparam>
        </member>
        <member name="M:SharpUtilities.Collections.BaseCollection`1.GetItem(System.String)">
            <summary>
            Function to retrieve an item from the list by its key.
            </summary>
            <param name="key">Key for the object to retrieve.</param>
            <returns>Item in the collection.</returns>
        </member>
        <member name="M:SharpUtilities.Collections.BaseCollection`1.GetItem(System.Int32)">
            <summary>
            Function to retrieve an item from the list by index.
            </summary>
            <param name="index">Index of the item to retrieve.</param>
        </member>
        <member name="M:SharpUtilities.Collections.BaseCollection`1.RemoveItem(System.Int32)">
            <summary>
            Function to remove an object from the list by index.
            </summary>
            <param name="index">Index to remove at.</param>
        </member>
        <member name="M:SharpUtilities.Collections.BaseCollection`1.RemoveItem(System.String)">
            <summary>
            Function to remove an object from the list by key.
            </summary>
            <param name="key">Key of the object to remove.</param>
        </member>
        <member name="M:SharpUtilities.Collections.BaseCollection`1.ClearItems">
            <summary>
            Function to clear the collection.
            </summary>
        </member>
        <member name="M:SharpUtilities.Collections.BaseCollection`1.SetItem(System.String,`0)">
            <summary>
            Function to update an item in the list by its key.
            </summary>
            <param name="key">Key of the item to set.</param>
            <param name="item">Item to set.</param>
        </member>
        <member name="M:SharpUtilities.Collections.BaseCollection`1.SetItem(System.Int32,`0)">
            <summary>
            Function to update an item in the list by its index.
            </summary>
            <param name="index">Index of the item to set.</param>
            <param name="item">Item to set.</param>
        </member>
        <member name="M:SharpUtilities.Collections.BaseCollection`1.AddItem(System.String,`0)">
            <summary>
            Function to add an item to the list.
            </summary>
            <param name="key">Key of the item to add.</param>
            <param name="item">Item to add.</param>
        </member>
        <member name="M:SharpUtilities.Collections.BaseCollection`1.Contains(System.String)">
            <summary>
            Function to return whether a key exists in the collection or not.
            </summary>
            <param name="key">Key of the object in the collection.</param>
            <returns>TRUE if the object exists, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Collections.BaseCollection`1.StaticArray(System.Int32,System.Int32)">
            <summary>
            Function to return the items in the collection as a static array.
            </summary>
            <param name="start">Starting index of the collection.</param>
            <param name="count">Number of items to copy.</param>
            <returns>A static array containing a copy of this collection.</returns>
        </member>
        <member name="M:SharpUtilities.Collections.BaseCollection`1.StaticArray">
            <summary>
            Function to return the items in the collection as a static array.
            </summary>
            <returns>A static array containing a copy of this collection.</returns>
        </member>
        <member name="M:SharpUtilities.Collections.BaseCollection`1.#ctor(System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpUtilities.Collections.BaseCollection`1"/> class.
            </summary>
            <param name="defaultsize">Default size of the collection.</param>
            <param name="caseSensitiveKeys">TRUE if the keys are case sensitive, FALSE if not.</param>
        </member>
        <member name="M:SharpUtilities.Collections.BaseCollection`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Function to return a new enumerator object.
            </summary>
            <returns>Enumerator object.</returns>
        </member>
        <member name="M:SharpUtilities.Collections.BaseCollection`1.GetEnumerator">
            <summary>
            Function to return a new enumerator object.
            </summary>
            <returns>Enumerator object.</returns>
        </member>
        <member name="P:SharpUtilities.Collections.BaseCollection`1.Items">
            <summary>
            Property to return the internal list of items.
            </summary>
        </member>
        <member name="P:SharpUtilities.Collections.BaseCollection`1.IsCaseSensitive">
            <summary>
            Property to return whether the collection keys are case sensitive or not.
            </summary>
        </member>
        <member name="P:SharpUtilities.Collections.BaseCollection`1.Count">
            <summary>
            Property to return the number of items in the collection.
            </summary>
        </member>
        <member name="M:SharpUtilities.Collections.Collection`1.Remove(System.Int32)">
            <summary>
            Function to remove an object from the list by index.
            </summary>
            <param name="index">Index to remove at.</param>
        </member>
        <member name="M:SharpUtilities.Collections.Collection`1.Remove(System.String)">
            <summary>
            Function to remove an object from the list by key.
            </summary>
            <param name="key">Key of the object to remove.</param>
        </member>
        <member name="M:SharpUtilities.Collections.Collection`1.Clear">
            <summary>
            Function to clear the collection.
            </summary>
        </member>
        <member name="M:SharpUtilities.Collections.Collection`1.#ctor(System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpUtilities.Collections.Collection`1"/> class.
            </summary>
            <param name="defaultsize">Default size of the collection.</param>
            <param name="caseSensitiveKeys">TRUE if the keys are case sensitive, FALSE if not.</param>
        </member>
        <member name="M:SharpUtilities.Collections.Collection`1.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpUtilities.Collections.Collection`1"/> class.
            </summary>
            <param name="caseSensitiveKeys">TRUE if the keys are case sensitive, FALSE if not.</param>
        </member>
        <member name="M:SharpUtilities.Collections.Collection`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SharpUtilities.Collections.Collection`1"/> class.
            </summary>
        </member>
        <member name="P:SharpUtilities.Collections.Collection`1.Item(System.Int32)">
            <summary>
            Property to get or set the item at the specified index.
            </summary>
        </member>
        <member name="P:SharpUtilities.Collections.Collection`1.Item(System.String)">
            <summary>
            Property to get or set the item with the specified key.
            </summary>
        </member>
        <member name="M:SharpUtilities.Collections.NodeObjects.Add(SharpUtilities.Collections.INodeObject)">
            <summary>
            Function to add a node object to this collection.
            </summary>
            <param name="obj">Node object to add.</param>
        </member>
        <member name="M:SharpUtilities.Collections.NodeObjects.Remove(System.String)">
            <summary>
            Function to remove a node by its name.
            </summary>
            <param name="key">Name of the node to remove.</param>
        </member>
        <member name="M:SharpUtilities.Collections.NodeObjects.Remove(System.Int32)">
            <summary>
            Function to remove a node by its index.
            </summary>
            <param name="index">Index of the node to remove.</param>
        </member>
        <member name="M:SharpUtilities.Collections.NodeObjects.Clear">
            <summary>
            Function to clear the list.
            </summary>
        </member>
        <member name="M:SharpUtilities.Collections.NodeObjects.#ctor(SharpUtilities.Collections.Node)">
            <summary>
            Constructor.
            </summary>
            <param name="owner">Node that owns this collection.</param>
        </member>
        <member name="T:SharpUtilities.Utility.ColorPicker">
            <summary>
            Object representing a color picker.
            </summary>
            <remarks>This control uses the color picker created by Ken Getz.  
            You can check out the article here: http://msdn.microsoft.com/msdnmag/issues/03/07/GDIColorPicker/default.aspx
            As such, the documentation/formatting/commenting of the code is entirely different than the rest of the library.
            </remarks>
        </member>
        <member name="M:SharpUtilities.Utility.ColorPicker.ShowDialog(System.Windows.Forms.Form)">
            <summary>
            Function to show the window as a dialog.
            </summary>
            <param name="owner">Owning window of this dialog.</param>
            <returns>A dialog result.</returns>
        </member>
        <member name="M:SharpUtilities.Utility.ColorPicker.ShowDialog">
            <summary>
            Function to show the window as a dialog.
            </summary>
            <returns>A dialog result.</returns>
        </member>
        <member name="M:SharpUtilities.Utility.ColorPicker.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:SharpUtilities.Utility.ColorPicker.Finalize">
            <summary>
            Destructor.
            </summary>
        </member>
        <member name="M:SharpUtilities.Utility.ColorPicker.Dispose(System.Boolean)">
            <summary>
            Function to perform clean up.
            </summary>
            <param name="disposing">TRUE to release all resources, FALSE to only release unmanaged.</param>
        </member>
        <member name="M:SharpUtilities.Utility.ColorPicker.Dispose">
            <summary>
            Function to perform clean up.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.ColorPicker.Color">
            <summary>
            Property to set or return the color for the picker.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.ColorPicker.UseAlpha">
            <summary>
            Property to set or return whether to use alpha blending or not.
            </summary>
        </member>
        <member name="T:SharpUtilities.IO.BinaryWriterEx">
            <summary>
            Object representing a binary writer that can keep its stream open after it's closed.
            </summary>
        </member>
        <member name="M:SharpUtilities.IO.BinaryWriterEx.Close">
            <summary>
            Function to close the writer and its underlying stream if KeepStreamOpen is false.
            </summary>
        </member>
        <member name="M:SharpUtilities.IO.BinaryWriterEx.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="output">Output stream.</param>
            <param name="encoder">Encoding for the binary writer.</param>
            <param name="keepStreamOpen">TRUE to keep the underlying stream open when the writer is closed, FALSE for normal behaviour.</param>
        </member>
        <member name="M:SharpUtilities.IO.BinaryWriterEx.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="output">Output stream.</param>
            <param name="keepStreamOpen">TRUE to keep the underlying stream open when the writer is closed, FALSE for normal behaviour.</param>
        </member>
        <member name="P:SharpUtilities.IO.BinaryWriterEx.KeepStreamOpen">
            <summary>
            Property to set or return whether to keep the underlying stream open or not after the writer is closed.
            </summary>
        </member>
        <member name="T:SharpUtilities.Controls.GradientLabel">
            <summary>
            Object representing a gradient filled control.
            </summary>
        </member>
        <member name="F:SharpUtilities.Controls.GradientLabel.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SharpUtilities.Controls.GradientLabel.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SharpUtilities.Controls.GradientLabel.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:SharpUtilities.Controls.GradientLabel.UpdateBrush">
            <summary>
            Function to update the background brush.
            </summary>
        </member>
        <member name="M:SharpUtilities.Controls.GradientLabel.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:Paint"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:SharpUtilities.Controls.GradientLabel.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:SharpUtilities.Controls.GradientLabel.BackColor2">
            <summary>
            Property to set or return the second background color.
            </summary>
        </member>
        <member name="P:SharpUtilities.Controls.GradientLabel.GradientAngle">
            <summary>
            Property to set or return the gradient angle.
            </summary>
        </member>
        <member name="P:SharpUtilities.Controls.GradientLabel.UseCompatibleTextRendering">
            <summary>
            N/A.
            </summary>
        </member>
        <member name="T:SharpUtilities.Utility.EnvironmentVariableList">
            <summary>
            A class representing a list of environment variables.
            </summary>
        </member>
        <member name="M:SharpUtilities.Utility.EnvironmentVariableList.Add(System.String,System.String)">
            <summary>
            Function to add a new environment variable to the list.
            </summary>
            <param name="variableName">Name of the environment variable.</param>
            <param name="variableValue">Value of the environment variable.</param>
        </member>
        <member name="M:SharpUtilities.Utility.EnvironmentVariableList.Refresh">
            <summary>
            Function to refresh the environment variable list.
            This function will wipe out any user-added environment variables if they haven't been committed.
            </summary>
        </member>
        <member name="M:SharpUtilities.Utility.EnvironmentVariableList.Commit">
            <summary>
            Function to commit any changes to the environment variables to the
            real environment variable list for this process.
            </summary>
        </member>
        <member name="T:SharpUtilities.Mathematics.MathUtility">
            <summary>
            Static class utility class for mathematics.
            </summary>
            <remarks>
            This just provides a convenient interface for commonly used mathematical functions and constants.
            </remarks>
        </member>
        <member name="F:SharpUtilities.Mathematics.MathUtility.PI">
            <summary>
            Constant containing the value of PI.
            </summary>
        </member>
        <member name="M:SharpUtilities.Mathematics.MathUtility.RoundInt(System.Single)">
            <summary>
            Function to round a floating point value to an integer.
            </summary>
            <param name="value">Value to round.</param>
            <returns>Rounded value.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.MathUtility.Round(System.Single)">
            <summary>
            Function to round a floating point value to an integer.
            </summary>
            <param name="value">Value to round.</param>
            <returns>Rounded value.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.MathUtility.Round(System.Single,System.Int32)">
            <summary>
            Function to round a floating point value.
            </summary>
            <param name="value">Value to round.</param>
            <param name="decimalPlaceCount">Number of decimal places to return.</param>
            <returns>Rounded value.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.MathUtility.Round(System.Single,System.Int32,System.MidpointRounding)">
            <summary>
            Function to round a floating point value.
            </summary>
            <param name="value">Value to round.</param>
            <param name="decimalPlaceCount">Number of decimal places to return.</param>
            <param name="rounding">Determines how to round mid point numbers.</param>
            <returns>Rounded value.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.MathUtility.Cos(System.Single)">
            <summary>
            Function to return the cosine of an angle in radians.
            </summary>
            <param name="radians">Angle in radians.</param>
            <returns>Cosine.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.MathUtility.Sin(System.Single)">
            <summary>
            Function to return the sine of an angle in radians.
            </summary>
            <param name="radians">Angle in radians.</param>
            <returns>Sine.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.MathUtility.Tan(System.Single)">
            <summary>
            Function to return the tangent of an angle in radians.
            </summary>
            <param name="radians">Angle in radians.</param>
            <returns>Tangent.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.MathUtility.ACos(System.Single)">
            <summary>
            Function to return the arc cosine in radians.
            </summary>
            <param name="cosine">Cosine value to convert.</param>
            <returns>Angle in radians.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.MathUtility.ASin(System.Single)">
            <summary>
            Function to return the arc sine in radians.
            </summary>
            <param name="sine">Sine value to convert.</param>
            <returns>Angle in radians.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.MathUtility.ATan(System.Single,System.Single)">
            <summary>
            Function to return the arc tangent in radians.
            </summary>
            <param name="y">Sin value to convert.</param>
            <param name="x">Cosine value to convert.</param>
            <returns>Angle in radians.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.MathUtility.Sqrt(System.Single)">
            <summary>
            Function to return the square root of a number.
            </summary>
            <param name="sqvalue">Number to get the square root of.</param>
            <returns>Square root of the number.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.MathUtility.InverseSqrt(System.Single)">
            <summary>
            Function to return the inverse square root of a number.
            </summary>
            <param name="sqvalue">Number to get the inverse square root of.</param>
            <returns>Inverted square root.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.MathUtility.Abs(System.Single)">
            <summary>
            Function to return the absolute value of a number.
            </summary>
            <param name="number">Number to get the absolute value of.</param>
            <returns>Absolute value of the number.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.MathUtility.Abs(System.Int32)">
            <summary>
            Function to return the absolute value of a number.
            </summary>
            <param name="number">Number to get the absolute value of.</param>
            <returns>Absolute value of the number.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.MathUtility.EqualFloat(System.Single,System.Single,System.Single)">
            <summary>
            Function to return if two floating point numbers are equal within a threshold.
            </summary>
            <param name="value1">First float value to compare.</param>
            <param name="value2">Second float value to compare.</param>
            <param name="epsilon">Tolerance of floating point error.</param>
            <returns>TRUE if equal, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.MathUtility.EqualFloat(System.Single,System.Single)">
            <summary>
            Function to return if two floating point numbers are equal.
            </summary>
            <param name="value1">First float value to compare.</param>
            <param name="value2">Second float value to compare.</param>		
            <returns>TRUE if equal, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.MathUtility.Radians(System.Single)">
            <summary>
            Function to convert degrees into radians.
            </summary>
            <param name="degrees">Degrees</param>
            <returns>Radian equivilant of degrees.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.MathUtility.Degrees(System.Single)">
            <summary>
            Function to convert radians into degrees.
            </summary>
            <param name="radians">Radians</param>
            <returns>Degree equivilant of radians.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.MathUtility.Max(System.Single,System.Single)">
            <summary>
            Function to return the highest of two values.
            </summary>
            <returns>Highest of the values supplied.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.MathUtility.Min(System.Single,System.Single)">
            <summary>
            Function to return the lowest of two values.
            </summary>
            <returns>Highest of the values supplied.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.MathUtility.Max(System.Int16,System.Int16)">
            <summary>
            Function to return the highest of two values.
            </summary>
            <returns>Highest of the values supplied.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.MathUtility.Min(System.Int16,System.Int16)">
            <summary>
            Function to return the lowest of two values.
            </summary>
            <returns>Highest of the values supplied.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.MathUtility.Max(System.Int32,System.Int32)">
            <summary>
            Function to return the highest of two values.
            </summary>
            <returns>Highest of the values supplied.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.MathUtility.Min(System.Int32,System.Int32)">
            <summary>
            Function to return the lowest of two values.
            </summary>
            <returns>Highest of the values supplied.</returns>
        </member>
        <member name="T:SharpUtilities.Collections.SortedCollection`1">
            <summary>
            Object representing a collection that can be sorted by an arbitrary sorter.
            </summary>
            <typeparam name="T">Type of data to store in the collection.</typeparam>
        </member>
        <member name="M:SharpUtilities.Collections.SortedCollection`1.AddItem(System.String,`0)">
            <summary>
            Function to add an item to the collection.
            </summary>
            <param name="key">Key for the item.</param>
            <param name="item">Item to add.</param>
        </member>
        <member name="M:SharpUtilities.Collections.SortedCollection`1.ClearItems">
            <summary>
            Function to clear the collection.
            </summary>
        </member>
        <member name="M:SharpUtilities.Collections.SortedCollection`1.RemoveItem(System.Int32)">
            <summary>
            Function to remove an object from the list by index.
            </summary>
            <param name="index">Index to remove at.</param>
        </member>
        <member name="M:SharpUtilities.Collections.SortedCollection`1.RemoveItem(System.String)">
            <summary>
            Function to remove an object from the list by key.
            </summary>
            <param name="key">Key of the object to remove.</param>
        </member>
        <member name="M:SharpUtilities.Collections.SortedCollection`1.Sort(System.Collections.Generic.IComparer{`0})">
            <summary>
            Function to sort the array.
            </summary>
        </member>
        <member name="M:SharpUtilities.Collections.SortedCollection`1.Sort">
            <summary>
            Function to sort the array.
            </summary>
        </member>
        <member name="M:SharpUtilities.Collections.SortedCollection`1.GetEnumerator">
            <summary>
            Function to return a new enumerator object.
            </summary>
            <returns>Enumerator object.</returns>
        </member>
        <member name="M:SharpUtilities.Collections.SortedCollection`1.GetKeySortedEnumerator">
            <summary>
            Function to return a new unsorted enumerator object.
            </summary>
            <returns>Enumerator object.</returns>
        </member>
        <member name="M:SharpUtilities.Collections.SortedCollection`1.#ctor(System.Int32,System.Collections.Generic.IComparer{`0},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpUtilities.Collections.SortedCollection`1"/> class.
            </summary>
            <param name="defaultsize">Default size of the collection.</param>
            <param name="comparer">Object used to perform the comparsion for sorting.</param>
            <param name="caseSensitiveKeys">TRUE if the keys are case sensitive, FALSE if not.</param>
        </member>
        <member name="M:SharpUtilities.Collections.SortedCollection`1.#ctor(System.Collections.Generic.IComparer{`0},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpUtilities.Collections.SortedCollection`1"/> class.
            </summary>
            <param name="comparer">Object used to perform the comparsion for sorting.</param>
            <param name="caseSensitiveKeys">TRUE if the keys are case sensitive, FALSE if not.</param>
        </member>
        <member name="M:SharpUtilities.Collections.SortedCollection`1.#ctor(System.Collections.Generic.IComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:SharpUtilities.Collections.SortedCollection`1"/> class.
            </summary>
            <param name="comparer">Object used to perform the comparsion for sorting.</param>
        </member>
        <member name="P:SharpUtilities.Collections.SortedCollection`1.Item(System.Int32)">
            <summary>
            Property to return an item by index.
            </summary>
        </member>
        <member name="T:SharpUtilities.InvalidNameException">
            <summary>
            Invalid name exception.
            </summary>
            <remarks>Exception thrown when a NULL or an empty string is passed into the NamedObject constructor.</remarks>
        </member>
        <member name="M:SharpUtilities.InvalidNameException.#ctor(System.String,SharpUtilities.NamedObjectErrorCodes)">
            <summary>
            Constructor.
            </summary>
            <param name="message">Message to pass through.</param>
            <param name="errorCode">Error code for the exception.</param>
        </member>
        <member name="M:SharpUtilities.InvalidNameException.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:SharpUtilities.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SharpUtilities.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SharpUtilities.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:SharpUtilities.IO.StreamWriterEx">
            <summary>
            Object representing a stream writer that can keep its stream open after it's closed.
            </summary>
        </member>
        <member name="M:SharpUtilities.IO.StreamWriterEx.Close">
            <summary>
            Function to close the writer and its underlying stream if KeepStreamOpen is false.
            </summary>
        </member>
        <member name="M:SharpUtilities.IO.StreamWriterEx.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="output">Output stream.</param>
            <param name="encoder">Encoding for the stream writer.</param>
            <param name="keepStreamOpen">TRUE to keep the underlying stream open when the writer is closed, FALSE for normal behaviour.</param>
            <param name="bufferSize">Sets the buffer size.</param>
        </member>
        <member name="M:SharpUtilities.IO.StreamWriterEx.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="output">Output stream.</param>
            <param name="encoder">Encoding for the stream writer.</param>
            <param name="keepStreamOpen">TRUE to keep the underlying stream open when the writer is closed, FALSE for normal behaviour.</param>		
        </member>
        <member name="M:SharpUtilities.IO.StreamWriterEx.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="output">Output stream.</param>
            <param name="keepStreamOpen">TRUE to keep the underlying stream open when the writer is closed, FALSE for normal behaviour.</param>
        </member>
        <member name="P:SharpUtilities.IO.StreamWriterEx.KeepStreamOpen">
            <summary>
            Property to set or return whether to keep the underlying stream open or not after the writer is closed.
            </summary>
        </member>
        <member name="T:SharpUtilities.Controls.ColorChooser">
            <summary>
            Summary description for ColorChooser1.
            </summary>
        </member>
        <member name="M:SharpUtilities.Controls.ColorChooser.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:SharpUtilities.Controls.ColorChooser.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SharpUtilities.Controls.ColorChooser.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:SharpUtilities.Controls.ColorChooser.numericAlpha_ValueChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the ValueChanged event of the numericAlpha control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:SharpUtilities.Controls.ColorChooser.UseAlpha">
            <summary>
            Property to set or return whether to use the alpha component or not.
            </summary>
        </member>
        <member name="P:SharpUtilities.Controls.ColorChangedEventArgs.Alpha">
            <summary>
            Property to return the alpha.
            </summary>
        </member>
        <member name="T:SharpUtilities.Utility.CannotOpenException">
            <summary>
            Cannot open file exception.
            </summary>
            <remarks>Exception thrown by the logger object when the log file cannot be opened.</remarks>
        </member>
        <member name="M:SharpUtilities.Utility.CannotOpenException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor.
            </summary>
            <param name="fileName">Filename of the log file.</param>
            <param name="ex">Inner exception.</param>
        </member>
        <member name="M:SharpUtilities.Utility.CannotOpenException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="fileName">Filename of the log file.</param>
        </member>
        <member name="T:SharpUtilities.Utility.CannotWriteException">
            <summary>
            Cannot write file exception.
            </summary>
            <remarks>Exception thrown when the logger object cannot write to the log file.</remarks>
        </member>
        <member name="M:SharpUtilities.Utility.CannotWriteException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor.
            </summary>
            <param name="fileName">Filename of the log file.</param>
            <param name="ex">Inner exception.</param>
        </member>
        <member name="M:SharpUtilities.Utility.CannotWriteException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="fileName">Filename of the log file.</param>
        </member>
        <member name="T:SharpUtilities.Utility.EnvironmentVariableReadException">
            <summary>
            Environment variable read exception.
            </summary>
            <remarks>Exception thrown when an attempt to read an environment variable fails or the environment variable is not found.</remarks>
        </member>
        <member name="M:SharpUtilities.Utility.EnvironmentVariableReadException.#ctor(System.String,SharpUtilities.Utility.EnvironmentVariableErrorCodes)">
            <summary>
            Constructor.
            </summary>
            <param name="message">Message to pass through.</param>
            <param name="errorCode">Error code for the exception.</param>
        </member>
        <member name="M:SharpUtilities.Utility.EnvironmentVariableReadException.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:SharpUtilities.Utility.EnvironmentVariableWriteException">
            <summary>
            Environment variable write exception.
            </summary>
            <remarks>Exception thrown when an attempt to read an environment variable fails or the environment variable is not found.</remarks>
        </member>
        <member name="M:SharpUtilities.Utility.EnvironmentVariableWriteException.#ctor(System.String,SharpUtilities.Utility.EnvironmentVariableErrorCodes)">
            <summary>
            Constructor.
            </summary>
            <param name="message">Message to pass through.</param>
            <param name="errorCode">Error code for the exception.</param>
        </member>
        <member name="M:SharpUtilities.Utility.EnvironmentVariableWriteException.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:SharpUtilities.Utility.InvalidJoystickIDException">
            <summary>
            Invalid joystick ID exception.
            </summary>
            <remarks>Exception thrown when a joystick ID is invalid.</remarks>
        </member>
        <member name="M:SharpUtilities.Utility.InvalidJoystickIDException.#ctor(System.String,SharpUtilities.Utility.JoystickErrors)">
            <summary>
            Constructor.
            </summary>
            <param name="message">Message to pass through.</param>
            <param name="errorCode">Error code for the exception.</param>
        </member>
        <member name="M:SharpUtilities.Utility.InvalidJoystickIDException.#ctor(System.Int32)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:SharpUtilities.Utility.InvalidJoystickParameterException">
            <summary>
            Invalid joystick parameter exception.
            </summary>
            <remarks>Exception thrown when a joystick function receives invalid data as a parameter.</remarks>
        </member>
        <member name="M:SharpUtilities.Utility.InvalidJoystickParameterException.#ctor(System.String,SharpUtilities.Utility.JoystickErrors)">
            <summary>
            Constructor.
            </summary>
            <param name="message">Message to pass through.</param>
            <param name="errorCode">Error code for the exception.</param>
        </member>
        <member name="M:SharpUtilities.Utility.InvalidJoystickParameterException.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:SharpUtilities.Utility.JoystickDriverNotPresentException">
            <summary>
            Joystick driver not present exception.
            </summary>
            <remarks>Exception thrown when there's no joystick driver present for the joystick ID passed.</remarks>
        </member>
        <member name="M:SharpUtilities.Utility.JoystickDriverNotPresentException.#ctor(System.String,SharpUtilities.Utility.JoystickErrors)">
            <summary>
            Constructor.
            </summary>
            <param name="message">Message to pass through.</param>
            <param name="errorCode">Error code for the exception.</param>
        </member>
        <member name="M:SharpUtilities.Utility.JoystickDriverNotPresentException.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:SharpUtilities.Utility.CannotRetrieveJoystickNameException">
            <summary>
            Cannot retrieve joystick name exception.
            </summary>
            <remarks>Exception thrown when the function is unable to retrieve the joystick name.</remarks>
        </member>
        <member name="M:SharpUtilities.Utility.CannotRetrieveJoystickNameException.#ctor(System.String,SharpUtilities.Utility.JoystickErrors)">
            <summary>
            Constructor.
            </summary>
            <param name="message">Message to pass through.</param>
            <param name="errorCode">Error code for the exception.</param>
        </member>
        <member name="M:SharpUtilities.Utility.CannotRetrieveJoystickNameException.#ctor(System.Exception)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:SharpUtilities.Utility.CannotRetrieveFontDataException">
            <summary>
            Cannot retrieve font data exception.
            </summary>
            <remarks>Exception thrown when the function is unable to retrieve the requested font data.</remarks>
        </member>
        <member name="M:SharpUtilities.Utility.CannotRetrieveFontDataException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor.
            </summary>
            <param name="message">Message to pass through.</param>
            <param name="ex">Inner exception.</param>
        </member>
        <member name="M:SharpUtilities.Utility.CannotRetrieveFontDataException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="message">Message to display.</param>
        </member>
        <member name="M:SharpUtilities.Utility.CannotRetrieveFontDataException.#ctor(System.Exception)">
            <summary>
            Constructor.
            </summary>
            <param name="ex">Inner exception.</param>
        </member>
        <member name="T:SharpUtilities.Utility.Logger">
            <summary>
            An object representing a logging interface.
            </summary>
            <remarks>
            Logging information can be output to the trace console, or to a file or both.
            </remarks>
        </member>
        <member name="M:SharpUtilities.Utility.Logger.Print(System.String,System.String,SharpUtilities.Utility.LoggingLevel,System.Object[])">
            <summary>
            Print a line to the logfile.
            </summary>
            <param name="section">Section that the line pertains to.</param>
            <param name="formatSpecifier">Format specifier for the line.</param>
            <param name="level">Level that this message falls under.</param>
            <param name="arguments">List of optional arguments.</param>
        </member>
        <member name="M:SharpUtilities.Utility.Logger.Print(System.String,SharpUtilities.Utility.LoggingLevel,System.Object[])">
            <summary>
            Print a line to the logfile.
            </summary>
            <param name="formatSpecifier">Format specifier for the line.</param>
            <param name="level">Level that this message falls under.</param>
            <param name="arguments">List of optional arguments.</param>
        </member>
        <member name="M:SharpUtilities.Utility.Logger.Close">
            <summary>
            Function to close the log file.
            </summary>
        </member>
        <member name="M:SharpUtilities.Utility.Logger.Open">
            <summary>
            Function to open the log file.
            </summary>
        </member>
        <member name="M:SharpUtilities.Utility.Logger.#ctor(System.String)">
            <summary>
            Constructor.		
            </summary>
            <param name="appname">File name for the log file.</param>
        </member>
        <member name="M:SharpUtilities.Utility.Logger.#ctor(System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="appname">File name for the log file.</param>
            <param name="path">File path for the file. NULL to force the console.</param>
        </member>
        <member name="M:SharpUtilities.Utility.Logger.Dispose(System.Boolean)">
            <summary>
            Function to remove resources.
            </summary>
            <param name="disposing">TRUE if we're removing managed resources and unmanaged, FALSE if only unmanaged.</param>
        </member>
        <member name="M:SharpUtilities.Utility.Logger.Dispose">
            <summary>
            Function to clean up.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.Logger.LogFilterLevel">
            <summary>
            Property to set or return the filtering level of this log.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.Logger.UseConsole">
            <summary>
            Property to set or return whether the messages go to the console or not.
            </summary>
        </member>
        <member name="T:SharpUtilities.MinMaxRange">
            <summary>
            Value type for storing a minimum and maximum value.
            </summary>
        </member>
        <member name="M:SharpUtilities.MinMaxRange.Shrink(System.Int32)">
            <summary>
            Function to shrink by a particular amount.
            </summary>
            <param name="amount">Amount to shrink values by.</param>
        </member>
        <member name="M:SharpUtilities.MinMaxRange.Expand(System.Int32)">
            <summary>
            Function to expand by a particular amount.
            </summary>
            <param name="amount">Amount to expand values by.</param>
        </member>
        <member name="M:SharpUtilities.MinMaxRange.InRange(System.Int32,System.Boolean)">
            <summary>
            Function to determine if a value falls within the range.
            </summary>
            <param name="value">Value to check.</param>
            <param name="inclusive">TRUE to include the minimum/maximum values, FALSE to include only between the two values.</param>
            <returns>TRUE if in the range, FALSE if outside.</returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRange.InRange(System.Int32)">
            <summary>
            Function to determine if a value falls within the range.
            </summary>
            <param name="value">Value to check.</param>
            <returns>TRUE if in the range, FALSE if outside.</returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRange.InRange(SharpUtilities.MinMaxRange,System.Boolean)">
            <summary>
            Function to determine if a value falls within the range.
            </summary>
            <param name="value">Value to check.</param>
            <param name="inclusive">TRUE to include the minimum/maximum values, FALSE to include only between the two values.</param>
            <returns>TRUE if in the range, FALSE if outside.</returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRange.InRange(SharpUtilities.MinMaxRange)">
            <summary>
            Function to determine if a value falls within the range.
            </summary>
            <param name="value">Value to check.</param>
            <returns>TRUE if in the range, FALSE if outside.</returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRange.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">Another object to compare to.</param>
            <returns>
            true if obj and this instance are the same type and represent the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRange.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRange.ToString">
            <summary>
            Returns the fully qualified type name of this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> containing a fully qualified type name.
            </returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRange.Add(SharpUtilities.MinMaxRange,SharpUtilities.MinMaxRange)">
            <summary>
            Function to add together two ranges.
            </summary>
            <param name="range1">First range to add.</param>
            <param name="range2">Second range to add.</param>
            <returns>Sum of the two ranges.</returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRange.Subtract(SharpUtilities.MinMaxRange,SharpUtilities.MinMaxRange)">
            <summary>
            Function to subtract two ranges.
            </summary>
            <param name="range1">First range to subtract.</param>
            <param name="range2">Second range to subtract.</param>
            <returns>Difference between the two ranges.</returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRange.Multiply(SharpUtilities.MinMaxRange,SharpUtilities.MinMaxRange)">
            <summary>
            Function to multiply together two ranges.
            </summary>
            <param name="range1">First range to multiply.</param>
            <param name="range2">Second range to multiply.</param>
            <returns>Product of the two ranges.</returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRange.Divide(SharpUtilities.MinMaxRange,SharpUtilities.MinMaxRange)">
            <summary>
            Function to divide two ranges.
            </summary>
            <param name="range1">First range to divide.</param>
            <param name="range2">Second range to divide.</param>
            <returns>Quotient of the two ranges.</returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRange.Round(SharpUtilities.MinMaxRangeF)">
            <summary>
            Function to round, up or down, a floating point min max range to an integer min max range.
            </summary>
            <param name="range">Floating point range to round.</param>
            <returns>Rounded integer range.</returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRange.op_Addition(SharpUtilities.MinMaxRange,SharpUtilities.MinMaxRange)">
            <summary>
            Operator for addition.
            </summary>
            <param name="range1">First range to add.</param>
            <param name="range2">Second range to add.</param>
            <returns>Sum of the two ranges.</returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRange.op_Subtraction(SharpUtilities.MinMaxRange,SharpUtilities.MinMaxRange)">
            <summary>
            Operator to subtract two ranges.
            </summary>
            <param name="range1">First range to subtract.</param>
            <param name="range2">Second range to subtract.</param>
            <returns>Difference between the two ranges.</returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRange.op_Multiply(SharpUtilities.MinMaxRange,SharpUtilities.MinMaxRange)">
            <summary>
            Operator to multiply together two ranges.
            </summary>
            <param name="range1">First range to multiply.</param>
            <param name="range2">Second range to multiply.</param>
            <returns>Product of the two ranges.</returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRange.op_Division(SharpUtilities.MinMaxRange,SharpUtilities.MinMaxRange)">
            <summary>
            Operator to divide two ranges.
            </summary>
            <param name="range1">First range to divide.</param>
            <param name="range2">Second range to divide.</param>
            <returns>Quotient of the two ranges.</returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRange.op_Implicit(System.Drawing.Point)~SharpUtilities.MinMaxRange">
            <summary>
            Operator to convert a Point structure to a min/max structure.
            </summary>
            <param name="point">Point to convert.</param>
            <returns>Min max range.</returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRange.op_Explicit(SharpUtilities.Mathematics.Vector2D)~SharpUtilities.MinMaxRange">
            <summary>
            Operator to convert a 2D vector structure to a min/max structure.
            </summary>
            <param name="vector">Vector to convert.</param>
            <returns>Min max range.</returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRange.op_Explicit(SharpUtilities.MinMaxRangeF)~SharpUtilities.MinMaxRange">
            <summary>
            Operator to convert a floating point min/max structure to an integer min/max structure.
            </summary>
            <param name="minmax">Floating point min/max structure to convert..</param>
            <returns>Integer min max range.</returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRange.op_Implicit(System.Drawing.Size)~SharpUtilities.MinMaxRange">
            <summary>
            Operator to convert a Size structure to a min/max structure.
            </summary>
            <param name="size">Size to convert.</param>
            <returns>Min max range.</returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRange.op_Implicit(SharpUtilities.MinMaxRange)~System.Drawing.Point">
            <summary>
            Operator to convert a min/max structure to a Point structure.
            </summary>
            <param name="minmax">Min/max to convert.</param>
            <returns>Point containing min/max values..</returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRange.op_Implicit(SharpUtilities.MinMaxRange)~System.Drawing.Size">
            <summary>
            Operator to convert a min/max structure to a Size structure.
            </summary>
            <param name="minmax">Min/max to convert.</param>
            <returns>Size containing min/max values..</returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRange.op_Implicit(SharpUtilities.MinMaxRange)~SharpUtilities.Mathematics.Vector2D">
            <summary>
            Operator to convert a min/max structure to a 2D vector structure.
            </summary>
            <param name="minmax">Min/max to convert.</param>
            <returns>Vector containing min/max values..</returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRange.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="min">Minimum value.</param>
            <param name="max">Maximum value.</param>
        </member>
        <member name="M:SharpUtilities.MinMaxRange.#ctor(System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="empty">TRUE if structure is empty, FALSE if not.</param>
        </member>
        <member name="P:SharpUtilities.MinMaxRange.Maximum">
            <summary>
            Property to set or return the maximum value.
            </summary>
        </member>
        <member name="P:SharpUtilities.MinMaxRange.Minimum">
            <summary>
            Property to set or return the Minimum value.
            </summary>
        </member>
        <member name="P:SharpUtilities.MinMaxRange.Empty">
            <summary>
            Property to return an empty range.
            </summary>
        </member>
        <member name="P:SharpUtilities.MinMaxRange.IsEmpty">
            <summary>
            Property to return whether this structure is empty or not.
            </summary>
        </member>
        <member name="P:SharpUtilities.MinMaxRange.Range">
            <summary>
            Property to return the range (distance between the minimum and maximum values.
            </summary>
        </member>
        <member name="T:SharpUtilities.MinMaxRangeF">
            <summary>
            Value type for storing a minimum and maximum floating point value.
            </summary>
        </member>
        <member name="M:SharpUtilities.MinMaxRangeF.Shrink(System.Single)">
            <summary>
            Function to shrink by a particular amount.
            </summary>
            <param name="amount">Amount to shrink values by.</param>
        </member>
        <member name="M:SharpUtilities.MinMaxRangeF.Expand(System.Single)">
            <summary>
            Function to expand by a particular amount.
            </summary>
            <param name="amount">Amount to expand values by.</param>
        </member>
        <member name="M:SharpUtilities.MinMaxRangeF.InRange(System.Single,System.Boolean)">
            <summary>
            Function to determine if a value falls within the range.
            </summary>
            <param name="value">Value to check.</param>
            <param name="inclusive">TRUE to include the minimum/maximum values, FALSE to include only between the two values.</param>
            <returns>TRUE if in the range, FALSE if outside.</returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRangeF.InRange(System.Single)">
            <summary>
            Function to determine if a value falls within the range.
            </summary>
            <param name="value">Value to check.</param>
            <returns>TRUE if in the range, FALSE if outside.</returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRangeF.InRange(SharpUtilities.MinMaxRangeF,System.Boolean)">
            <summary>
            Function to determine if a value falls within the range.
            </summary>
            <param name="value">Value to check.</param>
            <param name="inclusive">TRUE to include the minimum/maximum values, FALSE to include only between the two values.</param>
            <returns>TRUE if in the range, FALSE if outside.</returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRangeF.InRange(SharpUtilities.MinMaxRangeF)">
            <summary>
            Function to determine if a value falls within the range.
            </summary>
            <param name="value">Value to check.</param>
            <returns>TRUE if in the range, FALSE if outside.</returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRangeF.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">Another object to compare to.</param>
            <returns>
            true if obj and this instance are the same type and represent the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRangeF.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRangeF.ToString">
            <summary>
            Returns the fully qualified type name of this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> containing a fully qualified type name.
            </returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRangeF.Add(SharpUtilities.MinMaxRangeF,SharpUtilities.MinMaxRangeF)">
            <summary>
            Function to add together two ranges.
            </summary>
            <param name="range1">First range to add.</param>
            <param name="range2">Second range to add.</param>
            <returns>Sum of the two ranges.</returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRangeF.Subtract(SharpUtilities.MinMaxRangeF,SharpUtilities.MinMaxRangeF)">
            <summary>
            Function to subtract two ranges.
            </summary>
            <param name="range1">First range to subtract.</param>
            <param name="range2">Second range to subtract.</param>
            <returns>Difference between the two ranges.</returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRangeF.Multiply(SharpUtilities.MinMaxRangeF,SharpUtilities.MinMaxRangeF)">
            <summary>
            Function to multiply together two ranges.
            </summary>
            <param name="range1">First range to multiply.</param>
            <param name="range2">Second range to multiply.</param>
            <returns>Product of the two ranges.</returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRangeF.Divide(SharpUtilities.MinMaxRangeF,SharpUtilities.MinMaxRangeF)">
            <summary>
            Function to divide two ranges.
            </summary>
            <param name="range1">First range to divide.</param>
            <param name="range2">Second range to divide.</param>
            <returns>Quotient of the two ranges.</returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRangeF.op_Addition(SharpUtilities.MinMaxRangeF,SharpUtilities.MinMaxRangeF)">
            <summary>
            Operator for addition.
            </summary>
            <param name="range1">First range to add.</param>
            <param name="range2">Second range to add.</param>
            <returns>Sum of the two ranges.</returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRangeF.op_Subtraction(SharpUtilities.MinMaxRangeF,SharpUtilities.MinMaxRangeF)">
            <summary>
            Operator to subtract two ranges.
            </summary>
            <param name="range1">First range to subtract.</param>
            <param name="range2">Second range to subtract.</param>
            <returns>Difference between the two ranges.</returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRangeF.op_Multiply(SharpUtilities.MinMaxRangeF,SharpUtilities.MinMaxRangeF)">
            <summary>
            Operator to multiply together two ranges.
            </summary>
            <param name="range1">First range to multiply.</param>
            <param name="range2">Second range to multiply.</param>
            <returns>Product of the two ranges.</returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRangeF.op_Division(SharpUtilities.MinMaxRangeF,SharpUtilities.MinMaxRangeF)">
            <summary>
            Operator to divide two ranges.
            </summary>
            <param name="range1">First range to divide.</param>
            <param name="range2">Second range to divide.</param>
            <returns>Quotient of the two ranges.</returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRangeF.op_Implicit(SharpUtilities.MinMaxRange)~SharpUtilities.MinMaxRangeF">
            <summary>
            Operator to convert an integer min max range structure to a floating point min/max structure.
            </summary>
            <param name="minmax">Integer range to convert.</param>
            <returns>Floating point min max range.</returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRangeF.op_Implicit(System.Drawing.PointF)~SharpUtilities.MinMaxRangeF">
            <summary>
            Operator to convert a PointF structure to a min/max structure.
            </summary>
            <param name="point">PointF to convert.</param>
            <returns>Min max range.</returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRangeF.op_Implicit(SharpUtilities.Mathematics.Vector2D)~SharpUtilities.MinMaxRangeF">
            <summary>
            Operator to convert a 2D vector structure to a min/max structure.
            </summary>
            <param name="vector">Vector to convert.</param>
            <returns>Min max range.</returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRangeF.op_Implicit(System.Drawing.SizeF)~SharpUtilities.MinMaxRangeF">
            <summary>
            Operator to convert a SizeF structure to a min/max structure.
            </summary>
            <param name="size">SizeF to convert.</param>
            <returns>Min max range.</returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRangeF.op_Implicit(SharpUtilities.MinMaxRangeF)~System.Drawing.PointF">
            <summary>
            Operator to convert a min/max structure to a PointF structure.
            </summary>
            <param name="minmax">Min/max to convert.</param>
            <returns>PointF containing min/max values..</returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRangeF.op_Implicit(SharpUtilities.MinMaxRangeF)~System.Drawing.SizeF">
            <summary>
            Operator to convert a min/max structure to a SizeF structure.
            </summary>
            <param name="minmax">Min/max to convert.</param>
            <returns>SizeF containing min/max values..</returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRangeF.op_Implicit(SharpUtilities.MinMaxRangeF)~SharpUtilities.Mathematics.Vector2D">
            <summary>
            Operator to convert a min/max structure to a 2D vector structure.
            </summary>
            <param name="minmax">Min/max to convert.</param>
            <returns>Vector containing min/max values..</returns>
        </member>
        <member name="M:SharpUtilities.MinMaxRangeF.#ctor(System.Single,System.Single)">
            <summary>
            Constructor.
            </summary>
            <param name="min">Minimum value.</param>
            <param name="max">Maximum value.</param>
        </member>
        <member name="M:SharpUtilities.MinMaxRangeF.#ctor(System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="empty">TRUE if structure is empty, FALSE if not.</param>
        </member>
        <member name="P:SharpUtilities.MinMaxRangeF.Maximum">
            <summary>
            Property to set or return the maximum value.
            </summary>
        </member>
        <member name="P:SharpUtilities.MinMaxRangeF.Minimum">
            <summary>
            Property to set or return the Minimum value.
            </summary>
        </member>
        <member name="P:SharpUtilities.MinMaxRangeF.Empty">
            <summary>
            Property to return an empty range.
            </summary>
        </member>
        <member name="P:SharpUtilities.MinMaxRangeF.IsEmpty">
            <summary>
            Property to return whether this structure is empty or not.
            </summary>
        </member>
        <member name="P:SharpUtilities.MinMaxRangeF.Range">
            <summary>
            Property to return the range (distance between the minimum and maximum values.
            </summary>
        </member>
        <member name="T:SharpUtilities.Utility.OSTypes">
            <summary>
            Enumeration of operating system types.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.OSTypes.Unknown">
            <summary>
            Unknown operating system.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.OSTypes.Windows95">
            <summary>
            Windows 95.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.OSTypes.Windows95OSR2">
            <summary>
            Windows 95 OSR 2.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.OSTypes.Windows98">
            <summary>
            Windows 98.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.OSTypes.Windows98SE">
            <summary>
            Windows 98 SE.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.OSTypes.WindowsME">
            <summary>
            Windows Millenium.  (That's money well wasted.)
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.OSTypes.WindowsNT4">
            <summary>
            Windows NT 4.0.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.OSTypes.Windows2000">
            <summary>
            Windows 2000.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.OSTypes.WindowsXP">
            <summary>
            Windows XP.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.OSTypes.Windows2003">
            <summary>
            Windows 2003.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.OSTypes.WindowsCE">
            <summary>
            Windows CE.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.OSTypes.WindowsVista">
            <summary>
            Windows Vista.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.OSTypes.WindowsFuture">
            <summary>
            Windows, unknown version.
            </summary>
        </member>
        <member name="T:SharpUtilities.Utility.OSExtensions">
            <summary>
            Enumeration of OS extensions.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.OSExtensions.None">
            <summary>
            No extension.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.OSExtensions.SmallBusiness">
            <summary>
            Small business version.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.OSExtensions.Enterprise">
            <summary>
            Enterprise version.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.OSExtensions.CommunicationServer">
            <summary>
            Communication server.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.OSExtensions.SmallBusinessRestricted">
            <summary>
            Restricted small business.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.OSExtensions.DataCenter">
            <summary>
            Data center version.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.OSExtensions.Professional">
            <summary>
            Professional version.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.OSExtensions.Embedded">
            <summary>
            Embedded version.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.OSExtensions.Workstation">
            <summary>
            Workstation version.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.OSExtensions.Home">
            <summary>
            Home version (XP).
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.OSExtensions.Server">
            <summary>
            Server version.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.OSExtensions.HomeBasic">
            <summary>
            Windows Vista Home Basic.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.OSExtensions.HomeBasicN">
            <summary>
            Windows Vista Home Basic N.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.OSExtensions.HomePremium">
            <summary>
            Windows Vista Home Premium.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.OSExtensions.Business">
            <summary>
            Windows Vista Business.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.OSExtensions.BusinessN">
            <summary>
            Windows Vista Business N.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.OSExtensions.Ultimate">
            <summary>
            Windows Vista Ultimate.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.OSExtensions.EnterpriseServer">
            <summary>
            Enterprise Server.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.OSExtensions.Starter">
            <summary>
            Windows Vista Starter.
            </summary>
        </member>
        <member name="T:SharpUtilities.Utility.LoggingLevel">
            <summary>
            Enumeration containing the logging levels.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.LoggingLevel.None">
            <summary>None, this will disable the log.</summary>
        </member>
        <member name="F:SharpUtilities.Utility.LoggingLevel.Simple">
            <summary>This will only pass messages marked as simple.</summary>
        </member>
        <member name="F:SharpUtilities.Utility.LoggingLevel.Intermediate">
            <summary>This will only pass messages marked as intermediate.</summary>
        </member>
        <member name="F:SharpUtilities.Utility.LoggingLevel.Verbose">
            <summary>This will only pass messages marked as verbose.</summary>
        </member>
        <member name="F:SharpUtilities.Utility.LoggingLevel.All">
            <summary>This will print all messages regardless of level.</summary>
        </member>
        <member name="T:SharpUtilities.Utility.LoggerErrorCodes">
            <summary>
            Enumeration for logger error codes.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.LoggerErrorCodes.CannotWrite">
            <summary>
            Cannot write to the log file.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.LoggerErrorCodes.CannotOpen">
            <summary>
            Cannot open the log file for writing.
            </summary>
        </member>
        <member name="T:SharpUtilities.Utility.EnvironmentVariableErrorCodes">
            <summary>
            Enumeration for environment variable error codes.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.EnvironmentVariableErrorCodes.CannotReadVariable">
            <summary>
            Cannot read the environment variable.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.EnvironmentVariableErrorCodes.CannotWriteVariable">
            <summary>
            Cannot write to the environment variable.
            </summary>
        </member>
        <member name="T:SharpUtilities.Utility.ErrorDialogIcons">
            <summary>
            Enumeration for error dialog icons.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.ErrorDialogIcons.Default">
            <summary>
            Default round error icon.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.ErrorDialogIcons.Bug">
            <summary>
            Icon for a general bug.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.ErrorDialogIcons.Box">
            <summary>
            Same as the round error icon, except in a square.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.ErrorDialogIcons.Disk">
            <summary>
            Icon for a disk error.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.ErrorDialogIcons.Data">
            <summary>
            Icon for a data error.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.ErrorDialogIcons.Hardware">
            <summary>
            Icon for a hardware error.
            </summary>
        </member>
        <member name="T:SharpUtilities.Utility.JoystickErrors">
            <summary>
            Enumeration for joystick errors.
            </summary>
        </member>
        <member name="F:SharpUtilities.Utility.JoystickErrors.InvalidID">
            <summary>Invalid joystick ID.</summary>
        </member>
        <member name="F:SharpUtilities.Utility.JoystickErrors.InvalidParameter">
            <summary>Invalid parameter.</summary>
        </member>
        <member name="F:SharpUtilities.Utility.JoystickErrors.DriverNotPresent">
            <summary>Joystick driver not present.</summary>
        </member>
        <member name="F:SharpUtilities.Utility.JoystickErrors.CannotGetName">
            <summary>Cannot retrieve the joystick name.</summary>
        </member>
        <member name="T:SharpUtilities.Mathematics.DivideByZeroException">
            <summary>
            Divide by zero exception.
            </summary>
            <remarks>Exception thrown when an attempt to divide by 0 is made.</remarks>
        </member>
        <member name="M:SharpUtilities.Mathematics.DivideByZeroException.#ctor(System.String,SharpUtilities.Mathematics.MathErrorCodes)">
            <summary>
            Constructor.
            </summary>
            <param name="message">Message to pass through.</param>
            <param name="errorCode">Error code for the exception.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.DivideByZeroException.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:SharpUtilities.Collections.BaseDictionaryCollection`1">
            <summary>
            An abstract class representing a hash table of objects.
            </summary>
            <remarks>
            This was designed as a point of convenience to take some of the annoyance out of inheriting a hash table.
            <para>
            This class provides a simplified method of inheriting a basic list collection.  It holds no benefit over the System.Collections.Generic.Dictionary object, which it uses internally.
            </para>
            	<para>
            This class, like the other classes in the <see cref="N:SharpUtilities.Collections">Collections</see> namespace, implements the IEnumerable interface already to return an iterator interface for enumeration.
            </para>
            </remarks>
            <typeparam name="T">Type of data to store.</typeparam>
        </member>
        <member name="M:SharpUtilities.Collections.BaseDictionaryCollection`1.GetItem(System.String)">
            <summary>
            Function to return an item with the specified key.
            </summary>
            <param name="key">Key of the item in the hash map.</param>
        </member>
        <member name="M:SharpUtilities.Collections.BaseDictionaryCollection`1.AddItem(System.String,`0)">
            <summary>
            Function to add an item with the specified key.
            </summary>
            <param name="key">Key for the item.</param>
            <param name="item">Item to add.</param>
        </member>
        <member name="M:SharpUtilities.Collections.BaseDictionaryCollection`1.RemoveItem(System.String)">
            <summary>
            Function to remove an object from the list by key.
            </summary>
            <param name="key">Key of the object to remove.</param>
        </member>
        <member name="M:SharpUtilities.Collections.BaseDictionaryCollection`1.ClearItems">
            <summary>
            Function to clear the collection.
            </summary>
        </member>
        <member name="M:SharpUtilities.Collections.BaseDictionaryCollection`1.Contains(System.String)">
            <summary>
            Function to return whether a key exists in the collection or not.
            </summary>
            <param name="key">Key of the object in the collection.</param>
            <returns>TRUE if the object exists, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Collections.BaseDictionaryCollection`1.StaticArray(System.Int32)">
            <summary>
            Function to return the items in the hash list as a static array.
            </summary>
            <param name="count">Number of items to copy.</param>
            <returns>A static array containing a copy of this hash list.</returns>
        </member>
        <member name="M:SharpUtilities.Collections.BaseDictionaryCollection`1.StaticArray">
            <summary>
            Function to return the items in the hash table as a static array.
            </summary>
            <returns>A static array containing a copy of this hash table.</returns>
        </member>
        <member name="M:SharpUtilities.Collections.BaseDictionaryCollection`1.#ctor(System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpUtilities.Collections.BaseDictionaryCollection`1"/> class.
            </summary>
            <param name="defaultsize">Default size of the collection.</param>
            <param name="caseSensitive">TRUE if keys are case sensitive, FALSE if not.</param>
        </member>
        <member name="M:SharpUtilities.Collections.BaseDictionaryCollection`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Function to return a new enumerator object.
            </summary>
            <returns>Enumerator object.</returns>
        </member>
        <member name="M:SharpUtilities.Collections.BaseDictionaryCollection`1.GetEnumerator">
            <summary>
            Function to return a new enumerator object.
            </summary>
            <returns>Enumerator object.</returns>
        </member>
        <member name="P:SharpUtilities.Collections.BaseDictionaryCollection`1.Count">
            <summary>
            Property to return the number of items in the collection.
            </summary>
        </member>
        <member name="P:SharpUtilities.Collections.BaseDictionaryCollection`1.IsCaseSensitive">
            <summary>
            Property to return whether the collection keys are case sensitive or not.
            </summary>
        </member>
        <member name="T:SharpUtilities.Collections.DictionaryCollection`1">
            <summary>
            Object representing a more concrete version of the dynamic array.
            </summary>
            <typeparam name="T">Type of object to store.</typeparam>
        </member>
        <member name="M:SharpUtilities.Collections.DictionaryCollection`1.Remove(System.String)">
            <summary>
            Function to remove an object from the list by key.
            </summary>
            <param name="key">Key of the object to remove.</param>
        </member>
        <member name="M:SharpUtilities.Collections.DictionaryCollection`1.Clear">
            <summary>
            Function to clear the collection.
            </summary>
        </member>
        <member name="M:SharpUtilities.Collections.DictionaryCollection`1.#ctor(System.Int32,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="defaultsize">Default size of the collection.</param>
            <param name="caseSensitiveKeys">TRUE for case sensitive keys, FALSE for case insensitive keys.</param>
        </member>
        <member name="M:SharpUtilities.Collections.DictionaryCollection`1.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpUtilities.Collections.DictionaryCollection`1"/> class.
            </summary>
            <param name="caseSensitiveKeys">TRUE for case sensitive keys, FALSE for case insensitive keys.</param>
        </member>
        <member name="M:SharpUtilities.Collections.DictionaryCollection`1.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:SharpUtilities.Collections.DictionaryCollection`1.Item(System.String)">
            <summary>
            Property to return the item with the specified key.
            </summary>
        </member>
        <member name="T:SharpUtilities.Utility.UI">
            <summary>
            Static class representing various User Interface utilities.
            </summary>
        </member>
        <member name="M:SharpUtilities.Utility.UI.AbortRetryBox(System.Windows.Forms.Form,System.String,System.String)">
            <summary>
            Function to display an error box.
            </summary>
            <param name="owner">Owning window of this dialog.</param>
            <param name="message">Message to display.</param>
            <param name="caption">Caption for the dialog.</param>
        </member>
        <member name="M:SharpUtilities.Utility.UI.AbortRetryBox(System.Windows.Forms.Form,System.String)">
            <summary>
            Function to display an error box.
            </summary>
            <param name="owner">Owning window of this dialog.</param>
            <param name="message">Message to display.</param>
        </member>
        <member name="M:SharpUtilities.Utility.UI.ErrorBox(System.Windows.Forms.Form,SharpUtilities.Utility.ErrorDialogIcons,System.String,System.Exception,System.String)">
            <summary>
            Function to display the enhanced error dialog.
            </summary>
            <param name="owner">Owning window of this dialog.</param>
            <param name="icon">Icon to be displayed in the error message.</param>
            <param name="message">Supplementary error message.</param>
            <param name="innerException">Exception that was thrown.</param>
            <param name="caption">Caption for the error box.</param>
        </member>
        <member name="M:SharpUtilities.Utility.UI.ErrorBox(System.Windows.Forms.Form,SharpUtilities.Utility.ErrorDialogIcons,System.String,System.Exception)">
            <summary>
            Function to display the enhanced error dialog.
            </summary>
            <param name="owner">Owning window of this dialog.</param>
            <param name="icon">Icon to be displayed in the error message.</param>
            <param name="message">Supplementary error message.</param>
            <param name="innerException">Exception that was thrown.</param>
        </member>
        <member name="M:SharpUtilities.Utility.UI.ErrorBox(System.Windows.Forms.Form,SharpUtilities.Utility.ErrorDialogIcons,System.Exception)">
            <summary>
            Function to display the enhanced error dialog.
            </summary>
            <param name="owner">Owning window of this dialog.</param>
            <param name="icon">Icon to be displayed in the error message.</param>
            <param name="innerException">Exception that was thrown.</param>
        </member>
        <member name="M:SharpUtilities.Utility.UI.ErrorBox(System.Windows.Forms.Form,System.String,System.Exception)">
            <summary>
            Function to display the enhanced error dialog.
            </summary>
            <param name="owner">Owning window of this dialog.</param>
            <param name="message">Supplementary error message.</param>
            <param name="innerException">Exception that was thrown.</param>
        </member>
        <member name="M:SharpUtilities.Utility.UI.ErrorBox(System.Windows.Forms.Form,System.Exception)">
            <summary>
            Function to display the enhanced error dialog.
            </summary>
            <param name="owner">Owning window of this dialog.</param>
            <param name="innerException">Exception that was thrown.</param>
        </member>
        <member name="M:SharpUtilities.Utility.UI.ErrorBox(System.Windows.Forms.Form,SharpUtilities.Utility.ErrorDialogIcons,System.String,System.String,System.String)">
            <summary>
            Function to display the enhanced error dialog.
            </summary>
            <param name="owner">Owning window of this dialog.</param>
            <param name="icon">Icon to be displayed in the error message.</param>
            <param name="description">Error description.</param>
            <param name="details">Details for the error.</param>
            <param name="caption">Caption for the error box.</param>
        </member>
        <member name="M:SharpUtilities.Utility.UI.ErrorBox(System.Windows.Forms.Form,SharpUtilities.Utility.ErrorDialogIcons,System.String,System.String)">
            <summary>
            Function to display the enhanced error dialog.
            </summary>
            <param name="owner">Owning window of this dialog.</param>
            <param name="icon">Icon to be displayed in the error message.</param>
            <param name="description">Error description.</param>
            <param name="details">Details for the error.</param>
        </member>
        <member name="M:SharpUtilities.Utility.UI.ErrorBox(System.Windows.Forms.Form,SharpUtilities.Utility.ErrorDialogIcons,System.String)">
            <summary>
            Function to display the enhanced error dialog.
            </summary>
            <param name="owner">Owning window of this dialog.</param>
            <param name="icon">Icon to be displayed in the error message.</param>
            <param name="description">Error description.</param>		
        </member>
        <member name="M:SharpUtilities.Utility.UI.ErrorBox(System.Windows.Forms.Form,System.String,System.String)">
            <summary>
            Function to display the enhanced error dialog.
            </summary>
            <param name="owner">Owning window of this dialog.</param>		
            <param name="description">Error description.</param>
            <param name="details">Details for the error.</param>
        </member>
        <member name="M:SharpUtilities.Utility.UI.ErrorBox(System.Windows.Forms.Form,System.String)">
            <summary>
            Function to display the enhanced error dialog.
            </summary>
            <param name="owner">Owning window of this dialog.</param>
            <param name="description">Error description.</param>		
        </member>
        <member name="M:SharpUtilities.Utility.UI.ErrorRetryBox(System.Windows.Forms.Form,System.String,System.String)">
            <summary>
            Function to display an error box.
            </summary>
            <param name="owner">Owning window of this dialog.</param>
            <param name="message">Message to display.</param>
            <param name="caption">Caption for the dialog.</param>
            <returns>TRUE if Retry clicked, FALSE if cancelled.</returns>
        </member>
        <member name="M:SharpUtilities.Utility.UI.ErrorRetryBox(System.Windows.Forms.Form,System.String)">
            <summary>
            Function to display an error box.
            </summary>
            <param name="owner">Owning window of this dialog.</param>
            <param name="message">Message to display.</param>
            <returns>TRUE if Retry clicked, FALSE if cancelled.</returns>
        </member>
        <member name="M:SharpUtilities.Utility.UI.InfoBox(System.Windows.Forms.Form,System.String,System.String)">
            <summary>
            Function to display an information box.
            </summary>
            <param name="owner">Owning window of this dialog.</param>
            <param name="message">Message to display.</param>
            <param name="caption">Caption for the dialog.</param>
        </member>
        <member name="M:SharpUtilities.Utility.UI.InfoBox(System.Windows.Forms.Form,System.String)">
            <summary>
            Function to display an information box.
            </summary>
            <param name="owner">Owning window of this dialog.</param>
            <param name="message">Message to display.</param>
        </member>
        <member name="M:SharpUtilities.Utility.UI.WarningBox(System.Windows.Forms.Form,System.String,System.String)">
            <summary>
            Function to display a warning box.
            </summary>
            <param name="owner">Owning window of this dialog.</param>
            <param name="message">Message to display.</param>
            <param name="caption">Caption for the dialog.</param>
        </member>
        <member name="M:SharpUtilities.Utility.UI.WarningBox(System.Windows.Forms.Form,System.String)">
            <summary>
            Function to display a warning box.
            </summary>
            <param name="owner">Owning window of this dialog.</param>
            <param name="message">Message to display.</param>
        </member>
        <member name="M:SharpUtilities.Utility.UI.WarningRetryBox(System.Windows.Forms.Form,System.String,System.String)">
            <summary>
            Function to display a warning box.
            </summary>
            <param name="owner">Owning window of this dialog.</param>
            <param name="message">Message to display.</param>
            <param name="caption">Caption for the dialog.</param>
            <returns>TRUE if Retry clicked, FALSE if cancelled.</returns>
        </member>
        <member name="M:SharpUtilities.Utility.UI.WarningRetryBox(System.Windows.Forms.Form,System.String)">
            <summary>
            Function to display a warning box.
            </summary>
            <param name="owner">Owning window of this dialog.</param>
            <param name="message">Message to display.</param>
            <returns>TRUE if Retry clicked, FALSE if cancelled.</returns>
        </member>
        <member name="M:SharpUtilities.Utility.UI.OKCancelBox(System.Windows.Forms.Form,System.String,System.String)">
            <summary>
            Function to display a confirmation box.
            </summary>
            <param name="owner">Owning window of this dialog.</param>
            <param name="message">Message to display.</param>
            <param name="caption">Caption for the dialog.</param>
            <returns>TRUE if OK is clicked, FALSE if cancel is clicked.</returns>
        </member>
        <member name="M:SharpUtilities.Utility.UI.OkCancelBox(System.Windows.Forms.Form,System.String)">
            <summary>
            Function to display a confirmation box.
            </summary>
            <param name="owner">Owning window of this dialog.</param>
            <param name="message">Message to display.</param>
            <returns>TRUE if yes is clicked, FALSE if no is clicked.</returns>
        </member>
        <member name="M:SharpUtilities.Utility.UI.ConfirmBox(System.Windows.Forms.Form,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Function to display a confirmation dialog.
            </summary>
            <param name="owner">Owning window of this dialog.</param>
            <param name="message">Message to display.</param>
            <param name="caption">Caption for the dialog.</param>
            <param name="allowCancel">TRUE to show a Cancel button, FALSE to hide.</param>
            <param name="allowToAll">TRUE to show a 'To all' option, FALSE to hide.</param>
            <returns>Any member of ConfirmationResult except ConfirmationResult.None.</returns>
        </member>
        <member name="M:SharpUtilities.Utility.UI.ConfirmBox(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Function to display a confirmation dialog.
            </summary>
            <param name="message">Message to display.</param>
            <param name="caption">Caption for the dialog.</param>
            <param name="allowCancel">TRUE to show a Cancel button, FALSE to hide.</param>
            <param name="allowToAll">TRUE to show a 'To all' option, FALSE to hide.</param>
            <returns>Any member of ConfirmationResult except ConfirmationResult.None.</returns>
        </member>
        <member name="M:SharpUtilities.Utility.UI.ConfirmBox(System.Windows.Forms.Form,System.String,System.Boolean,System.Boolean)">
            <summary>
            Function to display a confirmation dialog.
            </summary>
            <param name="owner">Owning window of this dialog.</param>
            <param name="message">Message to display.</param>
            <param name="allowCancel">TRUE to show a Cancel button, FALSE to hide.</param>
            <param name="allowToAll">TRUE to show a 'To all' option, FALSE to hide.</param>
            <returns>Any member of ConfirmationResult except ConfirmationResult.None.</returns>
        </member>
        <member name="M:SharpUtilities.Utility.UI.ConfirmBox(System.String,System.Boolean,System.Boolean)">
            <summary>
            Function to display a confirmation dialog.
            </summary>
            <param name="message">Message to display.</param>
            <param name="allowCancel">TRUE to show a Cancel button, FALSE to hide.</param>
            <param name="allowToAll">TRUE to show a 'To all' option, FALSE to hide.</param>
            <returns>Any member of ConfirmationResult except ConfirmationResult.None.</returns>
        </member>
        <member name="M:SharpUtilities.Utility.UI.ConfirmBox(System.Windows.Forms.Form,System.String,System.String,System.Boolean)">
            <summary>
            Function to display a confirmation dialog.
            </summary>
            <param name="owner">Owning window of this dialog.</param>
            <param name="message">Message to display.</param>
            <param name="caption">Caption for the dialog.</param>
            <param name="allowCancel">TRUE to show a Cancel button, FALSE to hide.</param>
            <returns>Any member of ConfirmationResult except ConfirmationResult.None.</returns>
        </member>
        <member name="M:SharpUtilities.Utility.UI.ConfirmBox(System.Windows.Forms.Form,System.String,System.String)">
            <summary>
            Function to display a confirmation dialog.
            </summary>
            <param name="owner">Owning window of this dialog.</param>
            <param name="message">Message to display.</param>
            <param name="caption">Caption for the dialog.</param>
            <returns>Any member of ConfirmationResult except ConfirmationResult.None.</returns>
        </member>
        <member name="M:SharpUtilities.Utility.UI.ConfirmBox(System.Windows.Forms.Form,System.String)">
            <summary>
            Function to display a confirmation dialog.
            </summary>
            <param name="owner">Owning window of this dialog.</param>
            <param name="message">Message to display.</param>
            <returns>Any member of ConfirmationResult except ConfirmationResult.None.</returns>
        </member>
        <member name="M:SharpUtilities.Utility.UI.ConfirmBox(System.String)">
            <summary>
            Function to display a confirmation dialog.
            </summary>
            <param name="message">Message to display.</param>
            <returns>Any member of ConfirmationResult except ConfirmationResult.None.</returns>
        </member>
        <member name="M:SharpUtilities.Utility.UI.AbortRetryBox(System.String,System.String)">
            <summary>
            Function to display an error box.
            </summary>
            <param name="message">Message to display.</param>
            <param name="caption">Caption for the dialog.</param>
        </member>
        <member name="M:SharpUtilities.Utility.UI.AbortRetryBox(System.String)">
            <summary>
            Function to display an error box.
            </summary>
            <param name="message">Message to display.</param>
        </member>
        <member name="M:SharpUtilities.Utility.UI.ErrorRetryBox(System.String,System.String)">
            <summary>
            Function to display an error box.
            </summary>
            <param name="message">Message to display.</param>
            <param name="caption">Caption for the dialog.</param>
            <returns>TRUE if Retry clicked, FALSE if cancelled.</returns>
        </member>
        <member name="M:SharpUtilities.Utility.UI.ErrorRetryBox(System.String)">
            <summary>
            Function to display an error box.
            </summary>
            <param name="message">Message to display.</param>
            <returns>TRUE if Retry clicked, FALSE if cancelled.</returns>
        </member>
        <member name="M:SharpUtilities.Utility.UI.InfoBox(System.String,System.String)">
            <summary>
            Function to display an information box.
            </summary>
            <param name="message">Message to display.</param>
            <param name="caption">Caption for the dialog.</param>
        </member>
        <member name="M:SharpUtilities.Utility.UI.InfoBox(System.String)">
            <summary>
            Function to display an information box.
            </summary>
            <param name="message">Message to display.</param>
        </member>
        <member name="M:SharpUtilities.Utility.UI.WarningBox(System.String,System.String)">
            <summary>
            Function to display a warning box.
            </summary>
            <param name="message">Message to display.</param>
            <param name="caption">Caption for the dialog.</param>
        </member>
        <member name="M:SharpUtilities.Utility.UI.WarningBox(System.String)">
            <summary>
            Function to display a warning box.
            </summary>
            <param name="message">Message to display.</param>
        </member>
        <member name="M:SharpUtilities.Utility.UI.WarningRetryBox(System.String,System.String)">
            <summary>
            Function to display a warning box.
            </summary>
            <param name="message">Message to display.</param>
            <param name="caption">Caption for the dialog.</param>
            <returns>TRUE if Retry clicked, FALSE if cancelled.</returns>
        </member>
        <member name="M:SharpUtilities.Utility.UI.WarningRetryBox(System.String)">
            <summary>
            Function to display a warning box.
            </summary>
            
            <param name="message">Message to display.</param>
            <returns>TRUE if Retry clicked, FALSE if cancelled.</returns>
        </member>
        <member name="M:SharpUtilities.Utility.UI.OKCancelBox(System.String,System.String)">
            <summary>
            Function to display a confirmation box.
            </summary>
            <param name="message">Message to display.</param>
            <param name="caption">Caption for the dialog.</param>
            <returns>TRUE if OK is clicked, FALSE if cancel is clicked.</returns>
        </member>
        <member name="M:SharpUtilities.Utility.UI.OkCancelBox(System.String)">
            <summary>
            Function to display a confirmation box.
            </summary>
            <param name="message">Message to display.</param>
            <returns>TRUE if yes is clicked, FALSE if no is clicked.</returns>
        </member>
        <member name="T:SharpUtilities.Native.Win32.NEWTEXTMETRIC">
            <summary>
            Structure containing text metric data.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.NEWTEXTMETRIC.tmHeight">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.NEWTEXTMETRIC.tmAscent">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.NEWTEXTMETRIC.tmDescent">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.NEWTEXTMETRIC.tmInternalLeading">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.NEWTEXTMETRIC.tmExternalLeading">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.NEWTEXTMETRIC.tmAveCharWidth">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.NEWTEXTMETRIC.tmMaxCharWidth">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.NEWTEXTMETRIC.tmWeight">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.NEWTEXTMETRIC.tmOverhang">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.NEWTEXTMETRIC.tmDigitizedAspectX">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.NEWTEXTMETRIC.tmDigitizedAspectY">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.NEWTEXTMETRIC.tmFirstChar">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.NEWTEXTMETRIC.tmLastChar">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.NEWTEXTMETRIC.tmDefaultChar">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.NEWTEXTMETRIC.tmBreakChar">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.NEWTEXTMETRIC.tmItalic">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.NEWTEXTMETRIC.tmUnderlined">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.NEWTEXTMETRIC.tmStruckOut">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.NEWTEXTMETRIC.tmPitchAndFamily">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.NEWTEXTMETRIC.tmCharSet">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.NEWTEXTMETRIC.ntmFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.NEWTEXTMETRIC.ntmSizeEM">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.NEWTEXTMETRIC.ntmCellHeight">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.NEWTEXTMETRIC.ntmAvgWidth">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.FONTSIGNATURE">
            <summary>
            Structure containing font signature data.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FONTSIGNATURE.fsUsb">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FONTSIGNATURE.fsCsb">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.NEWTEXTMETRICEX">
            <summary>
            Structure containing physical font data.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.NEWTEXTMETRICEX.ntmTm">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.NEWTEXTMETRICEX.ntmFontSig">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.ENUMLOGFONTEX">
            <summary>
            Structure containing logical font data for enumeration.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ENUMLOGFONTEX.elfLogFont">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ENUMLOGFONTEX.elfFullName">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ENUMLOGFONTEX.elfStyle">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ENUMLOGFONTEX.elfScript">
            <summary>
            
            </summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.LOGFONT">
            <summary>
            Structure that contains the logical properties of a font.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.LOGFONT.lfHeight">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.LOGFONT.lfWidth">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.LOGFONT.lfEscapement">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.LOGFONT.lfOrientation">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.LOGFONT.lfWeight">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.LOGFONT.lfItalic">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.LOGFONT.lfUnderline">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.LOGFONT.lfStrikeOut">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.LOGFONT.lfCharSet">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.LOGFONT.lfOutPrecision">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.LOGFONT.lfClipPrecision">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.LOGFONT.lfQuality">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.LOGFONT.lfPitchAndFamily">
            <summary>
            
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.LOGFONT.lfFaceName">
            <summary>
            
            </summary>
        </member>
        <member name="M:SharpUtilities.Native.Win32.LOGFONT.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="T:SharpUtilities.Native.Win32.SHFILEINFO">
            <summary>
            Value type containing shell file information.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SHFILEINFO.IconHandle">
            <summary>
            Icon handle.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SHFILEINFO.IconIndex">
            <summary>
            Index of the icon image within the system image list. 
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SHFILEINFO.Attributes">
            <summary>
            Attributes.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SHFILEINFO.DisplayName">
            <summary>
            Display name.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SHFILEINFO.Type">
            <summary>
            File type.
            </summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.JOYINFO">
            <summary>
            Value type containing joystick position information.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JOYINFO.X">
            <summary>X axis.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JOYINFO.Y">
            <summary>Y axis.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JOYINFO.Z">
            <summary>Z axis.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JOYINFO.Buttons">
            <summary>State of buttons.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.JOYINFOEX">
            <summary>
            Value type containing joystick position information.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JOYINFOEX.Size">
            <summary>Size of structure, in bytes.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JOYINFOEX.Flags">
            <summary>Flags to indicate what information is valid for the device.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JOYINFOEX.X">
            <summary>X axis.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JOYINFOEX.Y">
            <summary>Y axis.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JOYINFOEX.Z">
            <summary>Z axis.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JOYINFOEX.Rudder">
            <summary>Rudder position.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JOYINFOEX.Axis5">
            <summary>5th axis position.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JOYINFOEX.Axis6">
            <summary>6th axis position.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JOYINFOEX.Buttons">
            <summary>State of buttons.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JOYINFOEX.ButtonNumber">
            <summary>Currently pressed button.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JOYINFOEX.POV">
            <summary>Angle of the POV hat, in degrees (0 - 35900, divide by 100 to get 0 - 359 degrees.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JOYINFOEX.Reserved1">
            <summary>Reserved.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JOYINFOEX.Reserved2">
            <summary>Reserved.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.JOYCAPS">
            <summary>
            Value type containing joystick capabilities.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JOYCAPS.ManufacturerID">
            <summary>Manufacturer ID.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JOYCAPS.ProductID">
            <summary>Product ID.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JOYCAPS.Name">
            <summary>Joystick name.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JOYCAPS.MinimumX">
            <summary>Minimum X coordinate.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JOYCAPS.MaximumX">
            <summary>Maximum X coordinate.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JOYCAPS.MinimumY">
            <summary>Minimum Y coordinate.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JOYCAPS.MaximumY">
            <summary>Maximum Y coordinate.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JOYCAPS.MinimumZ">
            <summary>Minimum Z coordinate.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JOYCAPS.MaximumZ">
            <summary>Maximum Z coordinate.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JOYCAPS.ButtonCount">
            <summary>Number of buttons on the joystick.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JOYCAPS.MinimumPollingFrequency">
            <summary>Smallest polling frequency (used by joySetCapture).</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JOYCAPS.MaximumPollingFrequency">
            <summary>Largest polling frequency (used by joySetCapture).</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JOYCAPS.MinimumRudder">
            <summary>Minimum rudder value.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JOYCAPS.MaximumRudder">
            <summary>Maximum rudder value.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JOYCAPS.Axis5Minimum">
            <summary>Minimum 5th axis value.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JOYCAPS.Axis5Maximum">
            <summary>Maximum 5th axis value.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JOYCAPS.Axis6Minimum">
            <summary>Minimum 6th axis value.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JOYCAPS.Axis6Maximum">
            <summary>Maximum 6th axis value.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JOYCAPS.Capabilities">
            <summary>Joystick capabilities.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JOYCAPS.MaximumAxes">
            <summary>Maxmimum number of axes for the joystick.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JOYCAPS.AxisCount">
            <summary>Number of axes on the joystick.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JOYCAPS.MaximumButtons">
            <summary>Maximum buttons for the device.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JOYCAPS.RegistryKey">
            <summary>Registry key for the joystick.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.JOYCAPS.DriverName">
            <summary>Driver name for the joystick.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.RAWINPUTDEVICELIST">
            <summary>
            Value type for raw input device list.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTDEVICELIST.Device">
            <summary>Device handle.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTDEVICELIST.DeviceType">
            <summary>Device type.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.RAWINPUTDEVICEINFO">
            <summary>
            Value type for raw input device information.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTDEVICEINFO.Size">
            <summary>Size in bytes of this structure.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTDEVICEINFO.DeviceType">
            <summary>Type of device.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTDEVICEINFO.Mouse">
            <summary>Data for a mouse device.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTDEVICEINFO.Keyboard">
            <summary>Data for a keyboard device.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTDEVICEINFO.HID">
            <summary>Data for a HID.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.RAWINPUTMOUSEINFO">
            <summary>
            Value type for mouse device information.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTMOUSEINFO.ID">
            <summary>ID of the device.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTMOUSEINFO.NumberOfButtons">
            <summary>Number of buttons on the mouse.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTMOUSEINFO.SamplingRate">
            <summary>Number of data points per second.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.RAWINPUTKEYBOARDINFO">
            <summary>
            Value type for keyboard device information.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTKEYBOARDINFO.Type">
            <summary>Type of keyboard.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTKEYBOARDINFO.SubType">
            <summary>Sub type identifier of the keyboard.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTKEYBOARDINFO.Mode">
            <summary>Scan code mode.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTKEYBOARDINFO.FunctionKeyCount">
            <summary>Number of function keys.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTKEYBOARDINFO.IndicatorCount">
            <summary>Number of indicators.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTKEYBOARDINFO.KeyCount">
            <summary>Total number of keys.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.RAWINPUTHIDINFO">
            <summary>
            Value type for HID device information.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTHIDINFO.VendorID">
            <summary>ID of the device vendor.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTHIDINFO.ProductID">
            <summary>ID of the product.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTHIDINFO.Version">
            <summary>Version of the device.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTHIDINFO.UsagePage">
            <summary>Usage page.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTHIDINFO.Usage">
            <summary>Usage type.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.RAWINPUTDEVICE">
            <summary>
            Value type for raw input devices.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTDEVICE.UsagePage">
            <summary>Top level collection Usage page for the raw input device.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTDEVICE.Usage">
            <summary>Top level collection Usage for the raw input device. </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTDEVICE.Flags">
            <summary>Mode flag that specifies how to interpret the information provided by UsagePage and Usage.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTDEVICE.WindowHandle">
            <summary>Handle to the target device. If NULL, it follows the keyboard focus.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.RAWINPUTHEADER">
            <summary>
            Value type for a raw input header.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTHEADER.Type">
            <summary>Type of device the input is coming from.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTHEADER.Size">
            <summary>Size of the packet of data.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTHEADER.Device">
            <summary>Handle to the device sending the data.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTHEADER.wParam">
            <summary>wParam from the window message.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.RAWINPUTMOUSE">
            <summary>
            Value type for raw input from a mouse.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTMOUSE.Flags">
            <summary>Flags for the event.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTMOUSE.ButtonFlags">
            <summary>Flags for the event.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTMOUSE.ButtonData">
            <summary>If the mouse wheel is moved, this will contain the delta amount.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTMOUSE.RawButtons">
            <summary>Raw button data.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTMOUSE.LastX">
            <summary>Relative direction of motion, depending on flags.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTMOUSE.LastY">
            <summary>Relative direction of motion, depending on flags.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTMOUSE.ExtraInformation">
            <summary>Extra information.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.RAWINPUTKEYBOARD">
            <summary>
            Value type for raw input from a keyboard.
            </summary>	
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTKEYBOARD.MakeCode">
            <summary>Scan code for key depression.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTKEYBOARD.Flags">
            <summary>Scan code information.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTKEYBOARD.Reserved">
            <summary>Reserved.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTKEYBOARD.VirtualKey">
            <summary>Virtual key code.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTKEYBOARD.Message">
            <summary>Corresponding window message.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTKEYBOARD.ExtraInformation">
            <summary>Extra information.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.RAWINPUTHID">
            <summary>
            Value type for raw input from a HID.
            </summary>	
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTHID.Size">
            <summary>Size of the HID data in bytes.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTHID.Count">
            <summary>Number of HID in Data.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTHID.Data">
            <summary>Data for the HID.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.RAWINPUT">
            <summary>
            Value type for raw input.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUT.Header">
            <summary>Header for the data.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUT.Mouse">
            <summary>Mouse raw input data.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUT.Keyboard">
            <summary>Keyboard raw input data.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUT.HID">
            <summary>HID raw input data.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.RAWINPUTx64">
            <summary>
            Value type for raw input.
            </summary>
            <remarks>This is for use with x64 versions of windows.  Using the <c ref="RAWINPUT">32 bit RAWINPUT</c> will fail on the x64 version of windows.</remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTx64.Header">
            <summary>Header for the data.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTx64.Mouse">
            <summary>Mouse raw input data.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTx64.Keyboard">
            <summary>Keyboard raw input data.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RAWINPUTx64.HID">
            <summary>HID raw input data.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.ABCFloat">
            <summary>
            Value type containing character width information.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ABCFloat.A">
            <summary>Specifies the A spacing of the character. The A spacing is the distance to add to the current position before drawing the character glyph.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ABCFloat.B">
            <summary>Specifies the B spacing of the character. The B spacing is the width of the drawn portion of the character glyph.</summary>		
        </member>
        <member name="F:SharpUtilities.Native.Win32.ABCFloat.C">
            <summary>Specifies the C spacing of the character. The C spacing is the distance to add to the current position to provide white space to the right of the character glyph.</summary>		
        </member>
        <member name="M:SharpUtilities.Native.Win32.ABCFloat.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Constructor.
            </summary>
            <param name="a">Specifies the A spacing of the character. The A spacing is the distance to add to the current position before drawing the character glyph.</param>
            <param name="b">Specifies the B spacing of the character. The B spacing is the width of the drawn portion of the character glyph.</param>
            <param name="c">Specifies the C spacing of the character. The C spacing is the distance to add to the current position to provide white space to the right of the character glyph.</param>
        </member>
        <member name="T:SharpUtilities.Native.Win32.ABC">
            <summary>
            Value type containing character width information.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ABC.A">
            <summary>Specifies the A spacing of the character. The A spacing is the distance to add to the current position before drawing the character glyph.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.ABC.B">
            <summary>Specifies the B spacing of the character. The B spacing is the width of the drawn portion of the character glyph.</summary>		
        </member>
        <member name="F:SharpUtilities.Native.Win32.ABC.C">
            <summary>Specifies the C spacing of the character. The C spacing is the distance to add to the current position to provide white space to the right of the character glyph.</summary>		
        </member>
        <member name="M:SharpUtilities.Native.Win32.ABC.#ctor(System.Int32,System.UInt32,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="a">Specifies the A spacing of the character. The A spacing is the distance to add to the current position before drawing the character glyph.</param>
            <param name="b">Specifies the B spacing of the character. The B spacing is the width of the drawn portion of the character glyph.</param>
            <param name="c">Specifies the C spacing of the character. The C spacing is the distance to add to the current position to provide white space to the right of the character glyph.</param>
        </member>
        <member name="T:SharpUtilities.Native.Win32.WNDCLASSEX">
            <summary>
            Value type for window class information.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WNDCLASSEX.cbSize">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WNDCLASSEX.style">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WNDCLASSEX.lpfnWndProc">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WNDCLASSEX.cbClsExtra">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WNDCLASSEX.cbWndExtra">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WNDCLASSEX.hInstance">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WNDCLASSEX.hIcon">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WNDCLASSEX.hCursor">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WNDCLASSEX.hbrBackground">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WNDCLASSEX.lpszMenuName">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WNDCLASSEX.lpszClassName">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WNDCLASSEX.hIconSm">
            <summary></summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.DEVMODE">
            <summary>
            Value type for device mode information.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.DEVMODE.dmDeviceName">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.DEVMODE.dmSpecVersion">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.DEVMODE.dmDriverVersion">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.DEVMODE.dmSize">
            <summary></summary>        
        </member>
        <member name="F:SharpUtilities.Native.Win32.DEVMODE.dmDriverExtra">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.DEVMODE.dmFields">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.DEVMODE.dmOrientation">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.DEVMODE.dmPaperSize">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.DEVMODE.dmPaperLength">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.DEVMODE.dmPaperWidth">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.DEVMODE.dmScale">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.DEVMODE.dmCopies">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.DEVMODE.dmDefaultSource">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.DEVMODE.dmPrintQuality">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.DEVMODE.dmColor">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.DEVMODE.dmDuplex">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.DEVMODE.dmYResolution">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.DEVMODE.dmTTOption">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.DEVMODE.dmCollate">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.DEVMODE.dmFormName">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.DEVMODE.dmLogPixels">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.DEVMODE.dmBitsPerPel">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.DEVMODE.dmPelsWidth">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.DEVMODE.dmPelsHeight">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.DEVMODE.dmDisplayFlags">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.DEVMODE.dmDisplayFrequency">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.DEVMODE.dmICMMethod">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.DEVMODE.dmICMIntent">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.DEVMODE.dmMediaType">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.DEVMODE.dmDitherType">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.DEVMODE.dmReserved1">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.DEVMODE.dmReserved2">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.DEVMODE.dmPanningWidth">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.DEVMODE.dmPanningHeight">
            <summary></summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.WINDOWINFO">
            <summary>
            Value type for window information.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WINDOWINFO.cbSize">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WINDOWINFO.rcWindow">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WINDOWINFO.rcClient">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WINDOWINFO.dwStyle">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WINDOWINFO.dwExStyle">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WINDOWINFO.dwWindowStatus">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WINDOWINFO.cxWindowBorders">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WINDOWINFO.cyWindowBorders">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WINDOWINFO.atomWindowtype">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WINDOWINFO.wCreatorVersion">
            <summary></summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.WINDOWPLACEMENT">
            <summary>
            Value type for window placement information.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WINDOWPLACEMENT.length">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WINDOWPLACEMENT.flags">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WINDOWPLACEMENT.showCmd">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WINDOWPLACEMENT.ptMinPosition">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WINDOWPLACEMENT.ptMaxPosition">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WINDOWPLACEMENT.rcNormalPosition">
            <summary></summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.RECT">
            <summary>
            Value type for a rectangle.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RECT.Left">
            <summary>
            Left position of the rectangle.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RECT.Top">
            <summary>
            Top position of the rectangle.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RECT.Right">
            <summary>
            Right position of the rectangle.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.RECT.Bottom">
            <summary>
            Bottom position of the rectangle.
            </summary>
        </member>
        <member name="M:SharpUtilities.Native.Win32.RECT.op_Implicit(SharpUtilities.Native.Win32.RECT)~System.Drawing.Rectangle">
            <summary>
            Operator to convert a RECT to Drawing.Rectangle.
            </summary>
            <param name="rect">Rectangle to convert.</param>
            <returns>A Drawing.Rectangle</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.RECT.op_Implicit(System.Drawing.Rectangle)~SharpUtilities.Native.Win32.RECT">
            <summary>
            Operator to convert Drawing.Rectangle to a RECT.
            </summary>
            <param name="rect">Rectangle to convert.</param>
            <returns>RECT rectangle.</returns>
        </member>
        <member name="M:SharpUtilities.Native.Win32.RECT.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="left">Horizontal position.</param>
            <param name="top">Vertical position.</param>
            <param name="right">Right most side.</param>
            <param name="bottom">Bottom most side.</param>
        </member>
        <member name="T:SharpUtilities.Native.Win32.POINT">
            <summary>
            Value type for a point.
            </summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.POINT.x">
            <summary></summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.POINT.y">
            <summary></summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.MSLLHOOKSTRUCT">
            <summary>
            Value type representing the mouse data hook.
            </summary>
            <remarks>See the MSDN documentation for more detail.</remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.MSLLHOOKSTRUCT.Point">
            <summary>Mouse position.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.MSLLHOOKSTRUCT.MouseData">
            <summary>Mouse information.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.MSLLHOOKSTRUCT.Flags">
            <summary>Flags.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.MSLLHOOKSTRUCT.Time">
            <summary>Time of event.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.MSLLHOOKSTRUCT.ExtraInfo">
            <summary>Extra event info.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.COORD">
            <summary>
            Value type representing coordinates in a console buffer.
            </summary>
            <remarks>See the MSDN documentation for more detail.</remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.COORD.X">
            <summary>Horizontal position.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.COORD.Y">
            <summary>Vertical position.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.MSG">
            <summary>
            Value type representing a Window message.
            </summary>
            <remarks>
            See the MSDN documentation for more detail.
            <para>
            Used to pass various messages back and forth between the OS and the app.
            </para>
            </remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.MSG.hwnd">
            <summary>Window handle.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.MSG.Message">
            <summary>Message to process.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.MSG.wParam">
            <summary>Window message parameter 1.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.MSG.lParam">
            <summary>Window message parameter 2.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.MSG.time">
            <summary>Time message was sent?</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.MSG.pt">
            <summary>Mouse pointer position.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.SMALL_RECT">
            <summary>
            Value type to represent a rectangle with limited range.
            </summary>
            <remarks>See the MSDN documentation for more detail.</remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SMALL_RECT.Left">
            <summary>Left position.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SMALL_RECT.Top">
            <summary>Top position.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SMALL_RECT.Right">
            <summary>Right position.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.SMALL_RECT.Bottom">
            <summary>Bottom position.</summary>
        </member>
        <member name="M:SharpUtilities.Native.Win32.SMALL_RECT.#ctor(System.Int16,System.Int16,System.Int16,System.Int16)">
            <summary>
            Constructor.
            </summary>
            <param name="left">Left position.</param>			
            <param name="top">Top position.</param>
            <param name="right">Right position.</param>
            <param name="bottom">Bottom position.</param>
        </member>
        <member name="T:SharpUtilities.Native.Win32.CONSOLE_CHAR">
            <summary>
            Value type used for character types from the console.
            </summary>
            <remarks>See the MSDN documentation for more detail.</remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.CONSOLE_CHAR.UnicodeChar">
            <summary>Unicode character.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.CONSOLE_CHAR.AnsiChar">
            <summary>ANSI character.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.CHAR_INFO">
            <summary>
            Value type used for character information within a console window.
            </summary>
            <remarks>See the MSDN documentation for more detail.</remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.CHAR_INFO.Char">
            <summary>Character.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.CHAR_INFO.Attributes">
            <summary>Attributes for the character.</summary>
        </member>
        <member name="M:SharpUtilities.Native.Win32.CHAR_INFO.#ctor(System.Char,System.UInt16)">
            <summary>
            Constructor.
            </summary>
            <param name="character">Character.</param>
            <param name="attribs">Attribute.</param>
        </member>
        <member name="T:SharpUtilities.Native.Win32.CONSOLE_SCREEN_BUFFER_INFO">
            <summary>
            Value type used in obtaining or setting console buffer information.
            </summary>
            <remarks>See the MSDN documentation for more detail.</remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.CONSOLE_SCREEN_BUFFER_INFO.dwSize">
            <summary>Size of the buffer in columns x rows.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.CONSOLE_SCREEN_BUFFER_INFO.dwCursorPosition">
            <summary>Position of the cursor in columns x rows.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.CONSOLE_SCREEN_BUFFER_INFO.wAttributes">
            <summary>Character attributes.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.CONSOLE_SCREEN_BUFFER_INFO.srWindow">
            <summary>Display window.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.CONSOLE_SCREEN_BUFFER_INFO.dwMaximumWindowSize">
            <summary>Maximum window size.</summary>
        </member>
        <member name="M:SharpUtilities.Native.Win32.CONSOLE_SCREEN_BUFFER_INFO.#ctor(SharpUtilities.Native.Win32.COORD,SharpUtilities.Native.Win32.COORD,System.Int16,SharpUtilities.Native.Win32.SMALL_RECT,SharpUtilities.Native.Win32.COORD)">
            <summary>
            Constructor.
            </summary>
            <param name="size">Size of the buffer in columns x rows.</param>
            <param name="cursorposition">Position of the cursor in columns x rows.</param>
            <param name="attributes">Character attributes.</param>
            <param name="window">Display window.</param>
            <param name="maxwindowsize">Maximum window size.</param>
        </member>
        <member name="T:SharpUtilities.Native.Win32.CONSOLE_CURSOR_INFO">
            <summary>
            Value type containing information about the console cursor.
            </summary>
            <remarks>See the MSDN documentation for more detail.</remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.CONSOLE_CURSOR_INFO.dwSize">
            <summary>Height of the cursor.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.CONSOLE_CURSOR_INFO.bVisible">
            <summary>TRUE for visible, FALSE for invisible.</summary>
        </member>
        <member name="M:SharpUtilities.Native.Win32.CONSOLE_CURSOR_INFO.#ctor(System.UInt32,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="size">Height of the cursor.</param>
            <param name="visible">TRUE for visible, FALSE for invisible.</param>
        </member>
        <member name="T:SharpUtilities.Native.Win32.KEY_EVENT_RECORD">
            <summary>
            Value type containing keyboard event data for the console.
            </summary>
            <remarks>See the MSDN documentation for more detail.</remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.KEY_EVENT_RECORD.bKeyDown">
            <summary>Flag to indicate that a key is down.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.KEY_EVENT_RECORD.wRepeatCount">
            <summary>Number of times the key has been repeated.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.KEY_EVENT_RECORD.wVirtualKeyCode">
            <summary>Virtual key code.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.KEY_EVENT_RECORD.wVirtualScanCode">
            <summary>Virtual scan code.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.KEY_EVENT_RECORD.Char">
            <summary>Character.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.KEY_EVENT_RECORD.dwControlKeyState">
            <summary>Control key state.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.MOUSE_EVENT_RECORD">
            <summary>
            Value type containing mouse event data for the console.
            </summary>
            <remarks>See the MSDN documentation for more detail.</remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.MOUSE_EVENT_RECORD.dwMousePosition">
            <summary>Mouse position.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.MOUSE_EVENT_RECORD.dwButtonState">
            <summary>Mouse button state.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.MOUSE_EVENT_RECORD.dwControlKeyState">
            <summary>Control key state.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.MOUSE_EVENT_RECORD.dwFlags">
            <summary>Event flags.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.WINDOW_BUFFER_SIZE_RECORD">
            <summary>
            Value type containing event information about buffer resizing.
            </summary>
            <remarks>See the MSDN documentation for more detail.</remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.WINDOW_BUFFER_SIZE_RECORD.dwSize">
            <summary>Size of buffer.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.MENU_EVENT_RECORD">
            <summary>
            Value type containing event info about menu clicks.
            </summary>
            <remarks>See the MSDN documentation for more detail.</remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.MENU_EVENT_RECORD.dwCommandId">
            <summary>Menu item selected.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.FOCUS_EVENT_RECORD">
            <summary>
            Value type containing event info about focus changes.
            </summary>
            <remarks>See the MSDN documentation for more detail.</remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.FOCUS_EVENT_RECORD.bSetFocus">
            <summary>Flag to indicate whether focus has been given or not.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.INPUT_RECORD_EVENT_UNION">
            <summary>
            Value type representing a union for events.
            </summary>
            <remarks>See the MSDN documentation for more detail.</remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.INPUT_RECORD_EVENT_UNION.WindowBufferSizeEvent">
            <summary>Window buffer size event.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.INPUT_RECORD_EVENT_UNION.MenuEvent">
            <summary>Menu click event.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.INPUT_RECORD_EVENT_UNION.FocusEvent">
            <summary>Focus change event.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.INPUT_RECORD_EVENT_UNION.KeyEvent">
            <summary>Keyboard event.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.INPUT_RECORD_EVENT_UNION.MouseEvent">
            <summary>Mouse event.</summary>
        </member>
        <member name="T:SharpUtilities.Native.Win32.INPUT_RECORD">
            <summary>
            Value type containing information for input events in the console.
            </summary>
            <remarks>See the MSDN documentation for more detail.</remarks>
        </member>
        <member name="F:SharpUtilities.Native.Win32.INPUT_RECORD.EventType">
            <summary>Event type.</summary>
        </member>
        <member name="F:SharpUtilities.Native.Win32.INPUT_RECORD.Event">
            <summary>Event data.</summary>
        </member>
        <member name="T:SharpUtilities.Mathematics.Quaternion">
            <summary>
            A value type representing a quaternion.
            </summary>
            <remarks>
            A quaternion is a 4 dimensional complex number.  It is often used in 3D graphics to
            represent a rotation.  It has an advantage over Euler angles in that it gets around
            a flaw called Gimbal Lock whereby an axis "locks" and rotation is impossible around
            that axis (there are better explanations at wikipedia).
            </remarks>
        </member>
        <member name="F:SharpUtilities.Mathematics.Quaternion.W">
            <summary>
            Scalar component for quaternion.
            </summary>
        </member>
        <member name="F:SharpUtilities.Mathematics.Quaternion.X">
            <summary>
            X component for quaternion.
            </summary>
        </member>
        <member name="F:SharpUtilities.Mathematics.Quaternion.Y">
            <summary>
            Y component for quaternion.
            </summary>
        </member>
        <member name="F:SharpUtilities.Mathematics.Quaternion.Z">
            <summary>
            Z component for quaternion.		
            </summary>
        </member>
        <member name="M:SharpUtilities.Mathematics.Quaternion.Add(SharpUtilities.Mathematics.Quaternion,SharpUtilities.Mathematics.Quaternion)">
            <summary>
            Function to add two quaternions together.
            </summary>
            <param name="left">Left value to add.</param>
            <param name="right">Right value to add.</param>
            <returns>Total of both Quaternion.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Quaternion.Subtract(SharpUtilities.Mathematics.Quaternion,SharpUtilities.Mathematics.Quaternion)">
            <summary>
            Function to subtract two quaternions.
            </summary>
            <param name="left">Left value to subtract.</param>
            <param name="right">Right value to subtract.</param>
            <returns>Difference between both Quaternion.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Quaternion.Negate(SharpUtilities.Mathematics.Quaternion)">
            <summary>
            Function to negate a quaternion.
            </summary>
            <param name="qvalue">Quaternion to negate.</param>
            <returns>A negative quaternion.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Quaternion.Multiply(SharpUtilities.Mathematics.Quaternion,SharpUtilities.Mathematics.Quaternion)">
            <summary>
            Function to multiply two quaternions together.
            </summary>
            <param name="left">Left value to multiply.</param>
            <param name="right">Right value to multiply.</param>
            <returns>Product of the two quaternions.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Quaternion.Multiply(System.Single,SharpUtilities.Mathematics.Quaternion)">
            <summary>
            Function to multiply a quaternion by a scalar value.
            </summary>
            <param name="scalar">Value to multiply with.</param>
            <param name="right">Quaternion to multiply with.</param>
            <returns>Scaled quaternion.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Quaternion.Multiply(SharpUtilities.Mathematics.Quaternion,System.Single)">
            <summary>
            Function to multiply a quaternion by a scalar value.
            </summary>
            <param name="left">Quaternion to multiply with.</param>
            <param name="scalar">Value to multiply with.</param>/// 
            <returns>Scaled quaternion.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Quaternion.Multiply(SharpUtilities.Mathematics.Quaternion,SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Function to multiply a quaternion by a 3D vector.
            </summary>
            <param name="q">Quaternion to multiply.</param>
            <param name="vector">Vector to multiply by.</param>
            <returns>A new vector with the product of the quaternion and the vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Quaternion.Divide(SharpUtilities.Mathematics.Quaternion,System.Single)">
            <summary>
            Function to divide a quaternion by a scalar value.
            </summary>
            <param name="left">Quaternion to divide.</param>
            <param name="scalar">Scalar to divide by.</param>
            <returns>Divided quaternion.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Quaternion.FromAxisAngle(System.Single,SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Function to create a quaternion from an angle and an axis.
            </summary>
            <param name="angle">Angle in degrees.</param>
            <param name="axis">Axis to use.</param>
            <returns>A new quaternion.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Quaternion.SLERP(System.Single,SharpUtilities.Mathematics.Quaternion,SharpUtilities.Mathematics.Quaternion,System.Boolean)">
            <summary>
            Function to calculate the spherical linear interpolation between two quaternions.
            </summary>
            <param name="time">Time to retrieve quaternion at.</param>
            <param name="q1">Starting quaternion.</param>
            <param name="q2">Ending quaternion.</param>
            <param name="optimizepath">TRUE to use the shortest path, FALSE otherwise.</param>
            <returns>Quaternion rotation at time specified.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Quaternion.SQUAD(System.Single,SharpUtilities.Mathematics.Quaternion,SharpUtilities.Mathematics.Quaternion,SharpUtilities.Mathematics.Quaternion,SharpUtilities.Mathematics.Quaternion,System.Boolean)">
            <summary>
            Function to calculate spherical quadratic interpolation.
            </summary>
            <param name="time">Time to retrieve quaternion at.</param>
            <param name="q1">Quaternion start.</param>
            <param name="q2">Quaternion point 2.</param>
            <param name="q3">Quaternion point 3.</param>
            <param name="q4">Quaternion end.</param>
            <param name="optimizepath">TRUE to use shortest path, FALSE otherwise.</param>
            <returns>Quaternion rotation at time specified.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Quaternion.SQUAD(System.Single,SharpUtilities.Mathematics.Quaternion,SharpUtilities.Mathematics.Quaternion,SharpUtilities.Mathematics.Quaternion,SharpUtilities.Mathematics.Quaternion)">
            <summary>
            Function to calculate spherical quadratic interpolation.
            </summary>
            <param name="time">Time to retrieve quaternion at.</param>
            <param name="q1">Quaternion start.</param>
            <param name="q2">Quaternion point 2.</param>
            <param name="q3">Quaternion point 3.</param>
            <param name="q4">Quaternion end.</param>
            <returns>Quaternion rotation at time specified.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Quaternion.SLERP(System.Single,SharpUtilities.Mathematics.Quaternion,SharpUtilities.Mathematics.Quaternion)">
            <summary>
            Function to calculate the spherical linear interpolation between two quaternions.
            </summary>
            <param name="time">Time to retrieve quaternion at.</param>
            <param name="q1">Starting quaternion.</param>
            <param name="q2">Ending quaternion.</param>
            <returns>Quaternion rotation at time specified.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Quaternion.Equals(System.Object)">
            <summary>
            Function to compare this object with another and see if they're the same type.
            </summary>
            <param name="obj">Object to compare</param>
            <returns>TRUE if object is the same as this one.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Quaternion.ToString">
            <summary>
            Function to return the string representation of this object.
            </summary>
            <returns>A string containing info about this quaternion.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Quaternion.GetHashCode">
            <summary>
            Function to return the hash code for this object.
            </summary>
            <returns>New hash object.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Quaternion.DotProduct(SharpUtilities.Mathematics.Quaternion)">
            <summary>
            Function to retrieve the dot product between this and another quaternion.
            </summary>
            <param name="q">Quaternion to get the dot product with.</param>
            <returns>Dot product between the two quaternions.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Quaternion.Normalize">
            <summary>
            Function to normalize the quaternion.
            </summary>
        </member>
        <member name="M:SharpUtilities.Mathematics.Quaternion.RotateEuler(System.Single,System.Single,System.Single)">
            <summary>
            Function to do a rotation about Euler angles.
            </summary>
            <param name="yaw">Rotation around the Y axis.</param>		
            <param name="pitch">Rotation around the X axis.</param>		
            <param name="roll">Rotation around the Z axis.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.Quaternion.FromRotationMatrix(SharpUtilities.Mathematics.Matrix)">
            <summary>
            Function to get values from a rotation matrix.
            </summary>
            <param name="matrix">Matrix to extract quaternion from.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.Quaternion.FromAxes(SharpUtilities.Mathematics.Vector3D,SharpUtilities.Mathematics.Vector3D,SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Function to extract quaternion from axis vector values.
            </summary>
            <param name="x">X axis.</param>
            <param name="y">Y axis.</param>
            <param name="z">Z axis.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.Quaternion.ToAngleAxis(System.Single@,SharpUtilities.Mathematics.Vector3D@)">
            <summary>
            Function to convert the quaternion to an angle and an axis.
            </summary>
            <param name="angle">Angle in degrees.</param>
            <param name="axis">Axis for rotation.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.Quaternion.ToAxes(SharpUtilities.Mathematics.Vector3D@,SharpUtilities.Mathematics.Vector3D@,SharpUtilities.Mathematics.Vector3D@)">
            <summary>
            Function to convert the quaternion to rotation axes.
            </summary>
            <param name="x">Rotation about X axis.</param>
            <param name="y">Rotation about Y axis.</param>
            <param name="z">Rotation about Z axis.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.Quaternion.op_Equality(SharpUtilities.Mathematics.Quaternion,SharpUtilities.Mathematics.Quaternion)">
            <summary>
            Operator to test for equality between two quaternions.
            </summary>
            <param name="left">Left quaternion value.</param>
            <param name="right">Right quaternion value.</param>
            <returns>TRUE if equal, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Quaternion.op_Inequality(SharpUtilities.Mathematics.Quaternion,SharpUtilities.Mathematics.Quaternion)">
            <summary>
            Operator to test for inequality between two quaternions.
            </summary>
            <param name="left">Left quaternion value.</param>
            <param name="right">Right quaternion value.</param>
            <returns>TRUE if not equal, FALSE if they are.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Quaternion.op_Addition(SharpUtilities.Mathematics.Quaternion,SharpUtilities.Mathematics.Quaternion)">
            <summary>
            Operator to add two quaternions together.
            </summary>
            <param name="left">Left value to add.</param>
            <param name="right">Right value to add.</param>
            <returns>Total of both Quaternion.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Quaternion.op_Subtraction(SharpUtilities.Mathematics.Quaternion,SharpUtilities.Mathematics.Quaternion)">
            <summary>
            Operator to subtract two quaternions.
            </summary>
            <param name="left">Left value to subtract.</param>
            <param name="right">Right value to subtract.</param>
            <returns>Difference between both Quaternion.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Quaternion.op_UnaryNegation(SharpUtilities.Mathematics.Quaternion)">
            <summary>
            Operator to negate a quaternion.
            </summary>
            <param name="qvalue">Quaternion to negate.</param>
            <returns>A negative quaternion.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Quaternion.op_Multiply(SharpUtilities.Mathematics.Quaternion,SharpUtilities.Mathematics.Quaternion)">
            <summary>
            Operator to multiply two quaternions together.
            </summary>
            <param name="left">Left value to multiply.</param>
            <param name="right">Right value to multiply.</param>
            <returns>Product of the two quaternions.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Quaternion.op_Multiply(System.Single,SharpUtilities.Mathematics.Quaternion)">
            <summary>
            Operator to multiply a quaternion by a scalar value.
            </summary>
            <param name="scalar">Value to multiply with.</param>
            <param name="right">Quaternion to multiply with.</param>
            <returns>Scaled quaternion.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Quaternion.op_Multiply(SharpUtilities.Mathematics.Quaternion,System.Single)">
            <summary>
            Operator to multiply a quaternion by a scalar value.
            </summary>
            <param name="left">Quaternion to multiply with.</param>
            <param name="scalar">Value to multiply with.</param>/// 
            <returns>Scaled quaternion.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Quaternion.op_Multiply(SharpUtilities.Mathematics.Quaternion,SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Operator to multiply a quaternion by a 3D vector.
            </summary>
            <param name="q">Quaternion to multiply.</param>
            <param name="vector">Vector to multiply by.</param>
            <returns>A new vector with the product of the quaternion and the vector.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Quaternion.op_Division(SharpUtilities.Mathematics.Quaternion,System.Single)">
            <summary>
            Operator to divide a quaternion by a scalar value.
            </summary>
            <param name="left">Quaternion to divide.</param>
            <param name="scalar">Scalar to divide by.</param>
            <returns>Divided quaternion.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Quaternion.op_Implicit(SharpUtilities.Mathematics.Vector4D)~SharpUtilities.Mathematics.Quaternion">
            <summary>
            Operator to convert a 4D vector into a quaternion.
            </summary>
            <param name="vec">4D vector to convert.</param>
            <returns>Quaternion.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Quaternion.op_Implicit(SharpUtilities.Mathematics.Vector3D)~SharpUtilities.Mathematics.Quaternion">
            <summary>
            Operator to convert a 3D vector into a quaternion.
            </summary>
            <param name="vec">3D vector to convert.</param>
            <returns>Quaternion.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Constructor.
            </summary>
            <param name="x">X component.</param>
            <param name="y">Y component.</param>
            <param name="z">Z component.</param>
            <param name="w">Scalar component.</param>
        </member>
        <member name="P:SharpUtilities.Mathematics.Quaternion.Identity">
            <summary>
            Property to get a representation of an identity quaternion.
            </summary>
        </member>
        <member name="P:SharpUtilities.Mathematics.Quaternion.Zero">
            <summary>
            Property to get a representation of an empty quaternion.
            </summary>
        </member>
        <member name="P:SharpUtilities.Mathematics.Quaternion.RotationMatrix">
            <summary>
            Property to return the rotation matrix.
            </summary>
        </member>
        <member name="P:SharpUtilities.Mathematics.Quaternion.Inverse">
            <summary>
            Property to return the inverse of this quaternion.
            </summary>
        </member>
        <member name="T:SharpUtilities.Console.WindowSizeException">
            <summary>
            Window size exception.
            </summary>
            <remarks>Exception thrown when the size is invalid for a console window.</remarks>
        </member>
        <member name="M:SharpUtilities.Console.WindowSizeException.#ctor(System.String,SharpUtilities.Console.ConsoleErrorCodes)">
            <summary>
            Constructor.
            </summary>
            <param name="message">Message to pass through to the exception.</param>
            <param name="errorCode">Error code to pass through to the exception.</param>
        </member>
        <member name="M:SharpUtilities.Console.WindowSizeException.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:SharpUtilities.Console.CursorHeightException">
            <summary>
            Cursor height exception.
            </summary>
            <remarks>Exception thrown when the value entered for the cursor height is invalid.</remarks>
        </member>
        <member name="M:SharpUtilities.Console.CursorHeightException.#ctor(System.String,SharpUtilities.Console.ConsoleErrorCodes)">
            <summary>
            Constructor.
            </summary>
            <param name="message">Message to pass through to the exception.</param>
            <param name="errorCode">Error code to pass through to the exception.</param>
        </member>
        <member name="M:SharpUtilities.Console.CursorHeightException.#ctor(System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="size">Requested size of the cursor.</param>
        </member>
        <member name="T:SharpUtilities.Console.CursorPositionException">
            <summary>
            Cursor position exception.
            </summary>
            <remarks>Exception thrown when a console cursor is outside of the console boundaries.</remarks>
        </member>
        <member name="M:SharpUtilities.Console.CursorPositionException.#ctor(System.String,SharpUtilities.Console.ConsoleErrorCodes)">
            <summary>
            Constructor.
            </summary>
            <param name="message">Message to pass through to the exception.</param>
            <param name="errorCode">Error code to pass through to the exception.</param>
        </member>
        <member name="M:SharpUtilities.Console.CursorPositionException.#ctor(System.Boolean,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="verticalPosition">TRUE if the vertical position is out of bounds, FALSE if horizontal.</param>
            <param name="position">Position that is out of bounds.</param>
        </member>
        <member name="T:SharpUtilities.Console.StringBufferException">
            <summary>
            String buffer overflow exception.
            </summary>
            <remarks>Exception thrown when an attempt to read more data into a string buffer than is allocated.</remarks>
        </member>
        <member name="M:SharpUtilities.Console.StringBufferException.#ctor(System.String,SharpUtilities.Console.ConsoleErrorCodes)">
            <summary>
            Constructor.
            </summary>
            <param name="message">Message to pass through to the exception.</param>
            <param name="errorCode">Error code to pass through to the exception.</param>
        </member>
        <member name="M:SharpUtilities.Console.StringBufferException.#ctor(System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="bufferSize">Size of the string buffer that caused the exception.</param>
        </member>
        <member name="T:SharpUtilities.Mathematics.Ray">
            <summary>
            A value type representing a ray.
            </summary>
            <remarks>
            A ray is straight line extending from a point to an infinite distance.  This is represented
            as the equation: Ax + By + Cz + D = 0.
            They are often used in 3D mathematics to determine whether intersections exist and
            where they exist.
            </remarks>
        </member>
        <member name="F:SharpUtilities.Mathematics.Ray.Position">
            <summary>
            Starting point of the ray.
            </summary>
        </member>
        <member name="F:SharpUtilities.Mathematics.Ray.Direction">
            <summary>
            Direction the ray is pointing towards.
            </summary>
        </member>
        <member name="M:SharpUtilities.Mathematics.Ray.SetPosition(System.Single,System.Single,System.Single)">
            <summary>
            Function to set the source position of the ray.
            </summary>
            <param name="x">Horizontal position.</param>
            <param name="y">Vertical position.</param>
            <param name="z">Depth position.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.Ray.SetDirection(System.Single,System.Single,System.Single)">
            <summary>
            Function to set the direction of the ray.
            </summary>
            <param name="x">Horizontal direction.</param>
            <param name="y">Vertical direction.</param>
            <param name="z">Depth direction.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.Ray.Point(System.Single)">
            <summary>
            Function to return a point at the specified number of units along a ray.
            </summary>
            <param name="distance">Distance from the origin.</param>
            <returns>Point at distance.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Ray.Intersects(SharpUtilities.Mathematics.Plane)">
            <summary>
            Function to determine whether this ray intersects with the passed plane.
            </summary>
            <param name="plane">Plane to test.</param>
            <returns>Intersection results.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Ray.Intersects(SharpUtilities.Mathematics.AABB)">
            <summary>
            Function to determine if this ray will intersect the given AABB.
            </summary>
            <param name="box">AABB to test.</param>
            <returns>Intersection results.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Ray.Intersects(SharpUtilities.Mathematics.SphereVolume)">
            <summary>
            Function to determine if this ray will intersect the given sphere volume.
            </summary>
            <param name="sphere">Sphere volume to test.</param>
            <returns>Intersection results.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Ray.Intersects(SharpUtilities.Mathematics.SphereVolume,System.Boolean)">
            <summary>
            Function to determine if this ray will intersect the given sphere volume.
            </summary>
            <param name="sphere">Sphere volume to test.</param>
            <param name="discardInside">TRUE to discard results inside the sphere, FALSE to include.</param>
            <returns>Intersection results.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Ray.Equals(System.Object)">
            <summary>
            Function to compare an object with this one for equality.
            </summary>
            <param name="obj">Object to compare.</param>
            <returns>TRUE if equal, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Ray.GetHashCode">
            <summary>
            Function to return the hashcode for this object.
            </summary>
            <returns>Hashcode for this object.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Ray.ToString">
            <summary>
            Function to return a string representation of this object.
            </summary>
            <returns>String containing object information.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Ray.op_Equality(SharpUtilities.Mathematics.Ray,SharpUtilities.Mathematics.Ray)">
            <summary>
            Operator to test two rays for equality.
            </summary>
            <param name="left">Left ray value to compare.</param>
            <param name="right">Right ray value to compare.</param>
            <returns>TRUE if equal, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Ray.op_Inequality(SharpUtilities.Mathematics.Ray,SharpUtilities.Mathematics.Ray)">
            <summary>
            Operator to test two rays for inequality.
            </summary>
            <param name="left">Left ray value to compare.</param>
            <param name="right">Right ray value to compare.</param>
            <returns>TRUE if not equal, FALSE if they are.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Ray.op_Multiply(SharpUtilities.Mathematics.Ray,System.Single)">
            <summary>
            Operator to return a point at the specified number of units along a ray.
            </summary>
            <param name="ray">Ray to use.</param>
            <param name="distance">Distance from the origin.</param>
            <returns>Point at distance.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.Ray.#ctor(SharpUtilities.Mathematics.Vector3D,SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Constructors.
            </summary>
            <param name="position">Origin of the ray.</param>
            <param name="direction">Direction of the ray.</param>
        </member>
        <member name="P:SharpUtilities.Mathematics.Ray.UnitX">
            <summary>
            Property to return a unit ray that extends from the origin along the X-axis.
            </summary>
        </member>
        <member name="P:SharpUtilities.Mathematics.Ray.UnitY">
            <summary>
            Property to return a unit ray that extends from the origin along the Y-axis.
            </summary>
        </member>
        <member name="P:SharpUtilities.Mathematics.Ray.UnitZ">
            <summary>
            Property to return a unit ray that extends from the origin along the Z-axis.
            </summary>
        </member>
        <member name="T:SharpUtilities.Collections.INodeObject">
            <summary>
            An interface to define an object that can be attached to a node.
            </summary>
            <remarks>
            A node is an organizational unit, representing a position within a list.  
            A node is also a container for items.  For example, a node may contain 
            names and descriptions of people within a company.  With this we can organize
            groups of objects into a tree hierarchy.
            </remarks>
        </member>
        <member name="P:SharpUtilities.Collections.INodeObject.Owner">
            <summary>
            Property to return or set the owning node of this item.
            </summary>
        </member>
        <member name="P:SharpUtilities.Collections.INodeObject.Attached">
            <summary>
            Property to return whether this object is attached to a node.
            </summary>
        </member>
        <member name="P:SharpUtilities.Collections.INodeObject.Name">
            <summary>
            Property to return the name of this object.
            </summary>
            <remarks>
            If the object is derived from this and named object, then this will be
            filled automatically.
            </remarks>
        </member>
        <member name="P:SharpUtilities.Controls.ColorWheel.SelectedColorRectangle">
            <summary>
            Property to set or return the selected color rectangle.
            </summary>
        </member>
        <member name="P:SharpUtilities.Controls.ColorWheel.UseAlpha">
            <summary>
            Property to set or return whether to use the alpha component or not.
            </summary>
        </member>
        <member name="P:SharpUtilities.Controls.ColorWheel.Alpha">
            <summary>
            Property to set or return the alpha for the color.
            </summary>
        </member>
        <member name="T:SharpUtilities.Utility.CPU">
            <summary>
            A value type to hold information about a CPU.
            </summary>
        </member>
        <member name="M:SharpUtilities.Utility.CPU.#ctor(System.Management.PropertyDataCollection,SharpUtilities.Utility.OSTypes)">
            <summary>
            Constructor.
            </summary>
            <param name="cpuInfo">CPU information object.</param>
            <param name="os">Operating system information.</param>
        </member>
        <member name="P:SharpUtilities.Utility.CPU.Speed">
            <summary>
            Property to return CPU speed in MHz.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.CPU.Family">
            <summary>
            Property to return CPU family ID.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.CPU.Level">
            <summary>
            Property to return the CPU level ID.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.CPU.Revision">
            <summary>
            Property to return CPU revision number.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.CPU.Stepping">
            <summary>
            Property to return CPU stepping ID.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.CPU.Name">
            <summary>
            Property to return CPU name.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.CPU.Vendor">
            <summary>
            Property to return CPU vendor name.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.CPU.LogicalCPUCount">
            <summary>
            Property to return the number of logical CPUs.
            </summary>
        </member>
        <member name="P:SharpUtilities.Utility.CPU.CoreCount">
            <summary>
            Property to return the number of 'cores'.
            </summary>
        </member>
        <member name="T:SharpUtilities.Mathematics.AABB">
            <summary>
            Object representing an axis aligned bounding box.
            </summary>
            <remarks>An AABB is a boxed bounding volume.  This volume is often used to determine occlusion/culling of objects in a 3D scene.  Combined with intersection queries it can approximately determine if a point/volume lies within the volume or not.</remarks>
        </member>
        <member name="M:SharpUtilities.Mathematics.AABB.UpdateCorners">
            <summary>
            Function to update the corners of the box.
            </summary>
            <remarks>
            	FROM AXIOM:
            	If the order of these corners is important, they are as
            	follows: The 4 points of the minimum Z face (note that
            	because we use right-handed coordinates, the minimum Z is
            	at the 'back' of the box) starting with the minimum point of
            	all, then anticlockwise around this face (if you are looking
            	onto the face from outside the box). Then the 4 points of the
            	maximum Z face, starting with maximum point of all, then
            	anticlockwise around this face (looking onto the face from
            	outside the box). Like this:
            	<pre>
            		 1-----2
            	    /|     /|
            	  /  |   /  |
            	5-----4   |
            	|   0-|--3
            	|  /   |  /
            	|/     |/
            	6-----7
            	</pre>
            </remarks>
        </member>
        <member name="M:SharpUtilities.Mathematics.AABB.SetMinimumExtent(System.Single,System.Single,System.Single)">
            <summary>
            Function to set the minimum extent of the box.
            </summary>
            <remarks>This function is similar to the <seealso cref="P:SharpUtilities.Mathematics.AABB.MinimumExtent">MinimumExtent</seealso> property except that it takes explicit coordinates instead of a <see cref="T:SharpUtilities.Mathematics.Vector3D">vector</see>.</remarks>
            <param name="x">Horizontal position.</param>
            <param name="y">Vertical position.</param>
            <param name="z">Depth position.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.AABB.SetMaximumExtent(System.Single,System.Single,System.Single)">
            <summary>
            Function to set the maximum extent of the box.
            </summary>
            <remarks>This function is similar to the <seealso cref="P:SharpUtilities.Mathematics.AABB.MaximumExtent">MaximumExtent</seealso> property except that it takes explicit coordinates instead of a <see cref="T:SharpUtilities.Mathematics.Vector3D">vector</see>.</remarks>
            <param name="x">Horizontal position.</param>
            <param name="y">Vertical position.</param>
            <param name="z">Depth position.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.AABB.Scale(System.Single)">
            <summary>
            Function to scale the box by a scalar value.
            </summary>
            <remarks>Use this to shrink or expand the bounding box.</remarks>
            <param name="scalar">Scalar value to multiply.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.AABB.Merge(SharpUtilities.Mathematics.AABB)">
            <summary>
            Function to merge this box with another.
            </summary>
            <remarks>
            This function combines two AABBs together and updates the extent of the calling AABB.
            <para>
            The resulting bounding box may be larger than the original, representing the maximum extent between the two boxes.
            </para>
            </remarks>
            <param name="box">Box to merge with.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.AABB.Update(SharpUtilities.Mathematics.Vector3D,SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Function to update the bounding box dimensions.
            </summary>
            <remarks>This function allows for a quick update to the bounding box.</remarks>
            <param name="min">Minimum extent of the bounding box.</param>
            <param name="max">Maximum extent of the bounding box.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.AABB.Transform(SharpUtilities.Mathematics.Matrix)">
            <summary>
            Function to transform this bounding box by a <seealso cref="T:SharpUtilities.Mathematics.Matrix">matrix</seealso>.
            </summary>
            <remarks>
            Use this to translate/rotate a bounding box.
            <para>
            Rotating the box will not change its orientation, but merely its size to fix the extents when the objects orientation changes.
            </para>
            </remarks>
            <param name="mat">Matrix used to transform.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.AABB.Intersects(SharpUtilities.Mathematics.Ray)">
            <summary>
            Function to test for an intersection between a <see cref="T:SharpUtilities.Mathematics.Ray">ray</see> and this AABB.
            </summary>
            <param name="ray">Ray to test.</param>
            <returns>A <seealso cref="T:SharpUtilities.Mathematics.RayIntersectionQueryResult">RayIntersectionQueryResult</seealso> value containing information about the intersection.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.AABB.Intersects(SharpUtilities.Mathematics.Plane)">
            <summary>
            Function to test for an intersection between a <see cref="T:SharpUtilities.Mathematics.Plane">plane</see> and this AABB.
            </summary>
            <param name="plane">Plane to test.</param>
            <returns>A <seealso cref="T:SharpUtilities.Mathematics.PlaneIntersectionQueryResult">PlaneIntersectionQueryResult</seealso> value containing information about the intersection.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.AABB.Intersects(SharpUtilities.Mathematics.AABB)">
            <summary>
            Function to perform an intersection test on this and another AABB.
            </summary>
            <param name="aabb">AABB to test.</param>
            <returns>TRUE if there is an intersection, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.AABB.Intersects(SharpUtilities.Mathematics.SphereVolume)">
            <summary>
            Function to perform an intersection test on this and a bounding <see cref="T:SharpUtilities.Mathematics.SphereVolume">sphere</see>.
            </summary>
            <param name="sphere">Bounding sphere to test.</param>
            <returns>TRUE if there is an intersection, FALSE if not.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.AABB.Intersection(SharpUtilities.Mathematics.AABB)">
            <summary>
            Function to perform an intersection on this and another bounding box.
            </summary>
            <remarks>
            Use this to determine area to of intersection between this and another bounding box.
            <para>
            Note: this is NOT the same as an <see cref="M:SharpUtilities.Mathematics.AABB.Intersects(SharpUtilities.Mathematics.AABB)">intersection test.</see>
            	</para>
            </remarks>
            <param name="aabb">A bounding box to intersect.</param>
            <returns>A new bounding box representing the two intersected boxes.</returns>
        </member>
        <member name="M:SharpUtilities.Mathematics.AABB.#ctor(SharpUtilities.Mathematics.Vector3D,SharpUtilities.Mathematics.Vector3D)">
            <summary>
            Constructor.
            </summary>
            <param name="min">Minimum extent of the box.</param>
            <param name="max">Maximum extent of the box.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.AABB.#ctor">
            <summary>
            Default Constructor.
            </summary>
            <remarks>
            Defaults to a unitized bounding box.
            </remarks>
        </member>
        <member name="P:SharpUtilities.Mathematics.AABB.EmptyBox">
            <summary>
            Static read-only property to return an empty box.
            </summary>
            <remarks>This can be used to create a new bounding box value.</remarks>
            <value>Returns a bounding box with default extents and the empty flag set to TRUE.</value>
            <example>
            [C#] This is an example of how to create a new bounding box with this member:
            <code>
            public void GetBoundingBox()
            {
            	AABB myBox = AABB.EmptyBox;
            }
            </code>
            </example>
        </member>
        <member name="P:SharpUtilities.Mathematics.AABB.Empty">
            <summary>
            Property to return whether the box is empty or not.
            </summary>
            <remarks>Use this to determine if a bounding box has been assigned or not.  The extents are not adequate to determine this.</remarks>
            <value>Set to TRUE if the bounding box is empty, FALSE if it is not.</value>
        </member>
        <member name="P:SharpUtilities.Mathematics.AABB.MinimumExtent">
            <summary>
            Property to set or return the minimum extent of the bounding box.
            </summary>
            <value>This property uses a <seealso cref="T:SharpUtilities.Mathematics.Vector3D">Vector3D</seealso> to represent the extent.</value>
        </member>
        <member name="P:SharpUtilities.Mathematics.AABB.MaximumExtent">
            <summary>
            Property to set or return the maximum extent of the bounding box.
            </summary>
            <value>This property uses a <seealso cref="T:SharpUtilities.Mathematics.Vector3D">Vector3D</seealso> to represent the extent.</value>
        </member>
        <member name="P:SharpUtilities.Mathematics.AABB.Center">
            <summary>
            Read only property to return the center of the bounding box.
            </summary>
            <remarks>This can be used to get an approximate center of an object.</remarks>
            <value>Returns a <seealso cref="T:SharpUtilities.Mathematics.Vector3D">Vector3D</seealso> value containing the center of the bounding box.</value>
        </member>
        <member name="P:SharpUtilities.Mathematics.AABB.Item(System.Int32)">
            <summary>
            Read-only property to return the corners of the box.
            </summary>
            <remarks>
            The index should be between 0 and 7 (8 corners) or an exception will be thrown.
            <para>
            The corners are automatically generated when the volume extents change.
            </para>
            </remarks>
            <value>Returns a <seealso cref="T:SharpUtilities.Mathematics.Vector3D">Vector3D</seealso> representing the corner of the box.</value>
            <exception cref="T:SharpUtilities.Collections.IndexOutOfBoundsException">Index is not between 0 and 7.</exception>
        </member>
        <member name="T:SharpUtilities.Mathematics.Spline">
            <summary>
            Object representing a spline.
            </summary>
        </member>
        <member name="M:SharpUtilities.Mathematics.Spline.RecalculateTangents">
            <summary>
            Function to recalculate the spline tangents using Catmull-Rom.
            </summary>
        </member>
        <member name="M:SharpUtilities.Mathematics.Spline.Remove(System.Int32)">
            <summary>
            Function to remove a point from the spline.
            </summary>
            <param name="index">Index of the point to remove.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.Spline.Clear">
            <summary>
            Function to clear the points in the spline.
            </summary>
        </member>
        <member name="M:SharpUtilities.Mathematics.Spline.AddPoint(SharpUtilities.Mathematics.Vector2D)">
            <summary>
            Function to add a new point to the spline.
            </summary>
            <param name="point">Point for the spline.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.Spline.AddPoint(System.Single,System.Single)">
            <summary>
            Function to add a new point to the spline.
            </summary>
            <param name="x">Horizontal position.</param>
            <param name="y">Vertical position.</param>
        </member>
        <member name="M:SharpUtilities.Mathematics.Spline.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:SharpUtilities.Mathematics.Spline.AutoCalculate">
            <summary>
            Property to set or return whether to autocalculate the spline upon changes.
            </summary>
        </member>
        <member name="P:SharpUtilities.Mathematics.Spline.Item(System.Int32)">
            <summary>
            Property to return a point in the spline.
            </summary>
            <param name="index">Index of the point in the spline.</param>
            <returns>Vector point in the spline.</returns>
        </member>
        <member name="P:SharpUtilities.Mathematics.Spline.Item(System.Int32,System.Single)">
            <summary>
            Property to return an interpolated point from the spline.
            </summary>
            <param name="index">Index to start at.</param>
            <param name="time">Time index to use.</param>
            <returns>Interpolated point in the spline.</returns>
        </member>
        <member name="P:SharpUtilities.Mathematics.Spline.Item(System.Single)">
            <summary>
            Property to return an interpolated point from the spline.
            </summary>
            <param name="time">Time index to use.</param>
            <returns>Interpolated point in the spline.</returns>
        </member>
    </members>
</doc>
