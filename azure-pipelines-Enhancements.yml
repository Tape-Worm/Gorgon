# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

name: 3.0.$(Rev:r).$(DayOfYear)-Enhance

trigger:
  branches:
    include:
    - Enhancements

jobs:
- job: 'Release'
  pool:
    vmImage: 'windows-2019'

  variables:
    solution: 'Gorgon.sln'
    buildPlatform: 'Any CPU'
    buildConfiguration: 'Release'

  displayName: Release-Enhancements
    
  steps:
  - task: PowerShell@2
    displayName: 'Updating version to $(Build.BuildNumber)'
    inputs:
      targetType: filePath
      filePath: '.\VersionUpdater.ps1'

  - task: NuGetToolInstaller@1
    inputs:
      versionSpec: 
      checkLatest: true

  - task: NuGetCommand@2
    inputs:
      restoreSolution: '$(solution)'

  - task: VSBuild@1
    inputs:
      solution: '$(solution)'
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'

  - task: CopyFiles@2
    displayName: 'Copying Core to $(Build.ArtifactStagingDirectory)/Gorgon/lib'
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)/Gorgon/Gorgon.Core/bin/$(buildConfiguration)'
      contents: '**/?(*.dll|*.xml)'
      CleanTargetFolder: true
      TargetFolder: '$(Build.ArtifactStagingDirectory)/Gorgon/lib'

  - task: CopyFiles@2
    displayName: 'Copying Windows specific to $(Build.ArtifactStagingDirectory)/Gorgon/lib'
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)/Gorgon/Gorgon.Windows/bin/$(buildConfiguration)'
      contents: '**/?(*.dll|*.xml)'
      CleanTargetFolder: true
      TargetFolder: '$(Build.ArtifactStagingDirectory)/Gorgon/lib'

  - task: CopyFiles@2
    displayName: 'Copying FileSystem to $(Build.ArtifactStagingDirectory)/Gorgon/lib'
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)/Gorgon/Gorgon.FileSystem/bin/$(buildConfiguration)'
      contents: '**/?(*.dll|*.xml)'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/Gorgon/lib'

  - task: CopyFiles@2
    displayName: 'Copying Input to $(Build.ArtifactStagingDirectory)/Gorgon/lib'
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)/Gorgon/Gorgon.Input/bin/$(buildConfiguration)'
      contents: '**/?(*.dll|*.xml)'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/Gorgon/lib'

  - task: CopyFiles@2
    displayName: 'Copying Core Graphics to $(Build.ArtifactStagingDirectory)/Gorgon/lib'
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)/Gorgon/Gorgon.Graphics.Core/bin/$(buildConfiguration)'
      contents: '**/?(*.dll|*.xml)'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/Gorgon/lib'

  - task: CopyFiles@2
    displayName: 'Copying Fonts to $(Build.ArtifactStagingDirectory)/Gorgon/lib'
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)/Gorgon/Gorgon.Graphics.Fonts/bin/$(buildConfiguration)'
      contents: '**/?(*.dll|*.xml)'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/Gorgon/lib'
    
  - task: CopyFiles@2
    displayName: 'Copying Imaging to $(Build.ArtifactStagingDirectory)/Gorgon/lib'
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)/Gorgon/Gorgon.Graphics.Imaging/bin/$(buildConfiguration)'
      contents: '**/?(*.dll|*.xml)'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/Gorgon/lib'
   
  - task: CopyFiles@2
    displayName: 'Copying 2D to $(Build.ArtifactStagingDirectory)/Gorgon/lib'
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)/Gorgon/Gorgon.Renderers/Gorgon2D/bin/$(buildConfiguration)'
      contents: '**/?(*.dll|*.xml)'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/Gorgon/lib'

  - task: CopyFiles@2
    displayName: 'Copying Animation to $(Build.ArtifactStagingDirectory)/Gorgon/lib'
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)/Gorgon/Gorgon.Animation/bin/$(buildConfiguration)'
      contents: '**/?(*.dll|*.xml)'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/Gorgon/lib'

  - task: CopyFiles@2
    displayName: 'Copying 2D Animation to $(Build.ArtifactStagingDirectory)/Gorgon/lib'
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)/Gorgon/Gorgon.Renderers/Animation.Gorgon2D/bin/$(buildConfiguration)'
      contents: '**/?(*.dll|*.xml)'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/Gorgon/lib'

  - task: CopyFiles@2
    displayName: 'Copying 2D IO to $(Build.ArtifactStagingDirectory)/Gorgon/lib'
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)/Gorgon/Gorgon.Renderers/IO.Gorgon2D/bin/$(buildConfiguration)'
      contents: '**/?(*.dll|*.xml)'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/Gorgon/lib'

  - task: CopyFiles@2
    displayName: 'Copying Plugins to $(Build.ArtifactStagingDirectory)/Gorgon/PlugIns'
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)/PlugIns/Bin/$(buildConfiguration)/'
      contents: '**/?(*.dll|*.xml)'
      CleanTargetFolder: true
      TargetFolder: '$(Build.ArtifactStagingDirectory)/Gorgon/PlugIns'

  - task: CopyFiles@2
    displayName: 'Copying artifacts to $(Build.ArtifactStagingDirectory)/Gorgon/Tools'  
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)/Tools/Editor/Gorgon.Editor/bin/$(buildConfiguration)/'
      contents: '**/?(*.exe|*.dll|*.config|Gorgon.Editor.API.xml)'
      CleanTargetFolder: true
      TargetFolder: '$(Build.ArtifactStagingDirectory)/Gorgon/Tools'

  - task: PowerShell@2
    displayName: 'Copying artifacts to $(Build.ArtifactStagingDirectory)/Examples'
    inputs:
      targetType: filePath
      filePath: '.\Deploy_Examples.ps1'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: BugFixDrop

- job: 'Debug'
  pool:
    vmImage: 'windows-2019'

  variables:
    solution: 'Gorgon.sln'
    buildPlatform: 'Any CPU'
    buildConfiguration: 'Debug'

  displayName: Debug-Enhancements
   
  steps:
  - task: PowerShell@2
    displayName: 'Updating version to $(Build.BuildNumber)'
    inputs:
      targetType: filePath
      filePath: '.\VersionUpdater.ps1'

  - task: NuGetToolInstaller@1
    inputs:
      versionSpec: 
      checkLatest: true
  
  - task: NuGetCommand@2
    inputs:
      restoreSolution: '$(solution)'
      
  - task: VSBuild@1
    inputs:
      solution: '$(solution)'
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'

  - task: CopyFiles@2
    displayName: 'Copying Core to $(Build.ArtifactStagingDirectory)/$(buildConfiguration)/Gorgon/lib'
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)/Gorgon/Gorgon.Core/bin/$(buildConfiguration)'
      contents: '**/?(*.dll|*.xml)'
      CleanTargetFolder: true
      TargetFolder: '$(Build.ArtifactStagingDirectory)/$(buildConfiguration)/Gorgon/lib'

  - task: CopyFiles@2
    displayName: 'Copying Windows specific to $(Build.ArtifactStagingDirectory)/$(buildConfiguration)/Gorgon/lib'
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)/Gorgon/Gorgon.Windows/bin/$(buildConfiguration)'
      contents: '**/?(*.dll|*.xml|Gorgon*.pdb)'
      CleanTargetFolder: true
      TargetFolder: '$(Build.ArtifactStagingDirectory)/$(buildConfiguration)/Gorgon/lib'

  - task: CopyFiles@2
    displayName: 'Copying FileSystem to $(Build.ArtifactStagingDirectory)/$(buildConfiguration)/Gorgon/lib'
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)/Gorgon/Gorgon.FileSystem/bin/$(buildConfiguration)'
      contents: '**/?(*.dll|*.xml|Gorgon*.pdb)'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/$(buildConfiguration)/Gorgon/lib'

  - task: CopyFiles@2
    displayName: 'Copying Input to $(Build.ArtifactStagingDirectory)/$(buildConfiguration)/Gorgon/lib'
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)/Gorgon/Gorgon.Input/bin/$(buildConfiguration)'
      contents: '**/?(*.dll|*.xml|Gorgon*.pdb)'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/$(buildConfiguration)/Gorgon/lib'

  - task: CopyFiles@2
    displayName: 'Copying Core Graphics to $(Build.ArtifactStagingDirectory)/$(buildConfiguration)/Gorgon/lib'
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)/Gorgon/Gorgon.Graphics.Core/bin/$(buildConfiguration)'
      contents: '**/?(*.dll|*.xml|Gorgon*.pdb)'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/$(buildConfiguration)/Gorgon/lib'

  - task: CopyFiles@2
    displayName: 'Copying Fonts to $(Build.ArtifactStagingDirectory)/$(buildConfiguration)/Gorgon/lib'
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)/Gorgon/Gorgon.Graphics.Fonts/bin/$(buildConfiguration)'
      contents: '**/?(*.dll|*.xml|Gorgon*.pdb)'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/$(buildConfiguration)/Gorgon/lib'
    
  - task: CopyFiles@2
    displayName: 'Copying Imaging to $(Build.ArtifactStagingDirectory)/$(buildConfiguration)/Gorgon/lib'
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)/Gorgon/Gorgon.Graphics.Imaging/bin/$(buildConfiguration)'
      contents: '**/?(*.dll|*.xml|Gorgon*.pdb)'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/$(buildConfiguration)/Gorgon/lib'
   
  - task: CopyFiles@2
    displayName: 'Copying 2D to $(Build.ArtifactStagingDirectory)/$(buildConfiguration)/Gorgon/lib'
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)/Gorgon/Gorgon.Renderers/Gorgon2D/bin/$(buildConfiguration)'
      contents: '**/?(*.dll|*.xml|Gorgon*.pdb)'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/$(buildConfiguration)/Gorgon/lib'

  - task: CopyFiles@2
    displayName: 'Copying Animation to $(Build.ArtifactStagingDirectory)/$(buildConfiguration)/Gorgon/lib'
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)/Gorgon/Gorgon.Animation/bin/$(buildConfiguration)'
      contents: '**/?(*.dll|*.xml|Gorgon*.pdb)'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/$(buildConfiguration)/Gorgon/lib'

  - task: CopyFiles@2
    displayName: 'Copying 2D Animation to $(Build.ArtifactStagingDirectory)/$(buildConfiguration)/Gorgon/lib'
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)/Gorgon/Gorgon.Renderers/Animation.Gorgon2D/bin/$(buildConfiguration)'
      contents: '**/?(*.dll|*.xml|Gorgon*.pdb)'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/$(buildConfiguration)/Gorgon/lib'

  - task: CopyFiles@2
    displayName: 'Copying 2D IO to $(Build.ArtifactStagingDirectory)/$(buildConfiguration)/Gorgon/lib'
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)/Gorgon/Gorgon.Renderers/IO.Gorgon2D/bin/$(buildConfiguration)'
      contents: '**/?(*.dll|*.xml|Gorgon*.pdb)'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/$(buildConfiguration)/Gorgon/lib'

  - task: CopyFiles@2
    displayName: 'Copying Plugins to $(Build.ArtifactStagingDirectory)/$(buildConfiguration)/Gorgon/PlugIns'
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)/PlugIns/Bin/$(buildConfiguration)/'
      contents: '**/?(*.dll|*.xml|Gorgon*.pdb)'
      CleanTargetFolder: true
      TargetFolder: '$(Build.ArtifactStagingDirectory)/$(buildConfiguration)/Gorgon/PlugIns'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: EnhancementsFixDrop
