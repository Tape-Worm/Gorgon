//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Gorgon.Graphics.Imaging.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Gorgon.Graphics.Imaging.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Bitmap.
        /// </summary>
        internal static string GORIMG_DESC_BMP_CODEC {
            get {
                return ResourceManager.GetString("GORIMG_DESC_BMP_CODEC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Direct Draw Surface.
        /// </summary>
        internal static string GORIMG_DESC_DDS_CODEC {
            get {
                return ResourceManager.GetString("GORIMG_DESC_DDS_CODEC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Graphics Interchange Format.
        /// </summary>
        internal static string GORIMG_DESC_GIF_CODEC {
            get {
                return ResourceManager.GetString("GORIMG_DESC_GIF_CODEC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Joint photographics experts group.
        /// </summary>
        internal static string GORIMG_DESC_JPG_CODEC {
            get {
                return ResourceManager.GetString("GORIMG_DESC_JPG_CODEC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Portable Network Graphics.
        /// </summary>
        internal static string GORIMG_DESC_PNG_CODEC {
            get {
                return ResourceManager.GetString("GORIMG_DESC_PNG_CODEC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Truevision Targa.
        /// </summary>
        internal static string GORIMG_DESC_TGA_CODEC {
            get {
                return ResourceManager.GetString("GORIMG_DESC_TGA_CODEC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The buffer formats must be same: [{0}]..
        /// </summary>
        internal static string GORIMG_ERR_BUFFER_FORMAT_MISMATCH {
            get {
                return ResourceManager.GetString("GORIMG_ERR_BUFFER_FORMAT_MISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source and destination image do not share the same width, height, or pixel format..
        /// </summary>
        internal static string GORIMG_ERR_CANNOT_COPY_DATA_MISMATCH {
            get {
                return ResourceManager.GetString("GORIMG_ERR_CANNOT_COPY_DATA_MISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The codec &apos;{0}&apos; was not found in the plug in..
        /// </summary>
        internal static string GORIMG_ERR_CODEC_NOT_IN_PLUGIN {
            get {
                return ResourceManager.GetString("GORIMG_ERR_CODEC_NOT_IN_PLUGIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file data stored in the stream is not a &apos;{0}&apos; file..
        /// </summary>
        internal static string GORIMG_ERR_FILE_FORMAT_NOT_CORRECT {
            get {
                return ResourceManager.GetString("GORIMG_ERR_FILE_FORMAT_NOT_CORRECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The format supplied, [{0}], is not a 16 bits per pixel format..
        /// </summary>
        internal static string GORIMG_ERR_FORMAT_IS_NOT_16BPP {
            get {
                return ResourceManager.GetString("GORIMG_ERR_FORMAT_IS_NOT_16BPP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The image format [{0}] is not supported..
        /// </summary>
        internal static string GORIMG_ERR_FORMAT_NOT_SUPPORTED {
            get {
                return ResourceManager.GetString("GORIMG_ERR_FORMAT_NOT_SUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The size of the image data in the stream must be at least 1 byte..
        /// </summary>
        internal static string GORIMG_ERR_IMAGE_BYTE_LENGTH_TOO_SHORT {
            get {
                return ResourceManager.GetString("GORIMG_ERR_IMAGE_BYTE_LENGTH_TOO_SHORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The image depth must be at least 1 pixel..
        /// </summary>
        internal static string GORIMG_ERR_IMAGE_DEPTH_TOO_SMALL {
            get {
                return ResourceManager.GetString("GORIMG_ERR_IMAGE_DEPTH_TOO_SMALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The image height must be at least 1 pixel..
        /// </summary>
        internal static string GORIMG_ERR_IMAGE_HEIGHT_TOO_SMALL {
            get {
                return ResourceManager.GetString("GORIMG_ERR_IMAGE_HEIGHT_TOO_SMALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The calculated size if the image ({0} bytes) is larger than the amount of data available ({1} bytes).
        ///This could lead to a buffer overrun..
        /// </summary>
        internal static string GORIMG_ERR_IMAGE_SIZE_MISMATCH {
            get {
                return ResourceManager.GetString("GORIMG_ERR_IMAGE_SIZE_MISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The image width must be at least 1 pixel..
        /// </summary>
        internal static string GORIMG_ERR_IMAGE_WIDTH_TOO_SMALL {
            get {
                return ResourceManager.GetString("GORIMG_ERR_IMAGE_WIDTH_TOO_SMALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must be between {0} and {1}..
        /// </summary>
        internal static string GORIMG_ERR_INDEX_OUT_OF_RANGE {
            get {
                return ResourceManager.GetString("GORIMG_ERR_INDEX_OUT_OF_RANGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The block count must be larger than 0..
        /// </summary>
        internal static string GORIMG_ERR_MISSING_BLOCK_COUNT {
            get {
                return ResourceManager.GetString("GORIMG_ERR_MISSING_BLOCK_COUNT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter must not be empty..
        /// </summary>
        internal static string GORIMG_ERR_PARAMETER_MUST_NOT_BE_EMPTY {
            get {
                return ResourceManager.GetString("GORIMG_ERR_PARAMETER_MUST_NOT_BE_EMPTY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The steam is not seekable..
        /// </summary>
        internal static string GORIMG_ERR_STREAM_CANNOT_SEEK {
            get {
                return ResourceManager.GetString("GORIMG_ERR_STREAM_CANNOT_SEEK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The stream is read only..
        /// </summary>
        internal static string GORIMG_ERR_STREAM_IS_READONLY {
            get {
                return ResourceManager.GetString("GORIMG_ERR_STREAM_IS_READONLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The stream is write only..
        /// </summary>
        internal static string GORIMG_ERR_STREAM_IS_WRITEONLY {
            get {
                return ResourceManager.GetString("GORIMG_ERR_STREAM_IS_WRITEONLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This codec does not support TGA files encoded using 2 or 4 way interleaving, or color mapped data..
        /// </summary>
        internal static string GORIMG_ERR_TGA_TYPE_NOT_SUPPORTED {
            get {
                return ResourceManager.GetString("GORIMG_ERR_TGA_TYPE_NOT_SUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alpha value threshold for transparency.
        ///
        ///GIF encoded images can use a single color index from the palette to indicate transparency. When downsampling an image to an indexed color palette, and the alpha value of the pixel is less than the value specified here, the codec will treat the pixel as the transparent index in the GIF image palette.
        ///
        ///This value has a range of 0 to 1.0.  Where 0 indicates no transparency, and 1.0 means all pixels are transparent..
        /// </summary>
        internal static string GORIMG_OPT_GIF_ALPHA_THRESHOLD {
            get {
                return ResourceManager.GetString("GORIMG_OPT_GIF_ALPHA_THRESHOLD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image quality.
        ///
        ///Specifies the lossy compression quality to use when encoding a JPEG image.  The higher the value, the worse the less compression that is used, and the better the image quality.
        ///
        ///This value has a range of 0 to 1.0.  Where 0 is the best compression, but the worst quality, and 1.0 is no compression and the best quality..
        /// </summary>
        internal static string GORIMG_OPT_JPG_QUALITY {
            get {
                return ResourceManager.GetString("GORIMG_OPT_JPG_QUALITY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scanline fitering type.
        ///
        ///Specified how to filter scanlines when encoding PNG files..
        /// </summary>
        internal static string GORIMG_OPT_PNG_FILTERING {
            get {
                return ResourceManager.GetString("GORIMG_OPT_PNG_FILTERING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use interlacing
        ///
        ///Specifies whether or not to use interlacing for scanlines in the PNG file..
        /// </summary>
        internal static string GORIMG_OPT_PNG_INTERLACED {
            get {
                return ResourceManager.GetString("GORIMG_OPT_PNG_INTERLACED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Read all frames as image array.
        ///
        ///Images with multiple frames will have these frames decoded as multiple indices in the image..
        /// </summary>
        internal static string GORIMG_OPT_READ_ALL_FRAMES {
            get {
                return ResourceManager.GetString("GORIMG_OPT_READ_ALL_FRAMES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save all frames as image array.
        ///
        ///Images with multiple frames will have these frames encoded as array indices in the image..
        /// </summary>
        internal static string GORIMG_OPT_SAVE_ALL_FRAMES {
            get {
                return ResourceManager.GetString("GORIMG_OPT_SAVE_ALL_FRAMES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Force opaque when image is transparent.
        ///
        ///Some 32 bit per pixel TGA images are written out with their alpha values as 0, even though color data is present in the image. This option will force the TGA file to be decoded as though it has opaque alpha channels.
        ///
        ///Note: If there are a mix of alpha values in the image, then this option will be ignored. .
        /// </summary>
        internal static string GORIMG_OPT_TGA_SETZEROALPHA_OPAQUE {
            get {
                return ResourceManager.GetString("GORIMG_OPT_TGA_SETZEROALPHA_OPAQUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dithering type.
        ///
        ///Defines how to handle downsampling the pixel data from a higher bit depth so that image quality is preserved..
        /// </summary>
        internal static string GORIMG_OPT_WIC_DITHERING {
            get {
                return ResourceManager.GetString("GORIMG_OPT_WIC_DITHERING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Horizontal DPI.
        /// </summary>
        internal static string GORIMG_OPT_WIC_DPIX {
            get {
                return ResourceManager.GetString("GORIMG_OPT_WIC_DPIX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vertical DPI.
        /// </summary>
        internal static string GORIMG_OPT_WIC_DPIY {
            get {
                return ResourceManager.GetString("GORIMG_OPT_WIC_DPIY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image pitch information.  Width={0} bytes, Size={1} bytes..
        /// </summary>
        internal static string GORIMG_TOSTR_FMTPITCH {
            get {
                return ResourceManager.GetString("GORIMG_TOSTR_FMTPITCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image pitch information.  Width={0} bytes, Size={1} bytes.  Format is compressed. Block count width: {2}, Block count height: {3}.
        /// </summary>
        internal static string GORIMG_TOSTR_FMTPITCH_COMPRESSED {
            get {
                return ResourceManager.GetString("GORIMG_TOSTR_FMTPITCH_COMPRESSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gorgon {0} Image Codec.
        /// </summary>
        internal static string GORIMG_TOSTR_IMAGE_CODEC {
            get {
                return ResourceManager.GetString("GORIMG_TOSTR_IMAGE_CODEC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gorgon Image Codec {0} ({1}).
        /// </summary>
        internal static string GORIMG_TOSTR_IMGE_CODEC_PLUGIN_DESC {
            get {
                return ResourceManager.GetString("GORIMG_TOSTR_IMGE_CODEC_PLUGIN_DESC", resourceCulture);
            }
        }
    }
}
