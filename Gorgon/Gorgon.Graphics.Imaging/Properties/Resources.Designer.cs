//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Gorgon.Graphics.Imaging.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Gorgon.Graphics.Imaging.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gorgon {0} Image Codec.
        /// </summary>
        internal static string GORGFX_TOSTR_IMAGE_CODEC {
            get {
                return ResourceManager.GetString("GORGFX_TOSTR_IMAGE_CODEC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Bitmap.
        /// </summary>
        internal static string GORIMG_DESC_BMP_CODEC {
            get {
                return ResourceManager.GetString("GORIMG_DESC_BMP_CODEC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Direct Draw Surface.
        /// </summary>
        internal static string GORIMG_DESC_DDS_CODEC {
            get {
                return ResourceManager.GetString("GORIMG_DESC_DDS_CODEC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Graphics Interchange Format.
        /// </summary>
        internal static string GORIMG_DESC_GIF_CODEC {
            get {
                return ResourceManager.GetString("GORIMG_DESC_GIF_CODEC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Joint photographics experts group.
        /// </summary>
        internal static string GORIMG_DESC_JPG_CODEC {
            get {
                return ResourceManager.GetString("GORIMG_DESC_JPG_CODEC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Portable Network Graphics.
        /// </summary>
        internal static string GORIMG_DESC_PNG_CODEC {
            get {
                return ResourceManager.GetString("GORIMG_DESC_PNG_CODEC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Truevision Targa.
        /// </summary>
        internal static string GORIMG_DESC_TGA_CODEC {
            get {
                return ResourceManager.GetString("GORIMG_DESC_TGA_CODEC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The buffer formats must be same: [{0}]..
        /// </summary>
        internal static string GORIMG_ERR_BUFFER_FORMAT_MISMATCH {
            get {
                return ResourceManager.GetString("GORIMG_ERR_BUFFER_FORMAT_MISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source and destination image do not share the same width, height, or pixel format..
        /// </summary>
        internal static string GORIMG_ERR_CANNOT_COPY_DATA_MISMATCH {
            get {
                return ResourceManager.GetString("GORIMG_ERR_CANNOT_COPY_DATA_MISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file data stored in the stream is not a &apos;{0}&apos; file..
        /// </summary>
        internal static string GORIMG_ERR_FILE_FORMAT_NOT_CORRECT {
            get {
                return ResourceManager.GetString("GORIMG_ERR_FILE_FORMAT_NOT_CORRECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The format supplied, [{0}], is not a 16 bits per pixel format..
        /// </summary>
        internal static string GORIMG_ERR_FORMAT_IS_NOT_16BPP {
            get {
                return ResourceManager.GetString("GORIMG_ERR_FORMAT_IS_NOT_16BPP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The image format [{0}] is not supported..
        /// </summary>
        internal static string GORIMG_ERR_FORMAT_NOT_SUPPORTED {
            get {
                return ResourceManager.GetString("GORIMG_ERR_FORMAT_NOT_SUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The size of the image data in the stream must be at least 1 byte..
        /// </summary>
        internal static string GORIMG_ERR_IMAGE_BYTE_LENGTH_TOO_SHORT {
            get {
                return ResourceManager.GetString("GORIMG_ERR_IMAGE_BYTE_LENGTH_TOO_SHORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The image depth must be at least 1 pixel..
        /// </summary>
        internal static string GORIMG_ERR_IMAGE_DEPTH_TOO_SMALL {
            get {
                return ResourceManager.GetString("GORIMG_ERR_IMAGE_DEPTH_TOO_SMALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The image height must be at least 1 pixel..
        /// </summary>
        internal static string GORIMG_ERR_IMAGE_HEIGHT_TOO_SMALL {
            get {
                return ResourceManager.GetString("GORIMG_ERR_IMAGE_HEIGHT_TOO_SMALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The calculated size if the image ({0} bytes) is larger than the amount of data available ({1} bytes).
        ///This could lead to a buffer overrun..
        /// </summary>
        internal static string GORIMG_ERR_IMAGE_SIZE_MISMATCH {
            get {
                return ResourceManager.GetString("GORIMG_ERR_IMAGE_SIZE_MISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The image width must be at least 1 pixel..
        /// </summary>
        internal static string GORIMG_ERR_IMAGE_WIDTH_TOO_SMALL {
            get {
                return ResourceManager.GetString("GORIMG_ERR_IMAGE_WIDTH_TOO_SMALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must be between {0} and {1}..
        /// </summary>
        internal static string GORIMG_ERR_INDEX_OUT_OF_RANGE {
            get {
                return ResourceManager.GetString("GORIMG_ERR_INDEX_OUT_OF_RANGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The block count must be larger than 0..
        /// </summary>
        internal static string GORIMG_ERR_MISSING_BLOCK_COUNT {
            get {
                return ResourceManager.GetString("GORIMG_ERR_MISSING_BLOCK_COUNT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter must not be empty..
        /// </summary>
        internal static string GORIMG_ERR_PARAMETER_MUST_NOT_BE_EMPTY {
            get {
                return ResourceManager.GetString("GORIMG_ERR_PARAMETER_MUST_NOT_BE_EMPTY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The steam is not seekable..
        /// </summary>
        internal static string GORIMG_ERR_STREAM_CANNOT_SEEK {
            get {
                return ResourceManager.GetString("GORIMG_ERR_STREAM_CANNOT_SEEK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The stream is read only..
        /// </summary>
        internal static string GORIMG_ERR_STREAM_IS_READONLY {
            get {
                return ResourceManager.GetString("GORIMG_ERR_STREAM_IS_READONLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The stream is write only..
        /// </summary>
        internal static string GORIMG_ERR_STREAM_IS_WRITEONLY {
            get {
                return ResourceManager.GetString("GORIMG_ERR_STREAM_IS_WRITEONLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This codec does not support TGA files encoded using 2 or 4 way interleaving, or color mapped data..
        /// </summary>
        internal static string GORIMG_ERR_TGA_TYPE_NOT_SUPPORTED {
            get {
                return ResourceManager.GetString("GORIMG_ERR_TGA_TYPE_NOT_SUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image pitch information.  Width={0} bytes, Size={1} bytes..
        /// </summary>
        internal static string GORIMG_TOSTR_FMTPITCH {
            get {
                return ResourceManager.GetString("GORIMG_TOSTR_FMTPITCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image pitch information.  Width={0} bytes, Size={1} bytes.  Format is compressed. Block count width: {2}, Block count height: {3}.
        /// </summary>
        internal static string GORIMG_TOSTR_FMTPITCH_COMPRESSED {
            get {
                return ResourceManager.GetString("GORIMG_TOSTR_FMTPITCH_COMPRESSED", resourceCulture);
            }
        }
    }
}
