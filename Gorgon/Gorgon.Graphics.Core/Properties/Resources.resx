<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="GORGFX_ERR_BUFFER_CANT_UPDATE_IMMUTABLE_OR_DYNAMIC" xml:space="preserve">
    <value>Cannot update buffers with a usage of [Immutable] or [Dynamic].</value>
  </data>
  <data name="GORGFX_ERR_INVALID_OS" xml:space="preserve">
    <value>The Gorgon Graphics interface requires Windows 10 (Build 15063) or greater.</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="Gorgon_2_x_Logo_Small" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\Gorgon_2.x_Logo_Small.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="GORGFX_ERR_IMAGE_TYPE_INVALID" xml:space="preserve">
    <value>The image type '{0}' is not a valid image type.</value>
  </data>
  <data name="GORGFX_ERR_BUFFER_ERR_WRITE_ONLY" xml:space="preserve">
    <value>Only buffers with a usage of [Staging] can be read by the CPU. The buffer '{0}' has a usage of [{1}].</value>
  </data>
  <data name="GORGFX_ERR_FORMAT_NOT_SUPPORTED" xml:space="preserve">
    <value>The format [{0}] is not supported.</value>
  </data>
  <data name="GORGFX_ERR_LAYOUT_ELEMENT_IN_USE" xml:space="preserve">
    <value>The offset [{0}] or context '{1}' is in use by another item with the same index or slot.</value>
  </data>
  <data name="GORGFX_ERR_DEVICE_CANNOT_FIND_DEVICES" xml:space="preserve">
    <value>Could not find any supported video devices.  Gorgon requires a device that can support a minimum feature level of 10.0.</value>
  </data>
  <data name="GORGFX_TOSTR_SHADER_INCLUDE" xml:space="preserve">
    <value>Gorgon Shader Include '{0}'</value>
  </data>
  <data name="GORGFX_ERR_VALUE_OUT_OF_RANGE" xml:space="preserve">
    <value>The value is out of range.  The value [{0}] must be be 0 or less than {1}.</value>
  </data>
  <data name="GORGFX_ERR_BUFFER_IMMUTABLE_REQUIRES_DATA" xml:space="preserve">
    <value>Cannot create an immutable buffer without initial data to populate it.</value>
  </data>
  <data name="GORGFX_ERR_VIEW_UNKNOWN_FORMAT" xml:space="preserve">
    <value>The format for the view must not be [Unknown].</value>
  </data>
  <data name="GORGFX_ERR_VIEW_CANNOT_CAST_FORMAT" xml:space="preserve">
    <value>The format [{0}] is not compatiable or cannot be cast to [{1}].</value>
  </data>
  <data name="GORGFX_ERR_VIEW_CUBE_ARRAY_SIZE_INVALID" xml:space="preserve">
    <value>The array count for a cube texture must be a multiple of 6.</value>
  </data>
  <data name="GORGFX_ERR_VIEW_NO_TYPELESS" xml:space="preserve">
    <value>The view cannot use a typeless format.</value>
  </data>
  <data name="GORGFX_ERR_VIEW_CANNOT_BIND_UNKNOWN_RESOURCE" xml:space="preserve">
    <value>Cannot bind the view to the resource, the resource type is not known.</value>
  </data>
  <data name="GORGFX_ERR_BUFFER_SIZE_TOO_SMALL" xml:space="preserve">
    <value>The buffer requires at least {0} byte(s).</value>
  </data>
  <data name="GORGFX_ERR_REQUIRES_FEATURE_LEVEL" xml:space="preserve">
    <value>A device with feature level {0} (or better) is necessary to use this object or perform this operation.</value>
  </data>
  <data name="GORGFX_ERR_BUFFER_STRUCTURE_SIZE_INVALID" xml:space="preserve">
    <value>The current aligned structure size of {0} is not valid.
The structure size must be greater than 0 and no greater than 2048 bytes.</value>
  </data>
  <data name="GORGFX_ERR_UNORDERED_RES_NOT_DEFAULT" xml:space="preserve">
    <value>An unordered resource must have a usage of [Default]</value>
  </data>
  <data name="GORGFX_TOSTR_MULTISAMPLEINFO" xml:space="preserve">
    <value>Multisampling count: {0}, quality: {1}.</value>
  </data>
  <data name="GORGFX_ERR_SHADER_UNKNOWN_TYPE" xml:space="preserve">
    <value>The shader type '{0}' is not a valid type.</value>
  </data>
  <data name="GORGFX_ERR_CATASTROPHIC" xml:space="preserve">
    <value>There was a catastrophic error in Gorgon.

Please report this error by pasting the details to the bug tracker in Gorgon's google code repository.  If possible, please attach any log  used by Gorgon to the bug report.</value>
  </data>
  <data name="GORGFX_TOSTR_DEVICE" xml:space="preserve">
    <value>Gorgon Graphics Video Device: {0}</value>
  </data>
  <data name="GORGFX_ERR_STREAM_WRITE_ONLY" xml:space="preserve">
    <value>The stream is write-only.</value>
  </data>
  <data name="GORGFX_ERR_FILE_NOT_FOUND" xml:space="preserve">
    <value>The file '{0}' was not found.</value>
  </data>
  <data name="GORGFX_ERR_SHADER_INCLUDE_NOT_FOUND" xml:space="preserve">
    <value>The include file in line '{0}' was not found in the include list.</value>
  </data>
  <data name="GORGFX_ERR_SHADER_INCLUDE_PATH_INVALID" xml:space="preserve">
    <value>The include line '{0}' is not valid.</value>
  </data>
  <data name="GORGFX_ERR_MULTISAMPLE_INVALID" xml:space="preserve">
    <value>The video device '{0}' does not support multisampling with a count of {1} and a quality of {2} for format [{3}].</value>
  </data>
  <data name="GORGFX_ERR_TEXTURE_DEPTH_INVALID" xml:space="preserve">
    <value>Cannot create the [{0}].  The depth must be between 1 and {1}.</value>
  </data>
  <data name="GORGFX_ERR_TEXTURE_HEIGHT_INVALID" xml:space="preserve">
    <value>Cannot create the [{0}] texture. The height must be between 1 and {1}.</value>
  </data>
  <data name="GORGFX_ERR_TEXTURE_WIDTH_INVALID" xml:space="preserve">
    <value>Cannot create the [{0}] texture.  The width must be between 1 and {1}.</value>
  </data>
  <data name="GORGFX_ERR_TEXTURE_IMMUTABLE" xml:space="preserve">
    <value>The texture is immutable and cannot be updated or read back to the CPU.</value>
  </data>
  <data name="GORGFX_ERR_TEXTURE_CANNOT_COPY_SAME_SUBRESOURCE" xml:space="preserve">
    <value>Cannot copy to and from the same sub resource on the same texture.</value>
  </data>
  <data name="GORGFX_ERR_TEXTURE_COPY_CANNOT_CONVERT" xml:space="preserve">
    <value>Cannot copy because these formats: [{0}] and [{1}] cannot be converted. Or, the device does not support format conversion.</value>
  </data>
  <data name="GORGFX_ERR_TEXTURE_IS_DYNAMIC_OR_IMMUTABLE" xml:space="preserve">
    <value>Cannot update a textures that have a usage of [Dynamic] or [Immutable].</value>
  </data>
  <data name="GORGFX_ERR_TEXTURE_NOT_SAME_TYPE" xml:space="preserve">
    <value>The texure '{0}' is a [{1}] and cannot be copied to or from the type [{2}].</value>
  </data>
  <data name="GORGFX_ERR_LOCK_CANNOT_READ_NON_STAGING" xml:space="preserve">
    <value>Cannot lock a buffer for reading if the resource does not have a usage of [Staging].</value>
  </data>
  <data name="GORGFX_ERR_TEXTURE_USAGE_CANT_LOCK" xml:space="preserve">
    <value>A texture with a usage of [{0}] cannot be locked.</value>
  </data>
  <data name="GORGFX_ERR_TEXTURE_MULTISAMPLED" xml:space="preserve">
    <value>This operation does not support multisampled textures.</value>
  </data>
  <data name="GORGFX_ERR_TEXTURE_MULTISAMPLE_PARAMS_MISMATCH" xml:space="preserve">
    <value>The textures have different multisampling parameters.  This operation requires that all textures have the same multisampling parameters.</value>
  </data>
  <data name="GORGFX_ERR_TEXTURE_MUST_BE_SAME_SIZE" xml:space="preserve">
    <value>The textures must be the same width and height.</value>
  </data>
  <data name="GORGFX_ERR_BINDING_TYPE_CANNOT_BE_USED" xml:space="preserve">
    <value>The binding type [{0}] cannot use with this method.</value>
  </data>
  <data name="GORGFX_TOSTR_SHADER_MACRO" xml:space="preserve">
    <value>Gorgon Shader Macro Definition '{0}'.</value>
  </data>
  <data name="GORGFX_ERR_VIEW_RESOURCE_NOT_DEPTHSTENCIL" xml:space="preserve">
    <value>The resource attached to this view is not a {0} depth/stencil buffer.</value>
  </data>
  <data name="GORGFX_ERR_TEXTURE_RESOLVE_DEST_NOT_DEFAULT" xml:space="preserve">
    <value>The destination texture '{0}' must have a default usage.</value>
  </data>
  <data name="GORGFX_ERR_TEXTURE_RESOLVE_FORMATS_NOT_SAME" xml:space="preserve">
    <value>The destination texture must have a format of [{0}].</value>
  </data>
  <data name="GORGFX_ERR_TEXTURE_RESOLVE_FORMAT_CANNOT_BE_TYPELESS" xml:space="preserve">
    <value>The resolve format must not be typeless.</value>
  </data>
  <data name="GORGFX_ERR_TEXTURE_RESOLVE_FORMAT_NOT_SAME_GROUP" xml:space="preserve">
    <value>The source and destination have the same typeless format of [{0}].  The resolve format [{1}] is not a part of the same format grouping.</value>
  </data>
  <data name="GORGFX_ERR_TEXTURE_RESOLVE_SRC_DEST_NOT_SAME_GROUP" xml:space="preserve">
    <value>The source format [{0}] is not in the same group as the destination format of [{1}].</value>
  </data>
  <data name="GORGFX_ERR_TEXTURE_NOT_MULTISAMPLED" xml:space="preserve">
    <value>The texture '{0}' is not multisampled.</value>
  </data>
  <data name="GORGFX_ERR_TEXTURE_BC_SIZE_NOT_MOD_4" xml:space="preserve">
    <value>A compressed texture must have a width and height that is a multiple of 4.</value>
  </data>
  <data name="GORGFX_ERR_TEXTURE_CUBE_REQUIRES_6_ARRAY" xml:space="preserve">
    <value>Cannot create the texture cube array.  Feature level 10.0 devices require an array count of 6.</value>
  </data>
  <data name="GORGFX_ERR_TEXTURE_FORMAT_NOT_SUPPORTED" xml:space="preserve">
    <value>The format [{0}] is not supported for a [{1}] texture.</value>
  </data>
  <data name="GORGFX_ERR_UAV_REQUIRES_SM5" xml:space="preserve">
    <value>Unordered access views for textures requires a feature level 11 or better video device.</value>
  </data>
  <data name="GORGFX_ERR_TEXTURE_NO_MIP_SUPPORT" xml:space="preserve">
    <value>The texture format [{0}] must be used with a mip map count of 1.</value>
  </data>
  <data name="GORGFX_ERR_CANNOT_MULTISAMPLE_CUBE" xml:space="preserve">
    <value>Cannot use a multisampled texture as a texture cube.</value>
  </data>
  <data name="GORGFX_ERR_NO_VIDEO_DEVICE_WITH_NAME" xml:space="preserve">
    <value>There is no video device with the name '{0}'.</value>
  </data>
  <data name="GORGFX_ERR_FEATURE_LEVEL_INVALID" xml:space="preserve">
    <value>The feature level [{0}] is not valid.</value>
  </data>
  <data name="GORGFX_ERR_SWAP_BACKBUFFER_TOO_SMALL" xml:space="preserve">
    <value>The swap chain back buffer is too small: {0}x{1}. The buffer must have a width and height of least 1 pixel.</value>
  </data>
  <data name="GORGFX_ERR_NEED_FORM_FOR_FULLSCREEN" xml:space="preserve">
    <value>The swap chain '{0}' is bound to a child control, only a window may be put into full screen mode.</value>
  </data>
  <data name="GORGFX_ERR_RESOURCE_IS_NOT_RENDERTARGET" xml:space="preserve">
    <value>The resource '{0}' is not a render target.</value>
  </data>
  <data name="GORGFX_ERR_RTV_ALREADY_BOUND" xml:space="preserve">
    <value>The render target view for resource '{0}' is already bound.</value>
  </data>
  <data name="GORGFX_ERR_RTV_NOT_SAME_TYPE" xml:space="preserve">
    <value>The render target views are not the same type: [{0}].</value>
  </data>
  <data name="GORGFX_ERR_CONSTANT_BUFFER_TOO_LARGE" xml:space="preserve">
    <value>The size requested ({0} bytes) for the constant buffer exceeds the maximum value of {1} bytes.</value>
  </data>
  <data name="GORGFX_ERR_RTV_DEPTHSTENCIL_ARRAYCOUNT_MISMATCH" xml:space="preserve">
    <value>The array count in the render target views does not match with the depth/stencil view '{0}'.</value>
  </data>
  <data name="GORGFX_ERR_RTV_DEPTHSTENCIL_MULTISAMPLE_MISMATCH" xml:space="preserve">
    <value>The depth stenvcil view resource must have the same multisample quality: {0} and count: {1} as the render targets.</value>
  </data>
  <data name="GORGFX_ERR_RTV_DEPTHSTENCIL_RESOURCE_MISMATCH" xml:space="preserve">
    <value>The depth/stencil view and render target views do not have the same width, height, or array count/depth count.</value>
  </data>
  <data name="GORGFX_ERR_RTV_DEPTHSTENCIL_TYPE_MISMATCH" xml:space="preserve">
    <value>The type of the depth stencil view resource [{0}] is not the same as the render targets.</value>
  </data>
  <data name="GORGFX_ERR_RTV_MULTISAMPLE_MISMATCH" xml:space="preserve">
    <value>The render target view resources must all have the same multisample quality: {0} and count: {1}.</value>
  </data>
  <data name="GORGFX_ERR_RTV_RESOURCE_MISMATCH" xml:space="preserve">
    <value>The render target views do not have the same width, height, or array count/depth count.</value>
  </data>
  <data name="GORGFX_ERR_CANNOT_COMPILE_SHADER" xml:space="preserve">
    <value>Could not compile the shader source code.
Errors:
{0}</value>
  </data>
  <data name="GORGFX_ERR_DATA_OFFSET_COUNT_IS_TOO_LARGE" xml:space="preserve">
    <value>The offset: {0} and count: {1} are too large for the source data.</value>
  </data>
  <data name="GORGFX_ERR_IMAGE_TYPE_UNSUPPORTED" xml:space="preserve">
    <value>The image type [{0}] is unsupported.</value>
  </data>
  <data name="GORGFX_ERR_TEXTURE_NOT_SHADER_RESOURCE" xml:space="preserve">
    <value>The texture '{0}' is not a shader resource, and cannot be bound to a shader.</value>
  </data>
  <data name="GORGFX_ERR_TEXTURE_TYPE_NOT_SUPPORTED" xml:space="preserve">
    <value>The texture type [{0}] is unsupported.</value>
  </data>
  <data name="GORGFX_ERR_NOT_GORGON_SHADER" xml:space="preserve">
    <value>The data in the stream is not a Gorgon binary shader.</value>
  </data>
  <data name="GORGFX_ERR_MULTISAMPLE_INVALID_MIP" xml:space="preserve">
    <value>The mip level count must be set to 1 when multisampling is enabled on a texture.</value>
  </data>
  <data name="GORGFX_ERR_TEXTURE_ARRAYCOUNT_INVALID" xml:space="preserve">
    <value>The array count must be between 1 and {0}.</value>
  </data>
  <data name="GORGFX_ERR_DEPTHSTENCIL_FORMAT_INVALID" xml:space="preserve">
    <value>The format [{0}] is not valid for a depth/stencil binding.</value>
  </data>
  <data name="GORGFX_ERR_DEPTHSTENCIL_MS_FL101" xml:space="preserve">
    <value>Cannot use multisampling with a depth/stencil texture on feature level 10 devices or below.</value>
  </data>
  <data name="GORGFX_ERR_DEPTHSTENCIL_NOT_DEFAULT" xml:space="preserve">
    <value>A depth/stencil texture must have a usage of [Default].</value>
  </data>
  <data name="GORGFX_ERR_DEPTHSTENCIL_TYPED_SHADER_RESOURCE" xml:space="preserve">
    <value>A depth/stencil cannot be bound as a shader resource unless it has a typeless format.</value>
  </data>
  <data name="GORGFX_ERR_DEPTHSTENCIL_VOLUME" xml:space="preserve">
    <value>A 3D texture cannot be used as a depth/stencil buffer.</value>
  </data>
  <data name="GORGFX_ERR_MULTISAMPLE_COUNT_NOT_SUPPORTED" xml:space="preserve">
    <value>The multisample count {0} with a format of [{1}] is not supported on the device '{2}'.</value>
  </data>
  <data name="GORGFX_ERR_RENDERTARGET_NOT_DEFAULT" xml:space="preserve">
    <value>A render target texture must have a usage of [Default].</value>
  </data>
  <data name="GORGFX_ERR_TEXTURE_IMMUTABLE_REQUIRES_DATA" xml:space="preserve">
    <value>The texture '{0}' has a usage of [Immutable], but has no data to initialize the texture with.</value>
  </data>
  <data name="GORGFX_ERR_TEXTURE_UNORDERED_NO_MULTISAMPLE" xml:space="preserve">
    <value>A multisampled texture cannot be bound as an unordered resource.</value>
  </data>
  <data name="GORGFX_ERR_UAV_FORMAT_INVALID" xml:space="preserve">
    <value>The format [{0}] is not valid for an unordered access binding.</value>
  </data>
  <data name="GORGFX_ERR_LAYOUT_INVALID_ELEMENT_TYPE" xml:space="preserve">
    <value>The type '{0}' is not a valid type for an input element.</value>
  </data>
  <data name="GORGFX_ERR_VERTEX_NO_FIELDS" xml:space="preserve">
    <value>There are no public fields in the '{0}' vertex type .</value>
  </data>
  <data name="GORGFX_ERR_VERTEX_TYPE_NOT_VALID_FOR_NATIVE" xml:space="preserve">
    <value>A vertex must not have complex marshalling (i.e. MarshalAsAttribute), be a reference type or have non-primitive/value type fields.</value>
  </data>
  <data name="GORGFX_ERR_BUFFER_ALREADY_LOCKED" xml:space="preserve">
    <value>The buffer is already locked.</value>
  </data>
  <data name="GORGFX_ERR_BUFFER_LOCK_NOT_DYNAMIC" xml:space="preserve">
    <value>Only a buffer with a usage of [Dynamic] can be locked. The buffer '{0}' has a usage of [{1}]. </value>
  </data>
  <data name="GORGFX_ERR_BUFFER_LOCK_NOT_VALID" xml:space="preserve">
    <value>The lock pointer for the buffer is not owned by this buffer.</value>
  </data>
  <data name="GORGFX_ERR_TYPE_NO_FIELDS" xml:space="preserve">
    <value>The type '{0}' has no public fields.</value>
  </data>
  <data name="GORGFX_ERR_TYPE_NOT_VALID_FOR_NATIVE" xml:space="preserve">
    <value>The type '{0}' has complex marshalling and cannot be used. </value>
  </data>
  <data name="GraphicsShaders" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\GraphicsShaders.hlsl;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;Windows-1252</value>
  </data>
  <data name="GORGFX_TOSTR_VERTEXBUFFER_BINDING" xml:space="preserve">
    <value>Vertex buffer binding.  Stride: {0}, Offset: {1}, VertexBuffer: {2}</value>
  </data>
  <data name="GORGFX_ERR_SWAP_BACKBUFFER_TOO_LARGE" xml:space="preserve">
    <value>The requested width and/or height ({0}x{1}) for the swap chain backer buffer is too large. 

The width must be a value between 1-{2}, and the height must be a value between 1-{3}.</value>
  </data>
  <data name="GORGFX_ERR_BUFFER_CANNOT_BE_BOUND_TO_GPU" xml:space="preserve">
    <value>A staging buffer cannot be bound to the GPU as a shader resource, stream out resource, or as an unordered access resource.</value>
  </data>
  <data name="GORGFX_ERR_BUFFER_NON_STAGING_NEEDS_BINDING" xml:space="preserve">
    <value>A [{0}] buffer cannot use a binding of [None].</value>
  </data>
  <data name="GORGFX_ERR_BUFFER_VIEW_START_COUNT_OUT_OF_RANGE" xml:space="preserve">
    <value>The starting element {0} plus the count {1} is larger than the buffer element size of {2}.</value>
  </data>
  <data name="GORGFX_ERR_BUFFER_IS_IMMUTABLE" xml:space="preserve">
    <value>Cannot update an immutable buffer.</value>
  </data>
  <data name="GORGFX_ERR_TEXTURE_VIEW_ARRAY_OUT_OF_RANGE" xml:space="preserve">
    <value>The array index ({0}), and the count ({1}) are larger than the total number of array indices ({2}) in the texture.</value>
  </data>
  <data name="GORGFX_ERR_TEXTURE_VIEW_DEPTH_OUT_OF_RANGE" xml:space="preserve">
    <value>The depth slice ({0}), and the slice count ({1}) are larger than the total depth ({2}) in the texture.</value>
  </data>
  <data name="GORGFX_ERR_TEXTURE_VIEW_MIP_OUT_OF_RANGE" xml:space="preserve">
    <value>The first mip index ({0}), and the count ({1}) are larger than the total number of mip levels ({2}) in the texture.</value>
  </data>
  <data name="GORGFX_ERR_VIEW_DEPTH_STENCIL_NO_3D" xml:space="preserve">
    <value>Depth/stencil views cannot be created for 3D texture types.</value>
  </data>
  <data name="GORGFX_ERR_STATE_IMMUTABLE" xml:space="preserve">
    <value>The {0} has been assigned and is now in a read only state.</value>
  </data>
  <data name="GORGFX_ERR_EFFECT_NOT_INITIALIZED" xml:space="preserve">
    <value>The effect '{0}' has not been initialized.</value>
  </data>
  <data name="GORGFX_ERR_EFFECT_PASS_COUNT_INVALID" xml:space="preserve">
    <value>There must be at least 1 pass for a shader effect.</value>
  </data>
  <data name="GORGFX_ERR_PASS_INDEX_OUT_OF_RANGE" xml:space="preserve">
    <value>The effect pass index ({0}) must be 0 or less than {1}.</value>
  </data>
  <data name="GORGFX_ERR_EFFECT_GAUSS_BLUR_KERNEL_SIZE_INVALID" xml:space="preserve">
    <value>The kernel size must be between 3 and 81 (inclusive).</value>
  </data>
  <data name="GORGFX_NAME_GAUSS_BLUR_EFFECT" xml:space="preserve">
    <value>Gaussian Blur Effect</value>
  </data>
  <data name="GORGFX_NAME_GRAYSCALE_EFFECT" xml:space="preserve">
    <value>Grayscale Effect</value>
  </data>
  <data name="GORGFX_ERR_UAV_RESOURCE_NOT_VALID" xml:space="preserve">
    <value>The resource '{0}' does not have an [UnorderedAccess] binding.</value>
  </data>
  <data name="GORGFX_TOSTR_UAV_BINDING" xml:space="preserve">
    <value>Unordered access view binding.  Offset: {0}, Uav Resource: {1}</value>
  </data>
  <data name="GORGFX_ERR_BUFFER_CONSTANT_NO_SO" xml:space="preserve">
    <value>Constant buffers cannot be used as stream out buffers.</value>
  </data>
  <data name="GORGFX_ERR_BUFFER_TYPE_MISSING_SO" xml:space="preserve">
    <value>The buffer '{0}' was not configured for stream out.</value>
  </data>
  <data name="GORGFX_ERR_VALUE_OUT_OF_RANGE_COUNT" xml:space="preserve">
    <value>The value is out of range.  The value [{0}] must be be 1 or less than or equal to {1}.</value>
  </data>
  <data name="GORGFX_TOSTR_SO_BINDING" xml:space="preserve">
    <value>Stream-out bninding. Offset: {0}, Buffer: {1}</value>
  </data>
  <data name="GORGFX_ERR_SHADER_TYPE_MISMATCH" xml:space="preserve">
    <value>The shader is stored as a [{0}] type and cannot be converted to a '{1}'.</value>
  </data>
  <data name="GORGFX_ERR_BUFFER_DYNAMIC_SO" xml:space="preserve">
    <value>Cannot bind a dynamic buffer as a stream out buffer.</value>
  </data>
  <data name="GORGFX_ERR_BUFFER_DYNAMIC_UAV" xml:space="preserve">
    <value>Cannot use unordered access views with dynamic buffers.</value>
  </data>
  <data name="GORGFX_ERR_BUFFER_IMMUTABLE_STAGING_SO" xml:space="preserve">
    <value>Immutable or staging buffers cannot be used for stream out.</value>
  </data>
  <data name="GORGFX_ERR_BUFFER_IMMUTABLE_STAGING_UAV" xml:space="preserve">
    <value>Immutable or staging buffers cannot use unordered access views.</value>
  </data>
  <data name="GORGFX_ERR_INDEX_BUFFER_TYPE_MISMATCH" xml:space="preserve">
    <value>This buffer uses {0} bit indices. {1} bit indices cannot be written to it.</value>
  </data>
  <data name="GORGFX_ERR_UAV_ALREADY_BOUND" xml:space="preserve">
    <value>The unordered access view for resource '{0}' is already bound.</value>
  </data>
  <data name="GORGFX_ERR_CONFLICT_RTV_UAV" xml:space="preserve">
    <value>Cannot bind the '{0}' resource as a render target because it is already bound as an unordered access view at slot {1}.</value>
  </data>
  <data name="GORGFX_ERR_CONFLICT_SRV_DSV" xml:space="preserve">
    <value>The resource '{0}' is already bound as a depth/stencil. Please unbind the depth/stencil before assigning it to a {1}.</value>
  </data>
  <data name="GORGFX_ERR_CONFLICT_SRV_RTV" xml:space="preserve">
    <value>The resource '{0}' is already bound as a render target in slot {j}. Please unbind the render target before assigning it to a {1}.</value>
  </data>
  <data name="GORGFX_ERR_CONFLICT_SRV_UAV" xml:space="preserve">
    <value>The resource '{0}' is already bound as a unordered access view in slot {1}. Please unbind the unordered access view before assigning it to a {2}.</value>
  </data>
  <data name="GORGFX_ERR_CONFLICT_UAV_RTV" xml:space="preserve">
    <value>Cannot bind the '{0}' resource as an unordered access view because it is already bound as a render target view at slot {1}.</value>
  </data>
</root>