//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Gorgon.Graphics.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Gorgon.Graphics.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not retrieve the ABC widths for the font..
        /// </summary>
        internal static string GORGFX_ERR_CANNOT_GET_ABC {
            get {
                return ResourceManager.GetString("GORGFX_ERR_CANNOT_GET_ABC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not retrieve the feature levels for the device &apos;{0}&apos;..
        /// </summary>
        internal static string GORGFX_ERR_CANNOT_GET_FEATURELEVELS {
            get {
                return ResourceManager.GetString("GORGFX_ERR_CANNOT_GET_FEATURELEVELS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not retrieve the kerning information for the font..
        /// </summary>
        internal static string GORGFX_ERR_CANNOT_GET_KERNING {
            get {
                return ResourceManager.GetString("GORGFX_ERR_CANNOT_GET_KERNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The feature level [{0}] is not valid..
        /// </summary>
        internal static string GORGFX_ERR_FEATURE_LEVEL_INVALID {
            get {
                return ResourceManager.GetString("GORGFX_ERR_FEATURE_LEVEL_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The feature level [{0}] is not supported by the &apos;{1}&apos; video device..
        /// </summary>
        internal static string GORGFX_ERR_FEATURE_LEVEL_NOT_SUPPORTED {
            get {
                return ResourceManager.GetString("GORGFX_ERR_FEATURE_LEVEL_NOT_SUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The block count must be larger than 0..
        /// </summary>
        internal static string GORGFX_ERR_MISSING_BLOCK_COUNT {
            get {
                return ResourceManager.GetString("GORGFX_ERR_MISSING_BLOCK_COUNT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The video device &apos;{0}&apos; does not support multisampling with a count of {1} and a quality of {2} for format [{3}]..
        /// </summary>
        internal static string GORGFX_ERR_MULTISAMPLE_INVALID {
            get {
                return ResourceManager.GetString("GORGFX_ERR_MULTISAMPLE_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not use any of the installed video devices on this system. Gorgon requires at least a Direct 3D 10 capable video card..
        /// </summary>
        internal static string GORGFX_ERR_NO_SUITABLE_VIDEO_DEVICE_FOUND {
            get {
                return ResourceManager.GetString("GORGFX_ERR_NO_SUITABLE_VIDEO_DEVICE_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no video deivce with the name &apos;{0}&apos;..
        /// </summary>
        internal static string GORGFX_ERR_NO_VIDEO_DEVICE_WITH_NAME {
            get {
                return ResourceManager.GetString("GORGFX_ERR_NO_VIDEO_DEVICE_WITH_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter must not be empty..
        /// </summary>
        internal static string GORGFX_ERR_PARAMETER_MUST_NOT_BE_EMPTY {
            get {
                return ResourceManager.GetString("GORGFX_ERR_PARAMETER_MUST_NOT_BE_EMPTY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multisampling is not available for this present mode: [{0}]..
        /// </summary>
        internal static string GORGFX_ERR_PRESENTMODE_NO_MULTISAMPLE {
            get {
                return ResourceManager.GetString("GORGFX_ERR_PRESENTMODE_NO_MULTISAMPLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A swap chain with a presentation mode of [Discard] requires more than 1 back buffer..
        /// </summary>
        internal static string GORGFX_ERR_SWAPCHAIN_DISCARD_NEEDS_2_OR_MORE {
            get {
                return ResourceManager.GetString("GORGFX_ERR_SWAPCHAIN_DISCARD_NEEDS_2_OR_MORE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The format [{0}] is not valid for a swap chain..
        /// </summary>
        internal static string GORGFX_ERR_SWAPCHAIN_FORMAT_INVALID {
            get {
                return ResourceManager.GetString("GORGFX_ERR_SWAPCHAIN_FORMAT_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The swap chain must be a render target or shader input..
        /// </summary>
        internal static string GORGFX_ERR_SWAPCHAIN_MUST_BE_TARGET_OR_SHADERINPUT {
            get {
                return ResourceManager.GetString("GORGFX_ERR_SWAPCHAIN_MUST_BE_TARGET_OR_SHADERINPUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find a suitable output for full screen mode..
        /// </summary>
        internal static string GORGFX_ERR_SWAPCHAIN_NO_OUTPUT {
            get {
                return ResourceManager.GetString("GORGFX_ERR_SWAPCHAIN_NO_OUTPUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Swap chains with a sequential flipping presentation mode can only use R8G8B8A8_UNorm, B8G8R8A8_UNorm or R16G16B16A16_Float as a format..
        /// </summary>
        internal static string GORGFX_ERR_SWAPCHAIN_SEQ_FORMATSUPPORT {
            get {
                return ResourceManager.GetString("GORGFX_ERR_SWAPCHAIN_SEQ_FORMATSUPPORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The size of the swap chain is too small. The swap chain must be at least 1x1 pixels in size..
        /// </summary>
        internal static string GORGFX_ERR_SWAPCHAIN_SIZE_TOO_SMALL {
            get {
                return ResourceManager.GetString("GORGFX_ERR_SWAPCHAIN_SIZE_TOO_SMALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The swap chain requires a window..
        /// </summary>
        internal static string GORGFX_ERR_SWAPCHAIN_WINDOW_REQUIRED {
            get {
                return ResourceManager.GetString("GORGFX_ERR_SWAPCHAIN_WINDOW_REQUIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unordered access views require feature level 11 or better..
        /// </summary>
        internal static string GORGFX_ERR_UAV_FEATURELEVEL_REQUIRED {
            get {
                return ResourceManager.GetString("GORGFX_ERR_UAV_FEATURELEVEL_REQUIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The video device &apos;{0}&apos; is not supported by Gorgon..
        /// </summary>
        internal static string GORGFX_ERR_VIDEO_DEVICE_NOT_SUPPORTED {
            get {
                return ResourceManager.GetString("GORGFX_ERR_VIDEO_DEVICE_NOT_SUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image pitch information.  Width={0} bytes, Size={1} bytes..
        /// </summary>
        internal static string GORGFX_TOSTR_FMTPITCH {
            get {
                return ResourceManager.GetString("GORGFX_TOSTR_FMTPITCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image pitch information.  Width={0} bytes, Size={1} bytes.  Format is compressed. Block count width: {2}, Block count height: {3}.
        /// </summary>
        internal static string GORGFX_TOSTR_FMTPITCH_COMPRESSED {
            get {
                return ResourceManager.GetString("GORGFX_TOSTR_FMTPITCH_COMPRESSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MultiSample count: {0}, quality: {1}.
        /// </summary>
        internal static string GORGFX_TOSTR_MultiSampleINFO {
            get {
                return ResourceManager.GetString("GORGFX_TOSTR_MultiSampleINFO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gorgon Video Mode: {0}x{1} Refresh Num/Denom: {2}/{3} Format: {4}.
        /// </summary>
        internal static string GORGFX_TOSTR_VIDEOMODE {
            get {
                return ResourceManager.GetString("GORGFX_TOSTR_VIDEOMODE", resourceCulture);
            }
        }
    }
}
