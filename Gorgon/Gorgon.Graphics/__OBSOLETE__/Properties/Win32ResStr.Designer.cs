//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Gorgon.Graphics.@__OBSOLETE__.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Win32ResStr {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Win32ResStr() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Gorgon.Graphics.__OBSOLETE__.Properties.Win32ResStr", typeof(Win32ResStr).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  This object does not support aggregation.
        /// </summary>
        internal static string WINERR_CLASSFACTORY_E_FIRST {
            get {
                return ResourceManager.GetString("WINERR_CLASSFACTORY_E_FIRST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  CoInitialize has already been called..
        /// </summary>
        internal static string WINERR_CO_E_ALREADYINITIALIZED {
            get {
                return ResourceManager.GetString("WINERR_CO_E_ALREADYINITIALIZED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  CoInitialize has not been called..
        /// </summary>
        internal static string WINERR_CO_E_NOTINITIALIZED {
            get {
                return ResourceManager.GetString("WINERR_CO_E_NOTINITIALIZED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Invalid number..
        /// </summary>
        internal static string WINERR_D2DERR_BAD_NUMBER {
            get {
                return ResourceManager.GetString("WINERR_D2DERR_BAD_NUMBER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The display format we need to render is not supported by the hardware device..
        /// </summary>
        internal static string WINERR_D2DERR_DISPLAY_FORMAT_NOT_SUPPORTED {
            get {
                return ResourceManager.GetString("WINERR_D2DERR_DISPLAY_FORMAT_NOT_SUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  A valid display state could not be determined..
        /// </summary>
        internal static string WINERR_D2DERR_DISPLAY_STATE_INVALID {
            get {
                return ResourceManager.GetString("WINERR_D2DERR_DISPLAY_STATE_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The brush types are incompatible for the call..
        /// </summary>
        internal static string WINERR_D2DERR_INCOMPATIBLE_BRUSH_TYPES {
            get {
                return ResourceManager.GetString("WINERR_D2DERR_INCOMPATIBLE_BRUSH_TYPES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An internal error (D2D bug) occurred. On checked builds	 we would assert..
        /// </summary>
        internal static string WINERR_D2DERR_INTERNAL_ERROR {
            get {
                return ResourceManager.GetString("WINERR_D2DERR_INTERNAL_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  A call to this method is invalid..
        /// </summary>
        internal static string WINERR_D2DERR_INVALID_CALL {
            get {
                return ResourceManager.GetString("WINERR_D2DERR_INVALID_CALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  A layer resource can only be in use once at any point in time..
        /// </summary>
        internal static string WINERR_D2DERR_LAYER_ALREADY_IN_USE {
            get {
                return ResourceManager.GetString("WINERR_D2DERR_LAYER_ALREADY_IN_USE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Requested DX surface size exceeded maximum texture size..
        /// </summary>
        internal static string WINERR_D2DERR_MAX_TEXTURE_SIZE_EXCEEDED {
            get {
                return ResourceManager.GetString("WINERR_D2DERR_MAX_TEXTURE_SIZE_EXCEEDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  No HW rendering device is available for this operation..
        /// </summary>
        internal static string WINERR_D2DERR_NO_HARDWARE_DEVICE {
            get {
                return ResourceManager.GetString("WINERR_D2DERR_NO_HARDWARE_DEVICE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The object has not yet been initialized..
        /// </summary>
        internal static string WINERR_D2DERR_NOT_INITIALIZED {
            get {
                return ResourceManager.GetString("WINERR_D2DERR_NOT_INITIALIZED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The pop call did not match the corresponding push call.
        /// </summary>
        internal static string WINERR_D2DERR_POP_CALL_DID_NOT_MATCH_PUSH {
            get {
                return ResourceManager.GetString("WINERR_D2DERR_POP_CALL_DID_NOT_MATCH_PUSH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The push and pop calls were unbalanced.
        /// </summary>
        internal static string WINERR_D2DERR_PUSH_POP_UNBALANCED {
            get {
                return ResourceManager.GetString("WINERR_D2DERR_PUSH_POP_UNBALANCED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  here has been a presentation error that may be recoverable. The caller needs to recreate.
        /// </summary>
        internal static string WINERR_D2DERR_RECREATE_TARGET {
            get {
                return ResourceManager.GetString("WINERR_D2DERR_RECREATE_TARGET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Attempt to copy from a render target while a layer or clip rect is applied.
        /// </summary>
        internal static string WINERR_D2DERR_RENDER_TARGET_HAS_LAYER_OR_CLIPRECT {
            get {
                return ResourceManager.GetString("WINERR_D2DERR_RENDER_TARGET_HAS_LAYER_OR_CLIPRECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The geomery scanner failed to process the data..
        /// </summary>
        internal static string WINERR_D2DERR_SCANNER_FAILED {
            get {
                return ResourceManager.GetString("WINERR_D2DERR_SCANNER_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  D2D could not access the screen..
        /// </summary>
        internal static string WINERR_D2DERR_SCREEN_ACCESS_DENIED {
            get {
                return ResourceManager.GetString("WINERR_D2DERR_SCREEN_ACCESS_DENIED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Shader compilation failed..
        /// </summary>
        internal static string WINERR_D2DERR_SHADER_COMPILE_FAILED {
            get {
                return ResourceManager.GetString("WINERR_D2DERR_SHADER_COMPILE_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The render target is not compatible with GDI.
        /// </summary>
        internal static string WINERR_D2DERR_TARGET_NOT_GDI_COMPATIBLE {
            get {
                return ResourceManager.GetString("WINERR_D2DERR_TARGET_NOT_GDI_COMPATIBLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  A text client drawing effect object is of the wrong type.
        /// </summary>
        internal static string WINERR_D2DERR_TEXT_EFFECT_IS_WRONG_TYPE {
            get {
                return ResourceManager.GetString("WINERR_D2DERR_TEXT_EFFECT_IS_WRONG_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The application is holding a reference to the IDWriteTextRenderer interface after the corresponding DrawText or DrawTextLayout call has returned. The IDWriteTextRenderer instance will be zombied..
        /// </summary>
        internal static string WINERR_D2DERR_TEXT_RENDERER_NOT_RELEASED {
            get {
                return ResourceManager.GetString("WINERR_D2DERR_TEXT_RENDERER_NOT_RELEASED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Shader construction failed because it was too complex..
        /// </summary>
        internal static string WINERR_D2DERR_TOO_MANY_SHADER_ELEMENTS {
            get {
                return ResourceManager.GetString("WINERR_D2DERR_TOO_MANY_SHADER_ELEMENTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The requested opertion is not supported..
        /// </summary>
        internal static string WINERR_D2DERR_UNSUPPORTED_OPERATION {
            get {
                return ResourceManager.GetString("WINERR_D2DERR_UNSUPPORTED_OPERATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The pixel format is not supported..
        /// </summary>
        internal static string WINERR_D2DERR_UNSUPPORTED_PIXEL_FORMAT {
            get {
                return ResourceManager.GetString("WINERR_D2DERR_UNSUPPORTED_PIXEL_FORMAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The requested D2D version is not supported..
        /// </summary>
        internal static string WINERR_D2DERR_UNSUPPORTED_VERSION {
            get {
                return ResourceManager.GetString("WINERR_D2DERR_UNSUPPORTED_VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  An unknown win32 failure occurred..
        /// </summary>
        internal static string WINERR_D2DERR_WIN32_ERROR {
            get {
                return ResourceManager.GetString("WINERR_D2DERR_WIN32_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Objects used together must be created from the same factory instance..
        /// </summary>
        internal static string WINERR_D2DERR_WRONG_FACTORY {
            get {
                return ResourceManager.GetString("WINERR_D2DERR_WRONG_FACTORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The object was not in the correct state to process the method..
        /// </summary>
        internal static string WINERR_D2DERR_WRONG_STATE {
            get {
                return ResourceManager.GetString("WINERR_D2DERR_WRONG_STATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The supplied vector is zero..
        /// </summary>
        internal static string WINERR_D2DERR_ZERO_VECTOR {
            get {
                return ResourceManager.GetString("WINERR_D2DERR_ZERO_VECTOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  File not found.
        /// </summary>
        internal static string WINERR_D3D10_ERROR_FILE_NOT_FOUND {
            get {
                return ResourceManager.GetString("WINERR_D3D10_ERROR_FILE_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  There are too many unique state objects..
        /// </summary>
        internal static string WINERR_D3D10_ERROR_TOO_MANY_UNIQUE_STATE_OBJECTS {
            get {
                return ResourceManager.GetString("WINERR_D3D10_ERROR_TOO_MANY_UNIQUE_STATE_OBJECTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Deferred context requires Map-Discard usage pattern.
        /// </summary>
        internal static string WINERR_D3D11_ERROR_DEFERRED_CONTEXT_MAP_WITHOUT_INITIAL_DISCARD {
            get {
                return ResourceManager.GetString("WINERR_D3D11_ERROR_DEFERRED_CONTEXT_MAP_WITHOUT_INITIAL_DISCARD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  File not found.
        /// </summary>
        internal static string WINERR_D3D11_ERROR_FILE_NOT_FOUND {
            get {
                return ResourceManager.GetString("WINERR_D3D11_ERROR_FILE_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  There are too many unique state objects..
        /// </summary>
        internal static string WINERR_D3D11_ERROR_TOO_MANY_UNIQUE_STATE_OBJECTS {
            get {
                return ResourceManager.GetString("WINERR_D3D11_ERROR_TOO_MANY_UNIQUE_STATE_OBJECTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Therea are too many unique view objects..
        /// </summary>
        internal static string WINERR_D3D11_ERROR_TOO_MANY_UNIQUE_VIEW_OBJECTS {
            get {
                return ResourceManager.GetString("WINERR_D3D11_ERROR_TOO_MANY_UNIQUE_VIEW_OBJECTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Contect protection not available.
        /// </summary>
        internal static string WINERR_D3DERR_CANNOTPROTECTCONTENT {
            get {
                return ResourceManager.GetString("WINERR_D3DERR_CANNOTPROTECTCONTENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Conflicting render state.
        /// </summary>
        internal static string WINERR_D3DERR_CONFLICTINGRENDERSTATE {
            get {
                return ResourceManager.GetString("WINERR_D3DERR_CONFLICTINGRENDERSTATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Conflicting texture filter.
        /// </summary>
        internal static string WINERR_D3DERR_CONFLICTINGTEXTUREFILTER {
            get {
                return ResourceManager.GetString("WINERR_D3DERR_CONFLICTINGTEXTUREFILTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Conflicting texture palette.
        /// </summary>
        internal static string WINERR_D3DERR_CONFLICTINGTEXTUREPALETTE {
            get {
                return ResourceManager.GetString("WINERR_D3DERR_CONFLICTINGTEXTUREPALETTE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Hardware adapter reset by OS.
        /// </summary>
        internal static string WINERR_D3DERR_DEVICEHUNG {
            get {
                return ResourceManager.GetString("WINERR_D3DERR_DEVICEHUNG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Device lost.
        /// </summary>
        internal static string WINERR_D3DERR_DEVICELOST {
            get {
                return ResourceManager.GetString("WINERR_D3DERR_DEVICELOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Device not reset.
        /// </summary>
        internal static string WINERR_D3DERR_DEVICENOTRESET {
            get {
                return ResourceManager.GetString("WINERR_D3DERR_DEVICENOTRESET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Hardware device was removed.
        /// </summary>
        internal static string WINERR_D3DERR_DEVICEREMOVED {
            get {
                return ResourceManager.GetString("WINERR_D3DERR_DEVICEREMOVED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Driver internal error.
        /// </summary>
        internal static string WINERR_D3DERR_DRIVERINTERNALERROR {
            get {
                return ResourceManager.GetString("WINERR_D3DERR_DRIVERINTERNALERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Driver invalid call.
        /// </summary>
        internal static string WINERR_D3DERR_DRIVERINVALIDCALL {
            get {
                return ResourceManager.GetString("WINERR_D3DERR_DRIVERINVALIDCALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Invalid call.
        /// </summary>
        internal static string WINERR_D3DERR_INVALIDCALL {
            get {
                return ResourceManager.GetString("WINERR_D3DERR_INVALIDCALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Invalid device.
        /// </summary>
        internal static string WINERR_D3DERR_INVALIDDEVICE {
            get {
                return ResourceManager.GetString("WINERR_D3DERR_INVALIDDEVICE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  More data.
        /// </summary>
        internal static string WINERR_D3DERR_MOREDATA {
            get {
                return ResourceManager.GetString("WINERR_D3DERR_MOREDATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Not available.
        /// </summary>
        internal static string WINERR_D3DERR_NOTAVAILABLE {
            get {
                return ResourceManager.GetString("WINERR_D3DERR_NOTAVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Not found.
        /// </summary>
        internal static string WINERR_D3DERR_NOTFOUND {
            get {
                return ResourceManager.GetString("WINERR_D3DERR_NOTFOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Out of video memory.
        /// </summary>
        internal static string WINERR_D3DERR_OUTOFVIDEOMEMORY {
            get {
                return ResourceManager.GetString("WINERR_D3DERR_OUTOFVIDEOMEMORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Presentation statistics are disjoint.
        /// </summary>
        internal static string WINERR_D3DERR_PRESENT_STATISTICS_DISJOINT {
            get {
                return ResourceManager.GetString("WINERR_D3DERR_PRESENT_STATISTICS_DISJOINT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Too many operations.
        /// </summary>
        internal static string WINERR_D3DERR_TOOMANYOPERATIONS {
            get {
                return ResourceManager.GetString("WINERR_D3DERR_TOOMANYOPERATIONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Unsupported alpha arg.
        /// </summary>
        internal static string WINERR_D3DERR_UNSUPPORTEDALPHAARG {
            get {
                return ResourceManager.GetString("WINERR_D3DERR_UNSUPPORTEDALPHAARG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Unsupported alpha operation.
        /// </summary>
        internal static string WINERR_D3DERR_UNSUPPORTEDALPHAOPERATION {
            get {
                return ResourceManager.GetString("WINERR_D3DERR_UNSUPPORTEDALPHAOPERATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Unsupported color arg.
        /// </summary>
        internal static string WINERR_D3DERR_UNSUPPORTEDCOLORARG {
            get {
                return ResourceManager.GetString("WINERR_D3DERR_UNSUPPORTEDCOLORARG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Unsupported color operation.
        /// </summary>
        internal static string WINERR_D3DERR_UNSUPPORTEDCOLOROPERATION {
            get {
                return ResourceManager.GetString("WINERR_D3DERR_UNSUPPORTEDCOLOROPERATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Unsupported cryptographic system.
        /// </summary>
        internal static string WINERR_D3DERR_UNSUPPORTEDCRYPTO {
            get {
                return ResourceManager.GetString("WINERR_D3DERR_UNSUPPORTEDCRYPTO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Unsupported factor value.
        /// </summary>
        internal static string WINERR_D3DERR_UNSUPPORTEDFACTORVALUE {
            get {
                return ResourceManager.GetString("WINERR_D3DERR_UNSUPPORTEDFACTORVALUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Overlay is not supported.
        /// </summary>
        internal static string WINERR_D3DERR_UNSUPPORTEDOVERLAY {
            get {
                return ResourceManager.GetString("WINERR_D3DERR_UNSUPPORTEDOVERLAY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Overlay format is not supported.
        /// </summary>
        internal static string WINERR_D3DERR_UNSUPPORTEDOVERLAYFORMAT {
            get {
                return ResourceManager.GetString("WINERR_D3DERR_UNSUPPORTEDOVERLAYFORMAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Unsupported texture filter.
        /// </summary>
        internal static string WINERR_D3DERR_UNSUPPORTEDTEXTUREFILTER {
            get {
                return ResourceManager.GetString("WINERR_D3DERR_UNSUPPORTEDTEXTUREFILTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Wrong texture format.
        /// </summary>
        internal static string WINERR_D3DERR_WRONGTEXTUREFORMAT {
            get {
                return ResourceManager.GetString("WINERR_D3DERR_WRONGTEXTUREFORMAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The call succeeded but there won&apos;t be any mipmaps generated.
        /// </summary>
        internal static string WINERR_D3DOK_NOAUTOGEN {
            get {
                return ResourceManager.GetString("WINERR_D3DOK_NOAUTOGEN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Cannot attr sort.
        /// </summary>
        internal static string WINERR_D3DXERR_CANNOTATTRSORT {
            get {
                return ResourceManager.GetString("WINERR_D3DXERR_CANNOTATTRSORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Can not modify index buffer.
        /// </summary>
        internal static string WINERR_D3DXERR_CANNOTMODIFYINDEXBUFFER {
            get {
                return ResourceManager.GetString("WINERR_D3DXERR_CANNOTMODIFYINDEXBUFFER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Can Not remove last item.
        /// </summary>
        internal static string WINERR_D3DXERR_CANNOTREMOVELASTITEM {
            get {
                return ResourceManager.GetString("WINERR_D3DXERR_CANNOTREMOVELASTITEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Duplicate named fragment.
        /// </summary>
        internal static string WINERR_D3DXERR_DUPLICATENAMEDFRAGMENT {
            get {
                return ResourceManager.GetString("WINERR_D3DXERR_DUPLICATENAMEDFRAGMENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Invalid data.
        /// </summary>
        internal static string WINERR_D3DXERR_INVALIDDATA {
            get {
                return ResourceManager.GetString("WINERR_D3DXERR_INVALIDDATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Invalid mesh.
        /// </summary>
        internal static string WINERR_D3DXERR_INVALIDMESH {
            get {
                return ResourceManager.GetString("WINERR_D3DXERR_INVALIDMESH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Loaded mesh has no data.
        /// </summary>
        internal static string WINERR_D3DXERR_LOADEDMESHASNODATA {
            get {
                return ResourceManager.GetString("WINERR_D3DXERR_LOADEDMESHASNODATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Skinning not supported.
        /// </summary>
        internal static string WINERR_D3DXERR_SKINNINGNOTSUPPORTED {
            get {
                return ResourceManager.GetString("WINERR_D3DXERR_SKINNINGNOTSUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Too many influences.
        /// </summary>
        internal static string WINERR_D3DXERR_TOOMANYINFLUENCES {
            get {
                return ResourceManager.GetString("WINERR_D3DXERR_TOOMANYINFLUENCES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Bad array size.
        /// </summary>
        internal static string WINERR_D3DXFERR_BADARRAYSIZE {
            get {
                return ResourceManager.GetString("WINERR_D3DXFERR_BADARRAYSIZE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Bad cache file.
        /// </summary>
        internal static string WINERR_D3DXFERR_BADCACHEFILE {
            get {
                return ResourceManager.GetString("WINERR_D3DXFERR_BADCACHEFILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Bad data reference.
        /// </summary>
        internal static string WINERR_D3DXFERR_BADDATAREFERENCE {
            get {
                return ResourceManager.GetString("WINERR_D3DXFERR_BADDATAREFERENCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Bad file.
        /// </summary>
        internal static string WINERR_D3DXFERR_BADFILE {
            get {
                return ResourceManager.GetString("WINERR_D3DXFERR_BADFILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Bad file float size.
        /// </summary>
        internal static string WINERR_D3DXFERR_BADFILEFLOATSIZE {
            get {
                return ResourceManager.GetString("WINERR_D3DXFERR_BADFILEFLOATSIZE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Bad file type.
        /// </summary>
        internal static string WINERR_D3DXFERR_BADFILETYPE {
            get {
                return ResourceManager.GetString("WINERR_D3DXFERR_BADFILETYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Bad file version.
        /// </summary>
        internal static string WINERR_D3DXFERR_BADFILEVERSION {
            get {
                return ResourceManager.GetString("WINERR_D3DXFERR_BADFILEVERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Bad object.
        /// </summary>
        internal static string WINERR_D3DXFERR_BADOBJECT {
            get {
                return ResourceManager.GetString("WINERR_D3DXFERR_BADOBJECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Bad resource.
        /// </summary>
        internal static string WINERR_D3DXFERR_BADRESOURCE {
            get {
                return ResourceManager.GetString("WINERR_D3DXFERR_BADRESOURCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Bad type.
        /// </summary>
        internal static string WINERR_D3DXFERR_BADTYPE {
            get {
                return ResourceManager.GetString("WINERR_D3DXFERR_BADTYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Bad value.
        /// </summary>
        internal static string WINERR_D3DXFERR_BADVALUE {
            get {
                return ResourceManager.GetString("WINERR_D3DXFERR_BADVALUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  File not found.
        /// </summary>
        internal static string WINERR_D3DXFERR_FILENOTFOUND {
            get {
                return ResourceManager.GetString("WINERR_D3DXFERR_FILENOTFOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  No more data.
        /// </summary>
        internal static string WINERR_D3DXFERR_NOMOREDATA {
            get {
                return ResourceManager.GetString("WINERR_D3DXFERR_NOMOREDATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  No more objects.
        /// </summary>
        internal static string WINERR_D3DXFERR_NOMOREOBJECTS {
            get {
                return ResourceManager.GetString("WINERR_D3DXFERR_NOMOREOBJECTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Not done yet.
        /// </summary>
        internal static string WINERR_D3DXFERR_NOTDONEYET {
            get {
                return ResourceManager.GetString("WINERR_D3DXFERR_NOTDONEYET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Not found.
        /// </summary>
        internal static string WINERR_D3DXFERR_NOTFOUND {
            get {
                return ResourceManager.GetString("WINERR_D3DXFERR_NOTFOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Parse error.
        /// </summary>
        internal static string WINERR_D3DXFERR_PARSEERROR {
            get {
                return ResourceManager.GetString("WINERR_D3DXFERR_PARSEERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Resource not found.
        /// </summary>
        internal static string WINERR_D3DXFERR_RESOURCENOTFOUND {
            get {
                return ResourceManager.GetString("WINERR_D3DXFERR_RESOURCENOTFOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  This object is already initialized.
        /// </summary>
        internal static string WINERR_DDERR_ALREADYINITIALIZED {
            get {
                return ResourceManager.GetString("WINERR_DDERR_ALREADYINITIALIZED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  If a clipper object is attached to the source surface passed into a BltFast call..
        /// </summary>
        internal static string WINERR_DDERR_BLTFASTCANTCLIP {
            get {
                return ResourceManager.GetString("WINERR_DDERR_BLTFASTCANTCLIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  This surface can not be attached to the requested surface..
        /// </summary>
        internal static string WINERR_DDERR_CANNOTATTACHSURFACE {
            get {
                return ResourceManager.GetString("WINERR_DDERR_CANNOTATTACHSURFACE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  This surface can not be detached from the requested surface..
        /// </summary>
        internal static string WINERR_DDERR_CANNOTDETACHSURFACE {
            get {
                return ResourceManager.GetString("WINERR_DDERR_CANNOTDETACHSURFACE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows can not create any more DCs	 or a DC was requested for a paltte-indexed surface when the surface had no palette AND the display mode was not palette-indexed (in this case DirectDraw cannot select a proper palette into the DC)..
        /// </summary>
        internal static string WINERR_DDERR_CANTCREATEDC {
            get {
                return ResourceManager.GetString("WINERR_DDERR_CANTCREATEDC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t duplicate primary &amp; 3D surfaces	 or surfaces that are implicitly created..
        /// </summary>
        internal static string WINERR_DDERR_CANTDUPLICATE {
            get {
                return ResourceManager.GetString("WINERR_DDERR_CANTDUPLICATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Access to this surface is being refused because no driver exists which can supply a pointer to the surface. This is most likely to happen when attempting to lock the primary surface when no DCI provider is present. Will also happen on attempts to lock an optimized surface..
        /// </summary>
        internal static string WINERR_DDERR_CANTLOCKSURFACE {
            get {
                return ResourceManager.GetString("WINERR_DDERR_CANTLOCKSURFACE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The attempt to page lock a surface failed..
        /// </summary>
        internal static string WINERR_DDERR_CANTPAGELOCK {
            get {
                return ResourceManager.GetString("WINERR_DDERR_CANTPAGELOCK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The attempt to page unlock a surface failed..
        /// </summary>
        internal static string WINERR_DDERR_CANTPAGEUNLOCK {
            get {
                return ResourceManager.GetString("WINERR_DDERR_CANTPAGEUNLOCK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  an attempt was made to set a clip list for a clipper objec that is already monitoring an hwnd..
        /// </summary>
        internal static string WINERR_DDERR_CLIPPERISUSINGHWND {
            get {
                return ResourceManager.GetString("WINERR_DDERR_CLIPPERISUSINGHWND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  No src color key specified for this operation..
        /// </summary>
        internal static string WINERR_DDERR_COLORKEYNOTSET {
            get {
                return ResourceManager.GetString("WINERR_DDERR_COLORKEYNOTSET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Support is currently not available..
        /// </summary>
        internal static string WINERR_DDERR_CURRENTLYNOTAVAIL {
            get {
                return ResourceManager.GetString("WINERR_DDERR_CURRENTLYNOTAVAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  D3D has not yet been initialized..
        /// </summary>
        internal static string WINERR_DDERR_D3DNOTINITIALIZED {
            get {
                return ResourceManager.GetString("WINERR_DDERR_D3DNOTINITIALIZED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  A DC has already been returned for this surface. Only one DC can be retrieved per surface..
        /// </summary>
        internal static string WINERR_DDERR_DCALREADYCREATED {
            get {
                return ResourceManager.GetString("WINERR_DDERR_DCALREADYCREATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The specified surface type requires specification of the COMPLEX flag.
        /// </summary>
        internal static string WINERR_DDERR_DDSCAPSCOMPLEXREQUIRED {
            get {
                return ResourceManager.GetString("WINERR_DDERR_DDSCAPSCOMPLEXREQUIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Surfaces created by one direct draw device cannot be used directly by another direct draw device..
        /// </summary>
        internal static string WINERR_DDERR_DEVICEDOESNTOWNSURFACE {
            get {
                return ResourceManager.GetString("WINERR_DDERR_DEVICEDOESNTOWNSURFACE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  A DirectDraw object representing this driver has already been created for this process..
        /// </summary>
        internal static string WINERR_DDERR_DIRECTDRAWALREADYCREATED {
            get {
                return ResourceManager.GetString("WINERR_DDERR_DIRECTDRAWALREADYCREATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  An exception was encountered while performing the requested operation.
        /// </summary>
        internal static string WINERR_DDERR_EXCEPTION {
            get {
                return ResourceManager.GetString("WINERR_DDERR_EXCEPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  An attempt was made to set the cooperative level when it was already set to exclusive..
        /// </summary>
        internal static string WINERR_DDERR_EXCLUSIVEMODEALREADYSET {
            get {
                return ResourceManager.GetString("WINERR_DDERR_EXCLUSIVEMODEALREADYSET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The data has expired and is therefore no longer valid..
        /// </summary>
        internal static string WINERR_DDERR_EXPIRED {
            get {
                return ResourceManager.GetString("WINERR_DDERR_EXPIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Height of rectangle provided is not a multiple of reqd alignment.
        /// </summary>
        internal static string WINERR_DDERR_HEIGHTALIGN {
            get {
                return ResourceManager.GetString("WINERR_DDERR_HEIGHTALIGN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The CooperativeLevel HWND has already been set. It can not be reset while the process has surfaces or palettes created..
        /// </summary>
        internal static string WINERR_DDERR_HWNDALREADYSET {
            get {
                return ResourceManager.GetString("WINERR_DDERR_HWNDALREADYSET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HWND used by DirectDraw CooperativeLevel has been subclassed	 this prevents DirectDraw from restoring state..
        /// </summary>
        internal static string WINERR_DDERR_HWNDSUBCLASSED {
            get {
                return ResourceManager.GetString("WINERR_DDERR_HWNDSUBCLASSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  This surface can not be restored because it is an implicitly created surface..
        /// </summary>
        internal static string WINERR_DDERR_IMPLICITLYCREATED {
            get {
                return ResourceManager.GetString("WINERR_DDERR_IMPLICITLYCREATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Unable to match primary surface creation request with existing primary surface..
        /// </summary>
        internal static string WINERR_DDERR_INCOMPATIBLEPRIMARY {
            get {
                return ResourceManager.GetString("WINERR_DDERR_INCOMPATIBLEPRIMARY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  One or more of the caps bits passed to the callback are incorrect..
        /// </summary>
        internal static string WINERR_DDERR_INVALIDCAPS {
            get {
                return ResourceManager.GetString("WINERR_DDERR_INVALIDCAPS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  DirectDraw does not support provided Cliplist..
        /// </summary>
        internal static string WINERR_DDERR_INVALIDCLIPLIST {
            get {
                return ResourceManager.GetString("WINERR_DDERR_INVALIDCLIPLIST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The GUID passed to DirectDrawCreate is not a valid DirectDraw driver identifier..
        /// </summary>
        internal static string WINERR_DDERR_INVALIDDIRECTDRAWGUID {
            get {
                return ResourceManager.GetString("WINERR_DDERR_INVALIDDIRECTDRAWGUID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  DirectDraw does not support the requested mode.
        /// </summary>
        internal static string WINERR_DDERR_INVALIDMODE {
            get {
                return ResourceManager.GetString("WINERR_DDERR_INVALIDMODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  DirectDraw received a pointer that was an invalid DIRECTDRAW object..
        /// </summary>
        internal static string WINERR_DDERR_INVALIDOBJECT {
            get {
                return ResourceManager.GetString("WINERR_DDERR_INVALIDOBJECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  pixel format was invalid as specified.
        /// </summary>
        internal static string WINERR_DDERR_INVALIDPIXELFORMAT {
            get {
                return ResourceManager.GetString("WINERR_DDERR_INVALIDPIXELFORMAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  returned when the position of the overlay on the destionation is no longer legal for that destionation..
        /// </summary>
        internal static string WINERR_DDERR_INVALIDPOSITION {
            get {
                return ResourceManager.GetString("WINERR_DDERR_INVALIDPOSITION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Rectangle provided was invalid..
        /// </summary>
        internal static string WINERR_DDERR_INVALIDRECT {
            get {
                return ResourceManager.GetString("WINERR_DDERR_INVALIDRECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The specified stream contains invalid data.
        /// </summary>
        internal static string WINERR_DDERR_INVALIDSTREAM {
            get {
                return ResourceManager.GetString("WINERR_DDERR_INVALIDSTREAM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The requested action could not be performed because the surface was of the wrong type..
        /// </summary>
        internal static string WINERR_DDERR_INVALIDSURFACETYPE {
            get {
                return ResourceManager.GetString("WINERR_DDERR_INVALIDSURFACETYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Operation could not be carried out because one or more surfaces are locked.
        /// </summary>
        internal static string WINERR_DDERR_LOCKEDSURFACES {
            get {
                return ResourceManager.GetString("WINERR_DDERR_LOCKEDSURFACES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  There is more data available than the specified buffer size could hold.
        /// </summary>
        internal static string WINERR_DDERR_MOREDATA {
            get {
                return ResourceManager.GetString("WINERR_DDERR_MOREDATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The mode test has switched to a new mode..
        /// </summary>
        internal static string WINERR_DDERR_NEWMODE {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NEWMODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  There is no 3D present..
        /// </summary>
        internal static string WINERR_DDERR_NO3D {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NO3D", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Operation could not be carried out because there is no alpha accleration hardware present or available..
        /// </summary>
        internal static string WINERR_DDERR_NOALPHAHW {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NOALPHAHW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  No blter..
        /// </summary>
        internal static string WINERR_DDERR_NOBLTHW {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NOBLTHW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  no clip list available.
        /// </summary>
        internal static string WINERR_DDERR_NOCLIPLIST {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NOCLIPLIST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  No clipper object attached to surface object.
        /// </summary>
        internal static string WINERR_DDERR_NOCLIPPERATTACHED {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NOCLIPPERATTACHED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Operation could not be carried out because there is no color conversion hardware present or available..
        /// </summary>
        internal static string WINERR_DDERR_NOCOLORCONVHW {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NOCOLORCONVHW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Surface doesn&apos;t currently have a color key.
        /// </summary>
        internal static string WINERR_DDERR_NOCOLORKEY {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NOCOLORKEY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Operation could not be carried out because there is no hardware support of the dest color key..
        /// </summary>
        internal static string WINERR_DDERR_NOCOLORKEYHW {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NOCOLORKEYHW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Create function called without DirectDraw object method SetCooperativeLevel being called..
        /// </summary>
        internal static string WINERR_DDERR_NOCOOPERATIVELEVELSET {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NOCOOPERATIVELEVELSET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  No DC was ever created for this surface..
        /// </summary>
        internal static string WINERR_DDERR_NODC {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NODC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  No DirectDraw ROP hardware..
        /// </summary>
        internal static string WINERR_DDERR_NODDROPSHW {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NODDROPSHW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  A hardware only DirectDraw object creation was attempted but the driver did not support any hardware..
        /// </summary>
        internal static string WINERR_DDERR_NODIRECTDRAWHW {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NODIRECTDRAWHW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  No DirectDraw support possible with current display driver.
        /// </summary>
        internal static string WINERR_DDERR_NODIRECTDRAWSUPPORT {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NODIRECTDRAWSUPPORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The driver does not enumerate display mode refresh rates..
        /// </summary>
        internal static string WINERR_DDERR_NODRIVERSUPPORT {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NODRIVERSUPPORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  software emulation not available..
        /// </summary>
        internal static string WINERR_DDERR_NOEMULATION {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NOEMULATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Operation requires the application to have exclusive mode but the application does not have exclusive mode..
        /// </summary>
        internal static string WINERR_DDERR_NOEXCLUSIVEMODE {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NOEXCLUSIVEMODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Flipping visible surfaces is not supported..
        /// </summary>
        internal static string WINERR_DDERR_NOFLIPHW {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NOFLIPHW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Attempt was made to create or set a device window without first setting the focus window.
        /// </summary>
        internal static string WINERR_DDERR_NOFOCUSWINDOW {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NOFOCUSWINDOW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  There is no GDI present..
        /// </summary>
        internal static string WINERR_DDERR_NOGDI {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NOGDI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Clipper notification requires an HWND or no HWND has previously been set as the CooperativeLevel HWND..
        /// </summary>
        internal static string WINERR_DDERR_NOHWND {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NOHWND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Operation could not be carried out because there is no mip-map texture mapping hardware present or available..
        /// </summary>
        internal static string WINERR_DDERR_NOMIPMAPHW {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NOMIPMAPHW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Operation could not be carried out because there is no hardware present or available..
        /// </summary>
        internal static string WINERR_DDERR_NOMIRRORHW {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NOMIRRORHW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The monitor does not have EDID data..
        /// </summary>
        internal static string WINERR_DDERR_NOMONITORINFORMATION {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NOMONITORINFORMATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  An attempt was made to allocate non-local video memory from a device that does not support non-local video memory..
        /// </summary>
        internal static string WINERR_DDERR_NONONLOCALVIDMEM {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NONONLOCALVIDMEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device does not support optimized surfaces	 therefore no video memory optimized surfaces..
        /// </summary>
        internal static string WINERR_DDERR_NOOPTIMIZEHW {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NOOPTIMIZEHW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  returned when GetOverlayPosition is called on a overlay that UpdateOverlay has never been called on to establish a destionation..
        /// </summary>
        internal static string WINERR_DDERR_NOOVERLAYDEST {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NOOVERLAYDEST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Operation could not be carried out because there is no overlay hardware present or available..
        /// </summary>
        internal static string WINERR_DDERR_NOOVERLAYHW {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NOOVERLAYHW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  No palette object attached to this surface..
        /// </summary>
        internal static string WINERR_DDERR_NOPALETTEATTACHED {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NOPALETTEATTACHED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  No hardware support for 16 or 256 color palettes..
        /// </summary>
        internal static string WINERR_DDERR_NOPALETTEHW {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NOPALETTEHW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Operation could not be carried out because there is no appropriate raster op hardware present or available..
        /// </summary>
        internal static string WINERR_DDERR_NORASTEROPHW {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NORASTEROPHW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Operation could not be carried out because there is no rotation hardware present or available..
        /// </summary>
        internal static string WINERR_DDERR_NOROTATIONHW {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NOROTATIONHW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Operation could not be carried out because there is no stereo hardware present or available..
        /// </summary>
        internal static string WINERR_DDERR_NOSTEREOHARDWARE {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NOSTEREOHARDWARE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Operation could not be carried out because there is no hardware support for stretching.
        /// </summary>
        internal static string WINERR_DDERR_NOSTRETCHHW {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NOSTRETCHHW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Operation could not be carried out because there is no hardware present which supports stereo surfaces.
        /// </summary>
        internal static string WINERR_DDERR_NOSURFACELEFT {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NOSURFACELEFT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  DirectDrawSurface is not in 4 bit color palette and the requested operation requires 4 bit color palette..
        /// </summary>
        internal static string WINERR_DDERR_NOT4BITCOLOR {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NOT4BITCOLOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  DirectDrawSurface is not in 4 bit color index palette and the requested operation requires 4 bit color index palette..
        /// </summary>
        internal static string WINERR_DDERR_NOT4BITCOLORINDEX {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NOT4BITCOLORINDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  DirectDraw Surface is not in 8 bit color mode and the requested operation requires 8 bit color..
        /// </summary>
        internal static string WINERR_DDERR_NOT8BITCOLOR {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NOT8BITCOLOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  returned when an overlay member is called for a non-overlay surface.
        /// </summary>
        internal static string WINERR_DDERR_NOTAOVERLAYSURFACE {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NOTAOVERLAYSURFACE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Operation could not be carried out because there is no texture mapping hardware present or available..
        /// </summary>
        internal static string WINERR_DDERR_NOTEXTUREHW {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NOTEXTUREHW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  An attempt has been made to flip a surface that is not flippable..
        /// </summary>
        internal static string WINERR_DDERR_NOTFLIPPABLE {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NOTFLIPPABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Requested item was not found.
        /// </summary>
        internal static string WINERR_DDERR_NOTFOUND {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NOTFOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Surface is an optimized surface	 but has not yet been allocated any memory..
        /// </summary>
        internal static string WINERR_DDERR_NOTLOADED {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NOTLOADED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Surface was not locked.  An attempt to unlock a surface that was not locked at all.
        /// </summary>
        internal static string WINERR_DDERR_NOTLOCKED {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NOTLOCKED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Attempt was made to set a palette on a mipmap sublevel.
        /// </summary>
        internal static string WINERR_DDERR_NOTONMIPMAPSUBLEVEL {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NOTONMIPMAPSUBLEVEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  An attempt was made to page unlock a surface with no outstanding page locks..
        /// </summary>
        internal static string WINERR_DDERR_NOTPAGELOCKED {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NOTPAGELOCKED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The surface being used is not a palette-based surface.
        /// </summary>
        internal static string WINERR_DDERR_NOTPALETTIZED {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NOTPALETTIZED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Operation could not be carried out because there is no hardware support for vertical blank synchronized operations..
        /// </summary>
        internal static string WINERR_DDERR_NOVSYNCHW {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NOVSYNCHW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Operation could not be carried out because there is no hardware support for zbuffer blting..
        /// </summary>
        internal static string WINERR_DDERR_NOZBUFFERHW {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NOZBUFFERHW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Overlay surfaces could not be z layered based on their BltOrder because the hardware does not support z layering of overlays..
        /// </summary>
        internal static string WINERR_DDERR_NOZOVERLAYHW {
            get {
                return ResourceManager.GetString("WINERR_DDERR_NOZOVERLAYHW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The hardware needed for the requested operation has already been allocated..
        /// </summary>
        internal static string WINERR_DDERR_OUTOFCAPS {
            get {
                return ResourceManager.GetString("WINERR_DDERR_OUTOFCAPS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Operation could not be carried out because the source and destination rectangles are on the same surface and overlap each other..
        /// </summary>
        internal static string WINERR_DDERR_OVERLAPPINGRECTS {
            get {
                return ResourceManager.GetString("WINERR_DDERR_OVERLAPPINGRECTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  hardware does not support clipped overlays.
        /// </summary>
        internal static string WINERR_DDERR_OVERLAYCANTCLIP {
            get {
                return ResourceManager.GetString("WINERR_DDERR_OVERLAYCANTCLIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Can only have ony color key active at one time for overlays.
        /// </summary>
        internal static string WINERR_DDERR_OVERLAYCOLORKEYONLYONEACTIVE {
            get {
                return ResourceManager.GetString("WINERR_DDERR_OVERLAYCOLORKEYONLYONEACTIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  returned when GetOverlayPosition is called on a hidden overlay.
        /// </summary>
        internal static string WINERR_DDERR_OVERLAYNOTVISIBLE {
            get {
                return ResourceManager.GetString("WINERR_DDERR_OVERLAYNOTVISIBLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Access to this palette is being refused because the palette is already locked by another thread..
        /// </summary>
        internal static string WINERR_DDERR_PALETTEBUSY {
            get {
                return ResourceManager.GetString("WINERR_DDERR_PALETTEBUSY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  this process already has created a primary surface.
        /// </summary>
        internal static string WINERR_DDERR_PRIMARYSURFACEALREADYEXISTS {
            get {
                return ResourceManager.GetString("WINERR_DDERR_PRIMARYSURFACEALREADYEXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  region passed to Clipper::GetClipList is too small..
        /// </summary>
        internal static string WINERR_DDERR_REGIONTOOSMALL {
            get {
                return ResourceManager.GetString("WINERR_DDERR_REGIONTOOSMALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  This surface is already attached to the surface it is being attached to..
        /// </summary>
        internal static string WINERR_DDERR_SURFACEALREADYATTACHED {
            get {
                return ResourceManager.GetString("WINERR_DDERR_SURFACEALREADYATTACHED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  This surface is already a dependency of the surface it is being made a dependency of..
        /// </summary>
        internal static string WINERR_DDERR_SURFACEALREADYDEPENDENT {
            get {
                return ResourceManager.GetString("WINERR_DDERR_SURFACEALREADYDEPENDENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Access to this surface is being refused because the surface is already locked by another thread..
        /// </summary>
        internal static string WINERR_DDERR_SURFACEBUSY {
            get {
                return ResourceManager.GetString("WINERR_DDERR_SURFACEBUSY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Access to Surface refused because Surface is obscured..
        /// </summary>
        internal static string WINERR_DDERR_SURFACEISOBSCURED {
            get {
                return ResourceManager.GetString("WINERR_DDERR_SURFACEISOBSCURED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Access to this surface is being refused because the surface is gone. The DIRECTDRAWSURFACE object representing this surface should have Restore called on it..
        /// </summary>
        internal static string WINERR_DDERR_SURFACELOST {
            get {
                return ResourceManager.GetString("WINERR_DDERR_SURFACELOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The requested surface is not attached..
        /// </summary>
        internal static string WINERR_DDERR_SURFACENOTATTACHED {
            get {
                return ResourceManager.GetString("WINERR_DDERR_SURFACENOTATTACHED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The mode test has finished executing..
        /// </summary>
        internal static string WINERR_DDERR_TESTFINISHED {
            get {
                return ResourceManager.GetString("WINERR_DDERR_TESTFINISHED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Height requested by DirectDraw is too large..
        /// </summary>
        internal static string WINERR_DDERR_TOOBIGHEIGHT {
            get {
                return ResourceManager.GetString("WINERR_DDERR_TOOBIGHEIGHT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Size requested by DirectDraw is too large --  The individual height and width are OK..
        /// </summary>
        internal static string WINERR_DDERR_TOOBIGSIZE {
            get {
                return ResourceManager.GetString("WINERR_DDERR_TOOBIGSIZE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Width requested by DirectDraw is too large..
        /// </summary>
        internal static string WINERR_DDERR_TOOBIGWIDTH {
            get {
                return ResourceManager.GetString("WINERR_DDERR_TOOBIGWIDTH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Pixel format requested is unsupported by DirectDraw.
        /// </summary>
        internal static string WINERR_DDERR_UNSUPPORTEDFORMAT {
            get {
                return ResourceManager.GetString("WINERR_DDERR_UNSUPPORTEDFORMAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Bitmask in the pixel format requested is unsupported by DirectDraw.
        /// </summary>
        internal static string WINERR_DDERR_UNSUPPORTEDMASK {
            get {
                return ResourceManager.GetString("WINERR_DDERR_UNSUPPORTEDMASK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The display is currently in an unsupported mode.
        /// </summary>
        internal static string WINERR_DDERR_UNSUPPORTEDMODE {
            get {
                return ResourceManager.GetString("WINERR_DDERR_UNSUPPORTEDMODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  vertical blank is in progress.
        /// </summary>
        internal static string WINERR_DDERR_VERTICALBLANKINPROGRESS {
            get {
                return ResourceManager.GetString("WINERR_DDERR_VERTICALBLANKINPROGRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The video port is not active.
        /// </summary>
        internal static string WINERR_DDERR_VIDEONOTACTIVE {
            get {
                return ResourceManager.GetString("WINERR_DDERR_VIDEONOTACTIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Was still drawing.
        /// </summary>
        internal static string WINERR_DDERR_WASSTILLDRAWING {
            get {
                return ResourceManager.GetString("WINERR_DDERR_WASSTILLDRAWING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  This surface can not be restored because it was created in a different mode..
        /// </summary>
        internal static string WINERR_DDERR_WRONGMODE {
            get {
                return ResourceManager.GetString("WINERR_DDERR_WRONGMODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Rectangle provided was not horizontally aligned on reqd. boundary.
        /// </summary>
        internal static string WINERR_DDERR_XALIGN {
            get {
                return ResourceManager.GetString("WINERR_DDERR_XALIGN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The INF file for the selected device could not be found or is invalid or is damaged. &amp; The specified purpose ID can&apos;t be used for the call..
        /// </summary>
        internal static string WINERR_DIERR_BADINF {
            get {
                return ResourceManager.GetString("WINERR_DIERR_BADINF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The user cancelled the install operation. &amp; The stream already has allocated samples and the surface doesn&apos;t match the sample format..
        /// </summary>
        internal static string WINERR_DIERR_CANCELLED {
            get {
                return ResourceManager.GetString("WINERR_DIERR_CANCELLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The device is full. &amp; An invalid media subtype was specified..
        /// </summary>
        internal static string WINERR_DIERR_DEVICEFULL {
            get {
                return ResourceManager.GetString("WINERR_DIERR_DEVICEFULL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device driver-specific codes. Unless the specific driver has been precisely identified	 no meaning should be attributed to these values other than that the driver originated the error..
        /// </summary>
        internal static string WINERR_DIERR_DRIVERFIRST {
            get {
                return ResourceManager.GetString("WINERR_DIERR_DRIVERFIRST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Device installer errors..
        /// </summary>
        internal static string WINERR_DIERR_DRIVERLAST {
            get {
                return ResourceManager.GetString("WINERR_DIERR_DRIVERLAST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  An attempt was made to modify parameters of an effect while it is playing.  Not all hardware devices support altering the parameters of an effect while it is playing. &amp; Two pins of the same direction cannot be connected together..
        /// </summary>
        internal static string WINERR_DIERR_EFFECTPLAYING {
            get {
                return ResourceManager.GetString("WINERR_DIERR_EFFECTPLAYING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The device cannot be reinitialized because there are still effects attached to it. &amp; At least one of the pins involved in the operation is already connected..
        /// </summary>
        internal static string WINERR_DIERR_HASEFFECTS {
            get {
                return ResourceManager.GetString("WINERR_DIERR_HASEFFECTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The effect could not be downloaded because essential information is missing.  For example.
        /// </summary>
        internal static string WINERR_DIERR_INCOMPLETEEFFECT {
            get {
                return ResourceManager.GetString("WINERR_DIERR_INCOMPLETEEFFECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Unable to IDirectInputJoyConfig_Acquire because the user does not have sufficient privileges to change the joystick configuration. &amp; An invalid media type was specified.
        /// </summary>
        internal static string WINERR_DIERR_INSUFFICIENTPRIVS {
            get {
                return ResourceManager.GetString("WINERR_DIERR_INSUFFICIENTPRIVS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Registry entry or DLL for class installer invalid or class installer not found..
        /// </summary>
        internal static string WINERR_DIERR_INVALIDCLASSINSTALLER {
            get {
                return ResourceManager.GetString("WINERR_DIERR_INVALIDCLASSINSTALLER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  A mapper file function failed because reading or writing the user or IHV settings file failed. &amp; A run-time error occurred..
        /// </summary>
        internal static string WINERR_DIERR_MAPFILEFAIL {
            get {
                return ResourceManager.GetString("WINERR_DIERR_MAPFILEFAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Not all the requested information fit into the buffer. &amp; This object can only be created as an aggregated object..
        /// </summary>
        internal static string WINERR_DIERR_MOREDATA {
            get {
                return ResourceManager.GetString("WINERR_DIERR_MOREDATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Attempted to read buffered device data from a device that is not buffered. &amp; There is no common media type between these pins..
        /// </summary>
        internal static string WINERR_DIERR_NOTBUFFERED {
            get {
                return ResourceManager.GetString("WINERR_DIERR_NOTBUFFERED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The effect is not downloaded. &amp; The enumerator has become invalid..
        /// </summary>
        internal static string WINERR_DIERR_NOTDOWNLOADED {
            get {
                return ResourceManager.GetString("WINERR_DIERR_NOTDOWNLOADED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The operation cannot be performed unless the device is acquired in DISCL_EXCLUSIVE mode. &amp; This operation cannot be performed because the filter is active..
        /// </summary>
        internal static string WINERR_DIERR_NOTEXCLUSIVEACQUIRED {
            get {
                return ResourceManager.GetString("WINERR_DIERR_NOTEXCLUSIVEACQUIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SendDeviceData failed because more information was requested to be sent than can be sent to the device.  Some devices have restrictions on how much data can be sent to them.  (For example	 there might be a limit on the number of buttons that can be pressed at once.) &amp; No sample buffer allocator is available..
        /// </summary>
        internal static string WINERR_DIERR_REPORTFULL {
            get {
                return ResourceManager.GetString("WINERR_DIERR_REPORTFULL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The operation could not be completed because the device is not plugged in. &amp; The operation cannot be performed because the pins are not connected..
        /// </summary>
        internal static string WINERR_DIERR_UNPLUGGED {
            get {
                return ResourceManager.GetString("WINERR_DIERR_UNPLUGGED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The call succeeded	 but we had to substitute the 3D algorithm.
        /// </summary>
        internal static string WINERR_DS_NO_VIRTUALIZATION {
            get {
                return ResourceManager.GetString("WINERR_DS_NO_VIRTUALIZATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The call failed because resources (such as a priority level) were already being used by another caller.
        /// </summary>
        internal static string WINERR_DSERR_ALLOCATED {
            get {
                return ResourceManager.GetString("WINERR_DSERR_ALLOCATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  This object is already initialized.
        /// </summary>
        internal static string WINERR_DSERR_ALREADYINITIALIZED {
            get {
                return ResourceManager.GetString("WINERR_DSERR_ALREADYINITIALIZED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The specified WAVE format is not supported.
        /// </summary>
        internal static string WINERR_DSERR_BADFORMAT {
            get {
                return ResourceManager.GetString("WINERR_DSERR_BADFORMAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The GUID specified in an audiopath file does not match a valid MIXIN buffer.
        /// </summary>
        internal static string WINERR_DSERR_BADSENDBUFFERGUID {
            get {
                return ResourceManager.GetString("WINERR_DSERR_BADSENDBUFFERGUID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The buffer memory has been lost	 and must be restored.
        /// </summary>
        internal static string WINERR_DSERR_BUFFERLOST {
            get {
                return ResourceManager.GetString("WINERR_DSERR_BUFFERLOST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Tried to create a DSBCAPS_CTRLFX buffer shorter than DSBSIZE_FX_MIN milliseconds.
        /// </summary>
        internal static string WINERR_DSERR_BUFFERTOOSMALL {
            get {
                return ResourceManager.GetString("WINERR_DSERR_BUFFERTOOSMALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The control (vol.
        /// </summary>
        internal static string WINERR_DSERR_CONTROLUNAVAIL {
            get {
                return ResourceManager.GetString("WINERR_DSERR_CONTROLUNAVAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Attempt to use DirectSound 8 functionality on an older DirectSound object.
        /// </summary>
        internal static string WINERR_DSERR_DS8_REQUIRED {
            get {
                return ResourceManager.GetString("WINERR_DSERR_DS8_REQUIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Requested effects are not available.
        /// </summary>
        internal static string WINERR_DSERR_FXUNAVAILABLE {
            get {
                return ResourceManager.GetString("WINERR_DSERR_FXUNAVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  This call is not valid for the current state of this object.
        /// </summary>
        internal static string WINERR_DSERR_INVALIDCALL {
            get {
                return ResourceManager.GetString("WINERR_DSERR_INVALIDCALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  No sound driver is available for use.
        /// </summary>
        internal static string WINERR_DSERR_NODRIVER {
            get {
                return ResourceManager.GetString("WINERR_DSERR_NODRIVER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The object requested was not found (numerically equal to DMUS_E_NOT_FOUND).
        /// </summary>
        internal static string WINERR_DSERR_OBJECTNOTFOUND {
            get {
                return ResourceManager.GetString("WINERR_DSERR_OBJECTNOTFOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Another app has a higher priority level	 preventing this call from succeeding.
        /// </summary>
        internal static string WINERR_DSERR_OTHERAPPHASPRIO {
            get {
                return ResourceManager.GetString("WINERR_DSERR_OTHERAPPHASPRIO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The caller does not have the priority level required for the function to succeed.
        /// </summary>
        internal static string WINERR_DSERR_PRIOLEVELNEEDED {
            get {
                return ResourceManager.GetString("WINERR_DSERR_PRIOLEVELNEEDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  A circular loop of send effects was detected.
        /// </summary>
        internal static string WINERR_DSERR_SENDLOOP {
            get {
                return ResourceManager.GetString("WINERR_DSERR_SENDLOOP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  This object has not been initialized.
        /// </summary>
        internal static string WINERR_DSERR_UNINITIALIZED {
            get {
                return ResourceManager.GetString("WINERR_DSERR_UNINITIALIZED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The given interface is already registered..
        /// </summary>
        internal static string WINERR_DWRITE_E_ALREADYREGISTERED {
            get {
                return ResourceManager.GetString("WINERR_DWRITE_E_ALREADYREGISTERED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  A font file exists but could not be opened due to access denied.
        /// </summary>
        internal static string WINERR_DWRITE_E_FILEACCESS {
            get {
                return ResourceManager.GetString("WINERR_DWRITE_E_FILEACCESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Indicates an error in an input file such as a font file..
        /// </summary>
        internal static string WINERR_DWRITE_E_FILEFORMAT {
            get {
                return ResourceManager.GetString("WINERR_DWRITE_E_FILEFORMAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  A font file could not be opened because the file.
        /// </summary>
        internal static string WINERR_DWRITE_E_FILENOTFOUND {
            get {
                return ResourceManager.GetString("WINERR_DWRITE_E_FILENOTFOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  A font collection is obsolete due to changes in the system..
        /// </summary>
        internal static string WINERR_DWRITE_E_FONTCOLLECTIONOBSOLETE {
            get {
                return ResourceManager.GetString("WINERR_DWRITE_E_FONTCOLLECTIONOBSOLETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Indicates the specified font does not exist..
        /// </summary>
        internal static string WINERR_DWRITE_E_NOFONT {
            get {
                return ResourceManager.GetString("WINERR_DWRITE_E_NOFONT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates an error originating in DirectWrite code	 which is not expected to occur but is safe to recover from..
        /// </summary>
        internal static string WINERR_DWRITE_E_UNEXPECTED {
            get {
                return ResourceManager.GetString("WINERR_DWRITE_E_UNEXPECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Bad array size.
        /// </summary>
        internal static string WINERR_DXFILEERR_BADARRAYSIZE {
            get {
                return ResourceManager.GetString("WINERR_DXFILEERR_BADARRAYSIZE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Bad cache file.
        /// </summary>
        internal static string WINERR_DXFILEERR_BADCACHEFILE {
            get {
                return ResourceManager.GetString("WINERR_DXFILEERR_BADCACHEFILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Bad data reference.
        /// </summary>
        internal static string WINERR_DXFILEERR_BADDATAREFERENCE {
            get {
                return ResourceManager.GetString("WINERR_DXFILEERR_BADDATAREFERENCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Bad intrinsics.
        /// </summary>
        internal static string WINERR_DXFILEERR_BADINTRINSICS {
            get {
                return ResourceManager.GetString("WINERR_DXFILEERR_BADINTRINSICS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Internal error.
        /// </summary>
        internal static string WINERR_DXFILEERR_INTERNALERROR {
            get {
                return ResourceManager.GetString("WINERR_DXFILEERR_INTERNALERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  No internet.
        /// </summary>
        internal static string WINERR_DXFILEERR_NOINTERNET {
            get {
                return ResourceManager.GetString("WINERR_DXFILEERR_NOINTERNET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  No more data.
        /// </summary>
        internal static string WINERR_DXFILEERR_NOMOREDATA {
            get {
                return ResourceManager.GetString("WINERR_DXFILEERR_NOMOREDATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  No more objects.
        /// </summary>
        internal static string WINERR_DXFILEERR_NOMOREOBJECTS {
            get {
                return ResourceManager.GetString("WINERR_DXFILEERR_NOMOREOBJECTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  No more stream handles.
        /// </summary>
        internal static string WINERR_DXFILEERR_NOMORESTREAMHANDLES {
            get {
                return ResourceManager.GetString("WINERR_DXFILEERR_NOMORESTREAMHANDLES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Device hung due to badly formed commands..
        /// </summary>
        internal static string WINERR_DXGI_ERROR_DEVICE_HUNG {
            get {
                return ResourceManager.GetString("WINERR_DXGI_ERROR_DEVICE_HUNG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Hardware device removed..
        /// </summary>
        internal static string WINERR_DXGI_ERROR_DEVICE_REMOVED {
            get {
                return ResourceManager.GetString("WINERR_DXGI_ERROR_DEVICE_REMOVED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Device reset due to a badly formed commant..
        /// </summary>
        internal static string WINERR_DXGI_ERROR_DEVICE_RESET {
            get {
                return ResourceManager.GetString("WINERR_DXGI_ERROR_DEVICE_RESET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  An internal driver error occurred..
        /// </summary>
        internal static string WINERR_DXGI_ERROR_DRIVER_INTERNAL_ERROR {
            get {
                return ResourceManager.GetString("WINERR_DXGI_ERROR_DRIVER_INTERNAL_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The requested functionality is not supported by the device or the driver..
        /// </summary>
        internal static string WINERR_DXGI_ERROR_FRAME_STATISTICS_DISJOINT {
            get {
                return ResourceManager.GetString("WINERR_DXGI_ERROR_FRAME_STATISTICS_DISJOINT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The requested functionality is not supported by the device or the driver..
        /// </summary>
        internal static string WINERR_DXGI_ERROR_graphics_VIDPN_SOURCE_IN_USE {
            get {
                return ResourceManager.GetString("WINERR_DXGI_ERROR_graphics_VIDPN_SOURCE_IN_USE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The application has made an erroneous API call that it had enough information to avoid. This error is intended to denote that the application should be altered to avoid the error. Use of the debug version of the DXGI.DLL will provide run-time debug output with further information..
        /// </summary>
        internal static string WINERR_DXGI_ERROR_INVALID_CALL {
            get {
                return ResourceManager.GetString("WINERR_DXGI_ERROR_INVALID_CALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The specified size of the destination buffer is too small to hold the requested data..
        /// </summary>
        internal static string WINERR_DXGI_ERROR_MORE_DATA {
            get {
                return ResourceManager.GetString("WINERR_DXGI_ERROR_MORE_DATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The application attempted to perform an operation on an DXGI output that is only legal after the output has been claimed for exclusive owenership..
        /// </summary>
        internal static string WINERR_DXGI_ERROR_NONEXCLUSIVE {
            get {
                return ResourceManager.GetString("WINERR_DXGI_ERROR_NONEXCLUSIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The requested functionality is not supported by the device or the driver..
        /// </summary>
        internal static string WINERR_DXGI_ERROR_NOT_CURRENTLY_AVAILABLE {
            get {
                return ResourceManager.GetString("WINERR_DXGI_ERROR_NOT_CURRENTLY_AVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The item requested was not found. For GetPrivateData calls	 this means that the specified GUID had not been previously associated with the object..
        /// </summary>
        internal static string WINERR_DXGI_ERROR_NOT_FOUND {
            get {
                return ResourceManager.GetString("WINERR_DXGI_ERROR_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Remote desktop client disconnected..
        /// </summary>
        internal static string WINERR_DXGI_ERROR_REMOTE_CLIENT_DISCONNECTED {
            get {
                return ResourceManager.GetString("WINERR_DXGI_ERROR_REMOTE_CLIENT_DISCONNECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Remote desktop client is out of memory..
        /// </summary>
        internal static string WINERR_DXGI_ERROR_REMOTE_OUTOFMEMORY {
            get {
                return ResourceManager.GetString("WINERR_DXGI_ERROR_REMOTE_OUTOFMEMORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Unsupported..
        /// </summary>
        internal static string WINERR_DXGI_ERROR_UNSUPPORTED {
            get {
                return ResourceManager.GetString("WINERR_DXGI_ERROR_UNSUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Was still drawing..
        /// </summary>
        internal static string WINERR_DXGI_ERROR_WAS_STILL_DRAWING {
            get {
                return ResourceManager.GetString("WINERR_DXGI_ERROR_WAS_STILL_DRAWING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Target window is clipped..
        /// </summary>
        internal static string WINERR_DXGI_STATUS_CLIPPED {
            get {
                return ResourceManager.GetString("WINERR_DXGI_STATUS_CLIPPED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Display mode is changing.
        /// </summary>
        internal static string WINERR_DXGI_STATUS_MODE_CHANGE_IN_PROGRESS {
            get {
                return ResourceManager.GetString("WINERR_DXGI_STATUS_MODE_CHANGE_IN_PROGRESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Display mode has changed.
        /// </summary>
        internal static string WINERR_DXGI_STATUS_MODE_CHANGED {
            get {
                return ResourceManager.GetString("WINERR_DXGI_STATUS_MODE_CHANGED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  No access to desktop..
        /// </summary>
        internal static string WINERR_DXGI_STATUS_NO_DESKTOP_ACCESS {
            get {
                return ResourceManager.GetString("WINERR_DXGI_STATUS_NO_DESKTOP_ACCESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The target window or output has been occluded. The application should suspend rendering operations if possible..
        /// </summary>
        internal static string WINERR_DXGI_STATUS_OCCLUDED {
            get {
                return ResourceManager.GetString("WINERR_DXGI_STATUS_OCCLUDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  An error occurred when attempting to create a device..
        /// </summary>
        internal static string WINERR_DXUTERR_CREATINGDEVICE {
            get {
                return ResourceManager.GetString("WINERR_DXUTERR_CREATINGDEVICE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  An error occurred in the device create callback function..
        /// </summary>
        internal static string WINERR_DXUTERR_CREATINGDEVICEOBJECTS {
            get {
                return ResourceManager.GetString("WINERR_DXUTERR_CREATINGDEVICEOBJECTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The device was removed..
        /// </summary>
        internal static string WINERR_DXUTERR_DEVICEREMOVED {
            get {
                return ResourceManager.GetString("WINERR_DXUTERR_DEVICEREMOVED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Incorrect version of Direct3D or D3DX..
        /// </summary>
        internal static string WINERR_DXUTERR_INCORRECTVERSION {
            get {
                return ResourceManager.GetString("WINERR_DXUTERR_INCORRECTVERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  A media file could not be found..
        /// </summary>
        internal static string WINERR_DXUTERR_MEDIANOTFOUND {
            get {
                return ResourceManager.GetString("WINERR_DXUTERR_MEDIANOTFOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  No device could be found with the specified device settings..
        /// </summary>
        internal static string WINERR_DXUTERR_NOCOMPATIBLEDEVICES {
            get {
                return ResourceManager.GetString("WINERR_DXUTERR_NOCOMPATIBLEDEVICES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Could not initialize Direct3D..
        /// </summary>
        internal static string WINERR_DXUTERR_NODIRECT3D {
            get {
                return ResourceManager.GetString("WINERR_DXUTERR_NODIRECT3D", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The device interface has a non-zero reference count	 meaning that some objects were not released..
        /// </summary>
        internal static string WINERR_DXUTERR_NONZEROREFCOUNT {
            get {
                return ResourceManager.GetString("WINERR_DXUTERR_NONZEROREFCOUNT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  An error occurred when attempting to reset a device..
        /// </summary>
        internal static string WINERR_DXUTERR_RESETTINGDEVICE {
            get {
                return ResourceManager.GetString("WINERR_DXUTERR_RESETTINGDEVICE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  An error occurred in the device reset callback function..
        /// </summary>
        internal static string WINERR_DXUTERR_RESETTINGDEVICEOBJECTS {
            get {
                return ResourceManager.GetString("WINERR_DXUTERR_RESETTINGDEVICEOBJECTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Operation aborted.
        /// </summary>
        internal static string WINERR_E_ABORT {
            get {
                return ResourceManager.GetString("WINERR_E_ABORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Access is denied.
        /// </summary>
        internal static string WINERR_E_ACCESSDENIED {
            get {
                return ResourceManager.GetString("WINERR_E_ACCESSDENIED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Debugger is present..
        /// </summary>
        internal static string WINERR_E_DEBUGGER_PRESENT {
            get {
                return ResourceManager.GetString("WINERR_E_DEBUGGER_PRESENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  An undetermined error occurred.
        /// </summary>
        internal static string WINERR_E_FAIL {
            get {
                return ResourceManager.GetString("WINERR_E_FAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Invalid handle.
        /// </summary>
        internal static string WINERR_E_HANDLE {
            get {
                return ResourceManager.GetString("WINERR_E_HANDLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  An invalid parameter was passed to the returning function.
        /// </summary>
        internal static string WINERR_E_INVALIDARG {
            get {
                return ResourceManager.GetString("WINERR_E_INVALIDARG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The requested COM interface is not available.
        /// </summary>
        internal static string WINERR_E_NOINTERFACE {
            get {
                return ResourceManager.GetString("WINERR_E_NOINTERFACE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The function called is not supported at this time.
        /// </summary>
        internal static string WINERR_E_NOTIMPL {
            get {
                return ResourceManager.GetString("WINERR_E_NOTIMPL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Ran out of memory.
        /// </summary>
        internal static string WINERR_E_OUTOFMEMORY {
            get {
                return ResourceManager.GetString("WINERR_E_OUTOFMEMORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The data necessary to complete this operation is not yet available..
        /// </summary>
        internal static string WINERR_E_PENDING {
            get {
                return ResourceManager.GetString("WINERR_E_PENDING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Invalid pointer.
        /// </summary>
        internal static string WINERR_E_POINTER {
            get {
                return ResourceManager.GetString("WINERR_E_POINTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Catastrophic failure.
        /// </summary>
        internal static string WINERR_E_UNEXPECTED {
            get {
                return ResourceManager.GetString("WINERR_E_UNEXPECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Access is denied..
        /// </summary>
        internal static string WINERR_ERROR_ACCESS_DENIED {
            get {
                return ResourceManager.GetString("WINERR_ERROR_ACCESS_DENIED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  This object is already initialized.
        /// </summary>
        internal static string WINERR_ERROR_ALREADY_INITIALIZED {
            get {
                return ResourceManager.GetString("WINERR_ERROR_ALREADY_INITIALIZED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The object could not be created due to an incompatible driver version or mismatched or incomplete driver components..
        /// </summary>
        internal static string WINERR_ERROR_BAD_DRIVER_LEVEL {
            get {
                return ResourceManager.GetString("WINERR_ERROR_BAD_DRIVER_LEVEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The environment is incorrect..
        /// </summary>
        internal static string WINERR_ERROR_BAD_ENVIRONMENT {
            get {
                return ResourceManager.GetString("WINERR_ERROR_BAD_ENVIRONMENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The environment is incorrect..
        /// </summary>
        internal static string WINERR_ERROR_BAD_ENVIRONMENT1 {
            get {
                return ResourceManager.GetString("WINERR_ERROR_BAD_ENVIRONMENT1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  An attempt was made to load a program with an incorrect format..
        /// </summary>
        internal static string WINERR_ERROR_BAD_FORMAT {
            get {
                return ResourceManager.GetString("WINERR_ERROR_BAD_FORMAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  An attempt was made to load a program with an incorrect format..
        /// </summary>
        internal static string WINERR_ERROR_BAD_FORMAT1 {
            get {
                return ResourceManager.GetString("WINERR_ERROR_BAD_FORMAT1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The operation cannot be performed while the device is acquired..
        /// </summary>
        internal static string WINERR_ERROR_BUSY {
            get {
                return ResourceManager.GetString("WINERR_ERROR_BUSY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The system cannot find the file specified..
        /// </summary>
        internal static string WINERR_ERROR_FILE_NOT_FOUND {
            get {
                return ResourceManager.GetString("WINERR_ERROR_FILE_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The system cannot find the file specified..
        /// </summary>
        internal static string WINERR_ERROR_FILE_NOT_FOUND1 {
            get {
                return ResourceManager.GetString("WINERR_ERROR_FILE_NOT_FOUND1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The operation cannot be performed unless the device is acquired..
        /// </summary>
        internal static string WINERR_ERROR_INVALID_ACCESS {
            get {
                return ResourceManager.GetString("WINERR_ERROR_INVALID_ACCESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The storage control block address is invalid..
        /// </summary>
        internal static string WINERR_ERROR_INVALID_BLOCK {
            get {
                return ResourceManager.GetString("WINERR_ERROR_INVALID_BLOCK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The storage control block address is invalid..
        /// </summary>
        internal static string WINERR_ERROR_INVALID_BLOCK1 {
            get {
                return ResourceManager.GetString("WINERR_ERROR_INVALID_BLOCK1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The handle is invalid..
        /// </summary>
        internal static string WINERR_ERROR_INVALID_HANDLE {
            get {
                return ResourceManager.GetString("WINERR_ERROR_INVALID_HANDLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  No more items..
        /// </summary>
        internal static string WINERR_ERROR_NO_MORE_ITEMS {
            get {
                return ResourceManager.GetString("WINERR_ERROR_NO_MORE_ITEMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Not enough storage is available to process this command..
        /// </summary>
        internal static string WINERR_ERROR_NOT_ENOUGH_MEMORY {
            get {
                return ResourceManager.GetString("WINERR_ERROR_NOT_ENOUGH_MEMORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Not enough storage is available to process this command..
        /// </summary>
        internal static string WINERR_ERROR_NOT_ENOUGH_MEMORY1 {
            get {
                return ResourceManager.GetString("WINERR_ERROR_NOT_ENOUGH_MEMORY1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The specified property ID is not supported for the specified property set..
        /// </summary>
        internal static string WINERR_ERROR_NOT_FOUND {
            get {
                return ResourceManager.GetString("WINERR_ERROR_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  This object has not been initialized.
        /// </summary>
        internal static string WINERR_ERROR_NOT_READY {
            get {
                return ResourceManager.GetString("WINERR_ERROR_NOT_READY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The application requires a newer version of DirectInput..
        /// </summary>
        internal static string WINERR_ERROR_OLD_WIN_VERSION {
            get {
                return ResourceManager.GetString("WINERR_ERROR_OLD_WIN_VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The system cannot find the drive specified..
        /// </summary>
        internal static string WINERR_ERROR_OUTOFMEMORY {
            get {
                return ResourceManager.GetString("WINERR_ERROR_OUTOFMEMORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The system cannot find the path specified..
        /// </summary>
        internal static string WINERR_ERROR_PATH_NOT_FOUND {
            get {
                return ResourceManager.GetString("WINERR_ERROR_PATH_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The system cannot find the path specified..
        /// </summary>
        internal static string WINERR_ERROR_PATH_NOT_FOUND1 {
            get {
                return ResourceManager.GetString("WINERR_ERROR_PATH_NOT_FOUND1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Access to the device has been lost.  It must be re-acquired..
        /// </summary>
        internal static string WINERR_ERROR_READ_FAULT {
            get {
                return ResourceManager.GetString("WINERR_ERROR_READ_FAULT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The application was written for an unsupported prerelease version of DirectInput..
        /// </summary>
        internal static string WINERR_ERROR_RMODE_APP {
            get {
                return ResourceManager.GetString("WINERR_ERROR_RMODE_APP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The specified property set is not supported..
        /// </summary>
        internal static string WINERR_ERROR_SET_NOT_FOUND {
            get {
                return ResourceManager.GetString("WINERR_ERROR_SET_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The system cannot open the file..
        /// </summary>
        internal static string WINERR_ERROR_TOO_MANY_OPEN_FILES {
            get {
                return ResourceManager.GetString("WINERR_ERROR_TOO_MANY_OPEN_FILES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The system cannot open the file..
        /// </summary>
        internal static string WINERR_ERROR_TOO_MANY_OPEN_FILES1 {
            get {
                return ResourceManager.GetString("WINERR_ERROR_TOO_MANY_OPEN_FILES1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The sample is busy..
        /// </summary>
        internal static string WINERR_MS_E_BUSY {
            get {
                return ResourceManager.GetString("WINERR_MS_E_BUSY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The stream formats are not compatible..
        /// </summary>
        internal static string WINERR_MS_E_INCOMPATIBLE {
            get {
                return ResourceManager.GetString("WINERR_MS_E_INCOMPATIBLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The stream type is not valid for this operation..
        /// </summary>
        internal static string WINERR_MS_E_INVALIDSTREAMTYPE {
            get {
                return ResourceManager.GetString("WINERR_MS_E_INVALIDSTREAMTYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Seeking not supported for this object..
        /// </summary>
        internal static string WINERR_MS_E_NOSEEKING {
            get {
                return ResourceManager.GetString("WINERR_MS_E_NOSEEKING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  No stream can be found with the specified attributes..
        /// </summary>
        internal static string WINERR_MS_E_NOSTREAM {
            get {
                return ResourceManager.GetString("WINERR_MS_E_NOSTREAM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The object can&apos;t accept the call because its initialize function or equivalent has not been called..
        /// </summary>
        internal static string WINERR_MS_E_NOTINIT {
            get {
                return ResourceManager.GetString("WINERR_MS_E_NOTINIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The object is not in running state..
        /// </summary>
        internal static string WINERR_MS_E_NOTRUNNING {
            get {
                return ResourceManager.GetString("WINERR_MS_E_NOTRUNNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  MS_E_SOURCEALREADYDEFINED.
        /// </summary>
        internal static string WINERR_MS_E_SOURCEALREADYDEFINED {
            get {
                return ResourceManager.GetString("WINERR_MS_E_SOURCEALREADYDEFINED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  End of stream. Sample not updated..
        /// </summary>
        internal static string WINERR_MS_S_ENDOFSTREAM {
            get {
                return ResourceManager.GetString("WINERR_MS_S_ENDOFSTREAM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Class not registered.
        /// </summary>
        internal static string WINERR_REGDB_E_CLASSNOTREG {
            get {
                return ResourceManager.GetString("WINERR_REGDB_E_CLASSNOTREG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string WINERR_S_FALSE {
            get {
                return ResourceManager.GetString("WINERR_S_FALSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Resource not resident in memory.
        /// </summary>
        internal static string WINERR_S_NOT_RESIDENT {
            get {
                return ResourceManager.GetString("WINERR_S_NOT_RESIDENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The function completed successfully.
        /// </summary>
        internal static string WINERR_S_OK {
            get {
                return ResourceManager.GetString("WINERR_S_OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Desktop display mode has changed.
        /// </summary>
        internal static string WINERR_S_PRESENT_MODE_CHANGED {
            get {
                return ResourceManager.GetString("WINERR_S_PRESENT_MODE_CHANGED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Client window is occluded (minimized or other fullscreen).
        /// </summary>
        internal static string WINERR_S_PRESENT_OCCLUDED {
            get {
                return ResourceManager.GetString("WINERR_S_PRESENT_OCCLUDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Resource resident in shared memory.
        /// </summary>
        internal static string WINERR_S_RESIDENT_IN_SHARED_MEMORY {
            get {
                return ResourceManager.GetString("WINERR_S_RESIDENT_IN_SHARED_MEMORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  An overlay advise link already exists..
        /// </summary>
        internal static string WINERR_VFW_E_ADVISE_ALREADY_SET {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_ADVISE_ALREADY_SET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The queued command has already been canceled..
        /// </summary>
        internal static string WINERR_VFW_E_ALREADY_CANCELLED {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_ALREADY_CANCELLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Cannot change allocated memory while the filter is active..
        /// </summary>
        internal static string WINERR_VFW_E_ALREADY_COMMITTED {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_ALREADY_COMMITTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  A registry entry is corrupt..
        /// </summary>
        internal static string WINERR_VFW_E_BAD_KEY {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_BAD_KEY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The Video CD can&apos;t be read correctly by the device or is the data is corrupt..
        /// </summary>
        internal static string WINERR_VFW_E_BAD_VIDEOCD {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_BAD_VIDEOCD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  An invalid alignment was specified..
        /// </summary>
        internal static string WINERR_VFW_E_BADALIGN {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_BADALIGN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  No buffer space has been set.
        /// </summary>
        internal static string WINERR_VFW_E_BUFFER_NOTSET {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_BUFFER_NOTSET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The buffer is not big enough..
        /// </summary>
        internal static string WINERR_VFW_E_BUFFER_OVERFLOW {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_BUFFER_OVERFLOW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The buffer is not full enough..
        /// </summary>
        internal static string WINERR_VFW_E_BUFFER_UNDERFLOW {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_BUFFER_UNDERFLOW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  One or more buffers are still active..
        /// </summary>
        internal static string WINERR_VFW_E_BUFFERS_OUTSTANDING {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_BUFFERS_OUTSTANDING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  No combination of intermediate filters could be found to make the connection..
        /// </summary>
        internal static string WINERR_VFW_E_CANNOT_CONNECT {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_CANNOT_CONNECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The source filter for this file could not be loaded..
        /// </summary>
        internal static string WINERR_VFW_E_CANNOT_LOAD_SOURCE_FILTER {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_CANNOT_LOAD_SOURCE_FILTER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  No combination of filters could be found to render the stream..
        /// </summary>
        internal static string WINERR_VFW_E_CANNOT_RENDER {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_CANNOT_RENDER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  An operation failed due to a certification failure..
        /// </summary>
        internal static string WINERR_VFW_E_CERTIFICATION_FAILURE {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_CERTIFICATION_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Could not change formats dynamically..
        /// </summary>
        internal static string WINERR_VFW_E_CHANGING_FORMAT {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_CHANGING_FORMAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The filter graph is circular..
        /// </summary>
        internal static string WINERR_VFW_E_CIRCULAR_GRAPH {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_CIRCULAR_GRAPH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Setting a palette would conflict with the color key already set..
        /// </summary>
        internal static string WINERR_VFW_E_COLOR_KEY_SET {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_COLOR_KEY_SET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Copy protection cannot be enabled. Please make sure any other copy protected content is not being shown now..
        /// </summary>
        internal static string WINERR_VFW_E_COPYPROT_FAILED {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_COPYPROT_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Cannot render the file because it is corrupt..
        /// </summary>
        internal static string WINERR_VFW_E_CORRUPT_GRAPH_FILE {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_CORRUPT_GRAPH_FILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Either DirectDraw has not been installed or the Video Card capabilities are not suitable. Make sure the display is not in 16 color mode..
        /// </summary>
        internal static string WINERR_VFW_E_DDRAW_CAPS_NOT_SUITABLE {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_DDRAW_CAPS_NOT_SUITABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Version number of DirectDraw not suitable. Make sure to install dx5 or higher version..
        /// </summary>
        internal static string WINERR_VFW_E_DDRAW_VERSION_NOT_SUITABLE {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_DDRAW_VERSION_NOT_SUITABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  An attempt to add a filter with a duplicate name failed..
        /// </summary>
        internal static string WINERR_VFW_E_DUPLICATE_NAME {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_DUPLICATE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The specified command was either cancelled or no longer exists..
        /// </summary>
        internal static string WINERR_VFW_E_DVD_CMD_CANCELLED {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_DVD_CMD_CANCELLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  DVD-Video playback graph could not be built due to insufficient decoders..
        /// </summary>
        internal static string WINERR_VFW_E_DVD_DECNOTENOUGH {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_DVD_DECNOTENOUGH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  DVD-Video playback graph has not been built yet..
        /// </summary>
        internal static string WINERR_VFW_E_DVD_GRAPHNOTREADY {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_DVD_GRAPHNOTREADY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The region was not compatible with the current drive..
        /// </summary>
        internal static string WINERR_VFW_E_DVD_INCOMPATIBLE_REGION {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_DVD_INCOMPATIBLE_REGION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The specified path does not point to a valid DVD disc..
        /// </summary>
        internal static string WINERR_VFW_E_DVD_INVALID_DISC {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_DVD_INVALID_DISC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  This Operation is not permitted in the current domain..
        /// </summary>
        internal static string WINERR_VFW_E_DVD_INVALIDDOMAIN {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_DVD_INVALIDDOMAIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The current parental level was too low..
        /// </summary>
        internal static string WINERR_VFW_E_DVD_LOW_PARENTAL_LEVEL {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_DVD_LOW_PARENTAL_LEVEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The specified menu doesn&apos;t exist..
        /// </summary>
        internal static string WINERR_VFW_E_DVD_MENU_DOES_NOT_EXIST {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_DVD_MENU_DOES_NOT_EXIST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The requested DVD stream attribute does not exist..
        /// </summary>
        internal static string WINERR_VFW_E_DVD_NO_ATTRIBUTES {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_DVD_NO_ATTRIBUTES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified button is invalid or is not present at the current time	 or there is no button present at the specified location..
        /// </summary>
        internal static string WINERR_VFW_E_DVD_NO_BUTTON {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_DVD_NO_BUTTON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Currently there is no GoUp (Annex J user function) program chain (PGC)..
        /// </summary>
        internal static string WINERR_VFW_E_DVD_NO_GOUP_PGC {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_DVD_NO_GOUP_PGC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  There is currently no resume information..
        /// </summary>
        internal static string WINERR_VFW_E_DVD_NO_RESUME_INFORMATION {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_DVD_NO_RESUME_INFORMATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The current audio is not karaoke content..
        /// </summary>
        internal static string WINERR_VFW_E_DVD_NOT_IN_KARAOKE_MODE {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_DVD_NOT_IN_KARAOKE_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  This User Operation is inhibited by DVD Content at this time..
        /// </summary>
        internal static string WINERR_VFW_E_DVD_OPERATION_INHIBITED {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_DVD_OPERATION_INHIBITED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  DVD-Video playback graph building failed..
        /// </summary>
        internal static string WINERR_VFW_E_DVD_RENDERFAIL {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_DVD_RENDERFAIL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The state data was corrupt..
        /// </summary>
        internal static string WINERR_VFW_E_DVD_STATE_CORRUPT {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_DVD_STATE_CORRUPT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The state data is from a different disc..
        /// </summary>
        internal static string WINERR_VFW_E_DVD_STATE_WRONG_DISC {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_DVD_STATE_WRONG_DISC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The data did not contain a recognized version..
        /// </summary>
        internal static string WINERR_VFW_E_DVD_STATE_WRONG_VERSION {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_DVD_STATE_WRONG_VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The specified stream is disabled and cannot be selected..
        /// </summary>
        internal static string WINERR_VFW_E_DVD_STREAM_DISABLED {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_DVD_STREAM_DISABLED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The operation depends on the current title number.
        /// </summary>
        internal static string WINERR_VFW_E_DVD_TITLE_UNKNOWN {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_DVD_TITLE_UNKNOWN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The operation cannot be performed at the current playback speed..
        /// </summary>
        internal static string WINERR_VFW_E_DVD_WRONG_SPEED {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_DVD_WRONG_SPEED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The list has already been exhausted..
        /// </summary>
        internal static string WINERR_VFW_E_ENUM_OUT_OF_RANGE {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_ENUM_OUT_OF_RANGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  A file appeared to be incomplete..
        /// </summary>
        internal static string WINERR_VFW_E_FILE_TOO_SHORT {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_FILE_TOO_SHORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Frame step is not supported on this configuration..
        /// </summary>
        internal static string WINERR_VFW_E_FRAME_STEP_UNSUPPORTED {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_FRAME_STEP_UNSUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Cannot call IVideoWindow methods while in full-screen mode..
        /// </summary>
        internal static string WINERR_VFW_E_IN_FULLSCREEN_MODE {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_IN_FULLSCREEN_MODE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  This file is corrupt: it contains an invalid class identifier..
        /// </summary>
        internal static string WINERR_VFW_E_INVALID_CLSID {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_INVALID_CLSID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The file format is invalid..
        /// </summary>
        internal static string WINERR_VFW_E_INVALID_FILE_FORMAT {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_INVALID_FILE_FORMAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The version number of the file is invalid..
        /// </summary>
        internal static string WINERR_VFW_E_INVALID_FILE_VERSION {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_INVALID_FILE_VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  This file is corrupt: it contains an invalid media type..
        /// </summary>
        internal static string WINERR_VFW_E_INVALID_MEDIA_TYPE {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_INVALID_MEDIA_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The supplied rectangle is invalid..
        /// </summary>
        internal static string WINERR_VFW_E_INVALID_RECT {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_INVALID_RECT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  No media time stamp has been set for this sample..
        /// </summary>
        internal static string WINERR_VFW_E_MEDIA_TIME_NOT_SET {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_MEDIA_TIME_NOT_SET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Cannot change balance because audio device is mono only..
        /// </summary>
        internal static string WINERR_VFW_E_MONO_AUDIO_HW {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_MONO_AUDIO_HW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  ActiveMovie cannot play this video stream because it falls outside the constrained standard..
        /// </summary>
        internal static string WINERR_VFW_E_MPEG_NOT_CONSTRAINED {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_MPEG_NOT_CONSTRAINED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  This Advise cannot be canceled because it was not successfully set..
        /// </summary>
        internal static string WINERR_VFW_E_NO_ADVISE_SET {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_NO_ADVISE_SET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot play back the audio stream: no audio hardware is available	 or the hardware is not responding..
        /// </summary>
        internal static string WINERR_VFW_E_NO_AUDIO_HARDWARE {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_NO_AUDIO_HARDWARE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Capture hardware is available	 or the hardware is not responding..
        /// </summary>
        internal static string WINERR_VFW_E_NO_CAPTURE_HARDWARE {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_NO_CAPTURE_HARDWARE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Cannot lock for synchronization because no clock has been defined..
        /// </summary>
        internal static string WINERR_VFW_E_NO_CLOCK {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_NO_CLOCK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  No matching color key is available..
        /// </summary>
        internal static string WINERR_VFW_E_NO_COLOR_KEY_FOUND {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_NO_COLOR_KEY_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  No color key has been set..
        /// </summary>
        internal static string WINERR_VFW_E_NO_COLOR_KEY_SET {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_NO_COLOR_KEY_SET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Cannot play back the video stream: no suitable decompressor could be found..
        /// </summary>
        internal static string WINERR_VFW_E_NO_DECOMPRESSOR {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_NO_DECOMPRESSOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Display does not use a palette..
        /// </summary>
        internal static string WINERR_VFW_E_NO_DISPLAY_PALETTE {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_NO_DISPLAY_PALETTE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  A full-screen mode is not available..
        /// </summary>
        internal static string WINERR_VFW_E_NO_FULLSCREEN {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_NO_FULLSCREEN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  A required interface has not been implemented..
        /// </summary>
        internal static string WINERR_VFW_E_NO_INTERFACE {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_NO_INTERFACE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  No full-screen modes are available..
        /// </summary>
        internal static string WINERR_VFW_E_NO_MODEX_AVAILABLE {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_NO_MODEX_AVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  No palette is available..
        /// </summary>
        internal static string WINERR_VFW_E_NO_PALETTE_AVAILABLE {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_NO_PALETTE_AVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Quality messages could not be sent because no quality sink has been defined..
        /// </summary>
        internal static string WINERR_VFW_E_NO_SINK {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_NO_SINK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Cannot get or set time related information on an object that is using a time format of TIME_FORMAT_NONE..
        /// </summary>
        internal static string WINERR_VFW_E_NO_TIME_FORMAT {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_NO_TIME_FORMAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  No media time format has been selected..
        /// </summary>
        internal static string WINERR_VFW_E_NO_TIME_FORMAT_SET {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_NO_TIME_FORMAT_SET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Pins cannot connect due to not supporting the same transport..
        /// </summary>
        internal static string WINERR_VFW_E_NO_TRANSPORT {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_NO_TRANSPORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No VideoPort hardware is available	 or the hardware is not responding..
        /// </summary>
        internal static string WINERR_VFW_E_NO_VP_HARDWARE {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_NO_VP_HARDWARE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Updates are not allowed in this state..
        /// </summary>
        internal static string WINERR_VFW_E_NOT_ALLOWED_TO_SAVE {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_NOT_ALLOWED_TO_SAVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Cannot allocate a sample when the allocator is not active..
        /// </summary>
        internal static string WINERR_VFW_E_NOT_COMMITTED {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_NOT_COMMITTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  An object or name was not found..
        /// </summary>
        internal static string WINERR_VFW_E_NOT_FOUND {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Cannot perform the requested function on an object that is not in the filter graph..
        /// </summary>
        internal static string WINERR_VFW_E_NOT_IN_GRAPH {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_NOT_IN_GRAPH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Current pin connection is not using the IOverlay transport..
        /// </summary>
        internal static string WINERR_VFW_E_NOT_OVERLAY_CONNECTION {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_NOT_OVERLAY_CONNECTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The operation could not be performed because the filter is not paused..
        /// </summary>
        internal static string WINERR_VFW_E_NOT_PAUSED {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_NOT_PAUSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The operation could not be performed because the filter is not running..
        /// </summary>
        internal static string WINERR_VFW_E_NOT_RUNNING {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_NOT_RUNNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Current pin connection is not using the IMemInputPin transport..
        /// </summary>
        internal static string WINERR_VFW_E_NOT_SAMPLE_CONNECTION {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_NOT_SAMPLE_CONNECTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The operation could not be performed because the filter is not stopped..
        /// </summary>
        internal static string WINERR_VFW_E_NOT_STOPPED {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_NOT_STOPPED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  There is not enough Video Memory at this display resolution and number of colors. Reducing resolution might help..
        /// </summary>
        internal static string WINERR_VFW_E_OUT_OF_VIDEO_MEMORY {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_OUT_OF_VIDEO_MEMORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Setting a color key would conflict with the palette already set..
        /// </summary>
        internal static string WINERR_VFW_E_PALETTE_SET {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_PALETTE_SET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  IPinFlowControl::Block() has been called on another thread.  The current thread cannot make any assumptions about this pin&apos;s block state..
        /// </summary>
        internal static string WINERR_VFW_E_PIN_ALREADY_BLOCKED {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_PIN_ALREADY_BLOCKED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  This thread has already blocked this output pin.  There is no need to call IPinFlowControl::Block() again..
        /// </summary>
        internal static string WINERR_VFW_E_PIN_ALREADY_BLOCKED_ON_THIS_THREAD {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_PIN_ALREADY_BLOCKED_ON_THIS_THREAD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  ActiveMovie cannot play MPEG movies on this processor..
        /// </summary>
        internal static string WINERR_VFW_E_PROCESSOR_NOT_SUITABLE {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_PROCESSOR_NOT_SUITABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The connection cannot be made because the stream is read only and the filter alters the data..
        /// </summary>
        internal static string WINERR_VFW_E_READ_ONLY {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_READ_ONLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Cannot play back the video stream: format &apos;RPZA&apos; is not supported..
        /// </summary>
        internal static string WINERR_VFW_E_RPZA {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_RPZA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  This sample cannot be rendered..
        /// </summary>
        internal static string WINERR_VFW_E_SAMPLE_REJECTED {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_SAMPLE_REJECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  This sample cannot be rendered because the end of the stream has been reached..
        /// </summary>
        internal static string WINERR_VFW_E_SAMPLE_REJECTED_EOS {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_SAMPLE_REJECTED_EOS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  No time stamp has been set for this sample..
        /// </summary>
        internal static string WINERR_VFW_E_SAMPLE_TIME_NOT_SET {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_SAMPLE_TIME_NOT_SET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Cannot allocate memory because no size has been set..
        /// </summary>
        internal static string WINERR_VFW_E_SIZENOTSET {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_SIZENOTSET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The sample start time is after the sample end time..
        /// </summary>
        internal static string WINERR_VFW_E_START_TIME_AFTER_END {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_START_TIME_AFTER_END", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The state changed while waiting to process the sample..
        /// </summary>
        internal static string WINERR_VFW_E_STATE_CHANGED {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_STATE_CHANGED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  An attempt was made to queue a command for a time in the past..
        /// </summary>
        internal static string WINERR_VFW_E_TIME_ALREADY_PASSED {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_TIME_ALREADY_PASSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  This object cannot be used anymore as its time has expired..
        /// </summary>
        internal static string WINERR_VFW_E_TIME_EXPIRED {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_TIME_EXPIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  A time-out has expired..
        /// </summary>
        internal static string WINERR_VFW_E_TIMEOUT {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_TIMEOUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Too many colors for the current display settings..
        /// </summary>
        internal static string WINERR_VFW_E_TOO_MANY_COLORS {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_TOO_MANY_COLORS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  This pin cannot use the supplied media type..
        /// </summary>
        internal static string WINERR_VFW_E_TYPE_NOT_ACCEPTED {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_TYPE_NOT_ACCEPTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The media type of this file is not recognized..
        /// </summary>
        internal static string WINERR_VFW_E_UNKNOWN_FILE_TYPE {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_UNKNOWN_FILE_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Cannot play back the audio stream: the audio format is not supported..
        /// </summary>
        internal static string WINERR_VFW_E_UNSUPPORTED_AUDIO {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_UNSUPPORTED_AUDIO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Cannot play back the file.  The format is not supported..
        /// </summary>
        internal static string WINERR_VFW_E_UNSUPPORTED_STREAM {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_UNSUPPORTED_STREAM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Cannot play back the video stream: the video format is not supported..
        /// </summary>
        internal static string WINERR_VFW_E_UNSUPPORTED_VIDEO {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_UNSUPPORTED_VIDEO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The VideoPort connection negotiation process has failed..
        /// </summary>
        internal static string WINERR_VFW_E_VP_NEGOTIATION_FAILED {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_VP_NEGOTIATION_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The operation could not be performed because the filter is in the wrong state..
        /// </summary>
        internal static string WINERR_VFW_E_WRONG_STATE {
            get {
                return ResourceManager.GetString("WINERR_VFW_E_WRONG_STATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Cannot play back the audio stream: no audio hardware is available..
        /// </summary>
        internal static string WINERR_VFW_S_AUDIO_NOT_RENDERED {
            get {
                return ResourceManager.GetString("WINERR_VFW_S_AUDIO_NOT_RENDERED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The graph can&apos;t be cued because of lack of or corrupt data..
        /// </summary>
        internal static string WINERR_VFW_S_CANT_CUE {
            get {
                return ResourceManager.GetString("WINERR_VFW_S_CANT_CUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Some connections have failed and have been deferred..
        /// </summary>
        internal static string WINERR_VFW_S_CONNECTIONS_DEFERRED {
            get {
                return ResourceManager.GetString("WINERR_VFW_S_CONNECTIONS_DEFERRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  An attempt to add a filter with a duplicate name succeeded with a modified name..
        /// </summary>
        internal static string WINERR_VFW_S_DUPLICATE_NAME {
            get {
                return ResourceManager.GetString("WINERR_VFW_S_DUPLICATE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The audio stream did not contain sufficient information to determine the contents of each channel..
        /// </summary>
        internal static string WINERR_VFW_S_DVD_CHANNEL_CONTENTS_NOT_AVAILABLE {
            get {
                return ResourceManager.GetString("WINERR_VFW_S_DVD_CHANNEL_CONTENTS_NOT_AVAILABLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current title was not a sequential set of chapters (PGC)	 and the returned timing information might not be continuous..
        /// </summary>
        internal static string WINERR_VFW_S_DVD_NON_ONE_SEQUENTIAL {
            get {
                return ResourceManager.GetString("WINERR_VFW_S_DVD_NON_ONE_SEQUENTIAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The seek into the movie was not frame accurate..
        /// </summary>
        internal static string WINERR_VFW_S_DVD_NOT_ACCURATE {
            get {
                return ResourceManager.GetString("WINERR_VFW_S_DVD_NOT_ACCURATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The value returned had to be estimated.  It&apos;s accuracy can not be guaranteed..
        /// </summary>
        internal static string WINERR_VFW_S_ESTIMATED {
            get {
                return ResourceManager.GetString("WINERR_VFW_S_ESTIMATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A connection could not be made with the media type in the persistent graph	 but has been made with a negotiated media type..
        /// </summary>
        internal static string WINERR_VFW_S_MEDIA_TYPE_IGNORED {
            get {
                return ResourceManager.GetString("WINERR_VFW_S_MEDIA_TYPE_IGNORED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The end of the list has been reached..
        /// </summary>
        internal static string WINERR_VFW_S_NO_MORE_ITEMS {
            get {
                return ResourceManager.GetString("WINERR_VFW_S_NO_MORE_ITEMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The stop time for the sample was not set..
        /// </summary>
        internal static string WINERR_VFW_S_NO_STOP_TIME {
            get {
                return ResourceManager.GetString("WINERR_VFW_S_NO_STOP_TIME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was no preview pin available	 so the capture pin output is being split to provide both capture and preview..
        /// </summary>
        internal static string WINERR_VFW_S_NOPREVIEWPIN {
            get {
                return ResourceManager.GetString("WINERR_VFW_S_NOPREVIEWPIN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Some of the streams in this movie are in an unsupported format..
        /// </summary>
        internal static string WINERR_VFW_S_PARTIAL_RENDER {
            get {
                return ResourceManager.GetString("WINERR_VFW_S_PARTIAL_RENDER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  This success code is reserved for internal purposes within ActiveMovie..
        /// </summary>
        internal static string WINERR_VFW_S_RESERVED {
            get {
                return ResourceManager.GetString("WINERR_VFW_S_RESERVED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The resource specified is no longer needed..
        /// </summary>
        internal static string WINERR_VFW_S_RESOURCE_NOT_NEEDED {
            get {
                return ResourceManager.GetString("WINERR_VFW_S_RESOURCE_NOT_NEEDED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Cannot play back the video stream: format &apos;RPZA&apos; is not supported..
        /// </summary>
        internal static string WINERR_VFW_S_RPZA {
            get {
                return ResourceManager.GetString("WINERR_VFW_S_RPZA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The file contained some property settings that were not used..
        /// </summary>
        internal static string WINERR_VFW_S_SOME_DATA_IGNORED {
            get {
                return ResourceManager.GetString("WINERR_VFW_S_SOME_DATA_IGNORED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The state transition has not completed..
        /// </summary>
        internal static string WINERR_VFW_S_STATE_INTERMEDIATE {
            get {
                return ResourceManager.GetString("WINERR_VFW_S_STATE_INTERMEDIATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The stream has been turned off..
        /// </summary>
        internal static string WINERR_VFW_S_STREAM_OFF {
            get {
                return ResourceManager.GetString("WINERR_VFW_S_STREAM_OFF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Cannot play back the video stream: no suitable decompressor could be found..
        /// </summary>
        internal static string WINERR_VFW_S_VIDEO_NOT_RENDERED {
            get {
                return ResourceManager.GetString("WINERR_VFW_S_VIDEO_NOT_RENDERED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The engine is already initialized..
        /// </summary>
        internal static string WINERR_XACTENGINE_E_ALREADYINITIALIZED {
            get {
                return ResourceManager.GetString("WINERR_XACTENGINE_E_ALREADYINITIALIZED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Failed to create a directory for streaming wavebank data..
        /// </summary>
        internal static string WINERR_XACTENGINE_E_AUDITION_CREATEDIRECTORYFAILED {
            get {
                return ResourceManager.GetString("WINERR_XACTENGINE_E_AUDITION_CREATEDIRECTORYFAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Missing a DSP parameter..
        /// </summary>
        internal static string WINERR_XACTENGINE_E_AUDITION_INVALIDDSPINDEX {
            get {
                return ResourceManager.GetString("WINERR_XACTENGINE_E_AUDITION_INVALIDDSPINDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Missing an RPC curve..
        /// </summary>
        internal static string WINERR_XACTENGINE_E_AUDITION_INVALIDRPCINDEX {
            get {
                return ResourceManager.GetString("WINERR_XACTENGINE_E_AUDITION_INVALIDRPCINDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Invalid audition session..
        /// </summary>
        internal static string WINERR_XACTENGINE_E_AUDITION_INVALIDSESSION {
            get {
                return ResourceManager.GetString("WINERR_XACTENGINE_E_AUDITION_INVALIDSESSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Missing data for an audition command..
        /// </summary>
        internal static string WINERR_XACTENGINE_E_AUDITION_MISSINGDATA {
            get {
                return ResourceManager.GetString("WINERR_XACTENGINE_E_AUDITION_MISSINGDATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Wave does not exist in auditioned wavebank..
        /// </summary>
        internal static string WINERR_XACTENGINE_E_AUDITION_MISSINGWAVE {
            get {
                return ResourceManager.GetString("WINERR_XACTENGINE_E_AUDITION_MISSINGWAVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Missing a soundbank..
        /// </summary>
        internal static string WINERR_XACTENGINE_E_AUDITION_NOSOUNDBANK {
            get {
                return ResourceManager.GetString("WINERR_XACTENGINE_E_AUDITION_NOSOUNDBANK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Unknown command..
        /// </summary>
        internal static string WINERR_XACTENGINE_E_AUDITION_UNKNOWNCOMMAND {
            get {
                return ResourceManager.GetString("WINERR_XACTENGINE_E_AUDITION_UNKNOWNCOMMAND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Error writing a file during auditioning..
        /// </summary>
        internal static string WINERR_XACTENGINE_E_AUDITION_WRITEFILE {
            get {
                return ResourceManager.GetString("WINERR_XACTENGINE_E_AUDITION_WRITEFILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The engine has expired (demo or pre-release version)..
        /// </summary>
        internal static string WINERR_XACTENGINE_E_EXPIRED {
            get {
                return ResourceManager.GetString("WINERR_XACTENGINE_E_EXPIRED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Invalid call of method of function from callback..
        /// </summary>
        internal static string WINERR_XACTENGINE_E_INCALLBACK {
            get {
                return ResourceManager.GetString("WINERR_XACTENGINE_E_INCALLBACK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Fail to play due to instance limit..
        /// </summary>
        internal static string WINERR_XACTENGINE_E_INSTANCELIMITFAILTOPLAY {
            get {
                return ResourceManager.GetString("WINERR_XACTENGINE_E_INSTANCELIMITFAILTOPLAY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Invalid category..
        /// </summary>
        internal static string WINERR_XACTENGINE_E_INVALIDCATEGORY {
            get {
                return ResourceManager.GetString("WINERR_XACTENGINE_E_INVALIDCATEGORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Invalid cue index..
        /// </summary>
        internal static string WINERR_XACTENGINE_E_INVALIDCUEINDEX {
            get {
                return ResourceManager.GetString("WINERR_XACTENGINE_E_INVALIDCUEINDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Invalid data..
        /// </summary>
        internal static string WINERR_XACTENGINE_E_INVALIDDATA {
            get {
                return ResourceManager.GetString("WINERR_XACTENGINE_E_INVALIDDATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Invalid entry count for channel maps..
        /// </summary>
        internal static string WINERR_XACTENGINE_E_INVALIDENTRYCOUNT {
            get {
                return ResourceManager.GetString("WINERR_XACTENGINE_E_INVALIDENTRYCOUNT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Invalid sound offset or index..
        /// </summary>
        internal static string WINERR_XACTENGINE_E_INVALIDSOUNDOFFSETORINDEX {
            get {
                return ResourceManager.GetString("WINERR_XACTENGINE_E_INVALIDSOUNDOFFSETORINDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Invalid track index..
        /// </summary>
        internal static string WINERR_XACTENGINE_E_INVALIDTRACKINDEX {
            get {
                return ResourceManager.GetString("WINERR_XACTENGINE_E_INVALIDTRACKINDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Invalid usage..
        /// </summary>
        internal static string WINERR_XACTENGINE_E_INVALIDUSAGE {
            get {
                return ResourceManager.GetString("WINERR_XACTENGINE_E_INVALIDUSAGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Invalid variable index..
        /// </summary>
        internal static string WINERR_XACTENGINE_E_INVALIDVARIABLEINDEX {
            get {
                return ResourceManager.GetString("WINERR_XACTENGINE_E_INVALIDVARIABLEINDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Invalid wave index..
        /// </summary>
        internal static string WINERR_XACTENGINE_E_INVALIDWAVEINDEX {
            get {
                return ResourceManager.GetString("WINERR_XACTENGINE_E_INVALIDWAVEINDEX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  There can be only one audition engine..
        /// </summary>
        internal static string WINERR_XACTENGINE_E_MULTIPLEAUDITIONENGINES {
            get {
                return ResourceManager.GetString("WINERR_XACTENGINE_E_MULTIPLEAUDITIONENGINES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Friendly names are not included in the bank..
        /// </summary>
        internal static string WINERR_XACTENGINE_E_NOFRIENDLYNAMES {
            get {
                return ResourceManager.GetString("WINERR_XACTENGINE_E_NOFRIENDLYNAMES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Global Settings not loaded..
        /// </summary>
        internal static string WINERR_XACTENGINE_E_NOGLOBALSETTINGS {
            get {
                return ResourceManager.GetString("WINERR_XACTENGINE_E_NOGLOBALSETTINGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  No notification callback..
        /// </summary>
        internal static string WINERR_XACTENGINE_E_NONOTIFICATIONCALLBACK {
            get {
                return ResourceManager.GetString("WINERR_XACTENGINE_E_NONOTIFICATIONCALLBACK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  No audio device found..
        /// </summary>
        internal static string WINERR_XACTENGINE_E_NORENDERER {
            get {
                return ResourceManager.GetString("WINERR_XACTENGINE_E_NORENDERER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Notification already registered..
        /// </summary>
        internal static string WINERR_XACTENGINE_E_NOTIFICATIONREGISTERED {
            get {
                return ResourceManager.GetString("WINERR_XACTENGINE_E_NOTIFICATIONREGISTERED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The engine has not been initialized..
        /// </summary>
        internal static string WINERR_XACTENGINE_E_NOTINITIALIZED {
            get {
                return ResourceManager.GetString("WINERR_XACTENGINE_E_NOTINITIALIZED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  No wavebank exists for desired operation..
        /// </summary>
        internal static string WINERR_XACTENGINE_E_NOWAVEBANK {
            get {
                return ResourceManager.GetString("WINERR_XACTENGINE_E_NOWAVEBANK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Error reading a file..
        /// </summary>
        internal static string WINERR_XACTENGINE_E_READFILE {
            get {
                return ResourceManager.GetString("WINERR_XACTENGINE_E_READFILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Time offset for seeking is beyond the cue end..
        /// </summary>
        internal static string WINERR_XACTENGINE_E_SEEKTIMEBEYONDCUEEND {
            get {
                return ResourceManager.GetString("WINERR_XACTENGINE_E_SEEKTIMEBEYONDCUEEND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Time offset for seeking is beyond the wave end..
        /// </summary>
        internal static string WINERR_XACTENGINE_E_SEEKTIMEBEYONDWAVEEND {
            get {
                return ResourceManager.GetString("WINERR_XACTENGINE_E_SEEKTIMEBEYONDWAVEEND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Unable to select a variation..
        /// </summary>
        internal static string WINERR_XACTENGINE_E_SELECTVARIATION {
            get {
                return ResourceManager.GetString("WINERR_XACTENGINE_E_SELECTVARIATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Unknown event type..
        /// </summary>
        internal static string WINERR_XACTENGINE_E_UNKNOWNEVENT {
            get {
                return ResourceManager.GetString("WINERR_XACTENGINE_E_UNKNOWNEVENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The wavebank is not prepared..
        /// </summary>
        internal static string WINERR_XACTENGINE_E_WAVEBANKNOTPREPARED {
            get {
                return ResourceManager.GetString("WINERR_XACTENGINE_E_WAVEBANKNOTPREPARED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Requested audio format unsupported..
        /// </summary>
        internal static string WINERR_XAPO_E_FORMAT_UNSUPPORTED {
            get {
                return ResourceManager.GetString("WINERR_XAPO_E_FORMAT_UNSUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Device invalidated (unplugged.
        /// </summary>
        internal static string WINERR_XAUDIO2_E_DEVICE_INVALIDATED {
            get {
                return ResourceManager.GetString("WINERR_XAUDIO2_E_DEVICE_INVALIDATED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Invalid XAudio2 API call or arguments.
        /// </summary>
        internal static string WINERR_XAUDIO2_E_INVALID_CALL {
            get {
                return ResourceManager.GetString("WINERR_XAUDIO2_E_INVALID_CALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Failed to create an audio effect.
        /// </summary>
        internal static string WINERR_XAUDIO2_E_XAPO_CREATION_FAILED {
            get {
                return ResourceManager.GetString("WINERR_XAUDIO2_E_XAPO_CREATION_FAILED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Hardware XMA decoder error.
        /// </summary>
        internal static string WINERR_XAUDIO2_E_XMA_DECODER_ERROR {
            get {
                return ResourceManager.GetString("WINERR_XAUDIO2_E_XMA_DECODER_ERROR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Attribute &apos;%1&apos; has a value that does not match the fixed value defined in the DTD or schema..
        /// </summary>
        internal static string WINERR_XML_ATTRIBUTE_FIXED {
            get {
                return ResourceManager.GetString("WINERR_XML_ATTRIBUTE_FIXED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The attribute &apos;%1&apos; on this element is not defined in the DTD or schema..
        /// </summary>
        internal static string WINERR_XML_ATTRIBUTE_NOT_DEFINED {
            get {
                return ResourceManager.GetString("WINERR_XML_ATTRIBUTE_NOT_DEFINED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Attribute &apos;%1&apos; has an invalid value according to the DTD or schema..
        /// </summary>
        internal static string WINERR_XML_ATTRIBUTE_VALUE {
            get {
                return ResourceManager.GetString("WINERR_XML_ATTRIBUTE_VALUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Expecting: %1..
        /// </summary>
        internal static string WINERR_XML_DTD_EXPECTING {
            get {
                return ResourceManager.GetString("WINERR_XML_DTD_EXPECTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The validate method failed because a DTD or schema was not specified in the document..
        /// </summary>
        internal static string WINERR_XML_E_NODTD {
            get {
                return ResourceManager.GetString("WINERR_XML_E_NODTD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The validate method failed because the document does not contain exactly one root node..
        /// </summary>
        internal static string WINERR_XML_E_NOTWF {
            get {
                return ResourceManager.GetString("WINERR_XML_E_NOTWF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The attribute &apos;%1&apos; references the ID &apos;%2&apos;	 which is not defined in the document..
        /// </summary>
        internal static string WINERR_XML_ELEMENT_ID_NOT_FOUND {
            get {
                return ResourceManager.GetString("WINERR_XML_ELEMENT_ID_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Element content is incomplete according to the DTD or schema..
        /// </summary>
        internal static string WINERR_XML_ELEMENT_NOT_COMPLETE {
            get {
                return ResourceManager.GetString("WINERR_XML_ELEMENT_NOT_COMPLETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The element &apos;%1&apos; is used but not declared in the DTD or schema..
        /// </summary>
        internal static string WINERR_XML_ELEMENT_UNDECLARED {
            get {
                return ResourceManager.GetString("WINERR_XML_ELEMENT_UNDECLARED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Reference to undeclared element: &apos;%1&apos;..
        /// </summary>
        internal static string WINERR_XML_ELEMENT_UNDEFINED {
            get {
                return ResourceManager.GetString("WINERR_XML_ELEMENT_UNDEFINED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Element cannot be empty according to the DTD or schema..
        /// </summary>
        internal static string WINERR_XML_EMPTY_NOT_ALLOWED {
            get {
                return ResourceManager.GetString("WINERR_XML_EMPTY_NOT_ALLOWED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Reference to undefined entity &apos;%1&apos;..
        /// </summary>
        internal static string WINERR_XML_ENTITY_UNDEFINED {
            get {
                return ResourceManager.GetString("WINERR_XML_ENTITY_UNDEFINED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Cannot reference an external general parsed entity &apos;%1&apos; in an attribute value..
        /// </summary>
        internal static string WINERR_XML_EXTENT_IN_ATTR {
            get {
                return ResourceManager.GetString("WINERR_XML_EXTENT_IN_ATTR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Text is not allowed in this element according to the DTD or schema..
        /// </summary>
        internal static string WINERR_XML_ILLEGAL_TEXT {
            get {
                return ResourceManager.GetString("WINERR_XML_ILLEGAL_TEXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Entity &apos;%1&apos; contains an infinite entity reference loop..
        /// </summary>
        internal static string WINERR_XML_INFINITE_ENTITY_LOOP {
            get {
                return ResourceManager.GetString("WINERR_XML_INFINITE_ENTITY_LOOP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Element content is invalid according to the DTD or schema..
        /// </summary>
        internal static string WINERR_XML_INVALID_CONTENT {
            get {
                return ResourceManager.GetString("WINERR_XML_INVALID_CONTENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  An attribute declaration cannot contain multiple fixed values: &apos;%1&apos;..
        /// </summary>
        internal static string WINERR_XML_MULTI_FIXED_VALUES {
            get {
                return ResourceManager.GetString("WINERR_XML_MULTI_FIXED_VALUES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Cannot use the NDATA keyword in a parameter entity declaration..
        /// </summary>
        internal static string WINERR_XML_NDATA_INVALID_PE {
            get {
                return ResourceManager.GetString("WINERR_XML_NDATA_INVALID_PE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Cannot use unparsed entity &apos;%1&apos; in an entity reference..
        /// </summary>
        internal static string WINERR_XML_NDATA_INVALID_REF {
            get {
                return ResourceManager.GetString("WINERR_XML_NDATA_INVALID_REF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Required attribute &apos;%1&apos; is missing..
        /// </summary>
        internal static string WINERR_XML_REQUIRED_ATTRIBUTE_MISSING {
            get {
                return ResourceManager.GetString("WINERR_XML_REQUIRED_ATTRIBUTE_MISSING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Cannot use a general parsed entity &apos;%1&apos; as the value for attribute &apos;%2&apos;..
        /// </summary>
        internal static string WINERR_XML_REQUIRED_NDATA {
            get {
                return ResourceManager.GetString("WINERR_XML_REQUIRED_NDATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The name of the top-most element must match the name of the DOCTYPE declaration..
        /// </summary>
        internal static string WINERR_XML_ROOT_NAME_MISMATCH {
            get {
                return ResourceManager.GetString("WINERR_XML_ROOT_NAME_MISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Attribute &apos;%1&apos; must be a #FIXED attribute..
        /// </summary>
        internal static string WINERR_XML_XMLNS_FIXED {
            get {
                return ResourceManager.GetString("WINERR_XML_XMLNS_FIXED", resourceCulture);
            }
        }
    }
}
