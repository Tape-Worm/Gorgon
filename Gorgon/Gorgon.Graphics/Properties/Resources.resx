<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="GORGFX_BUFFER_IMMUTABLE" xml:space="preserve">
    <value>This buffer is immutable and this cannot be updated.</value>
  </data>
  <data name="GORGFX_TOSTR_FMTPITCH_COMPRESSED" xml:space="preserve">
    <value>Image pitch information.  Width={0} bytes, Size={1} bytes.  Format is compressed. Block count width: {2}, Block count height: {3}</value>
  </data>
  <data name="GORGFX_TOSTR_FMTPITCH" xml:space="preserve">
    <value>Image pitch information.  Width={0} bytes, Size={1} bytes.</value>
  </data>
  <data name="GORGFX_INDEX_OUT_OF_RANGE" xml:space="preserve">
    <value>The index is out of range.  The index value [{0}] must be be {1} or less than {2}.</value>
  </data>
  <data name="GORGFX_ERR_INVALID_OS" xml:space="preserve">
    <value>The Gorgon Graphics interface requires Windows 7 or greater.</value>
  </data>
  <data name="GORGFX_NOT_DEFAULT_USAGE" xml:space="preserve">
    <value>The usage for this object must be set to 'Default'.</value>
  </data>
  <data name="GORGFX_BUFFER_USAGE_CANT_LOCK" xml:space="preserve">
    <value>A buffer with a usage of [{0}] cannot be locked.</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="Gorgon_2_x_Logo_Small" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\Gorgon_2.x_Logo_Small.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="GORGFX_IMAGE_TYPE_INVALID" xml:space="preserve">
    <value>The image type '{0}' is not a valid image type.</value>
  </data>
  <data name="GORGFX_FONT_CANNOT_RETRIEVE_ABC" xml:space="preserve">
    <value>Could not retrieve character widths for the specified characters.</value>
  </data>
  <data name="GORGFX_FONT_CANNOT_RETRIEVE_KERNING" xml:space="preserve">
    <value>Cannot retrieve kerning pairs.</value>
  </data>
  <data name="GORGFX_INVALID_D3D_CONTEXT" xml:space="preserve">
    <value>A valid device context was not found.</value>
  </data>
  <data name="GORGFX_INVALID_ENUM_VALUE" xml:space="preserve">
    <value>The value [{0}] for parameter '{1}' is not valid.</value>
  </data>
  <data name="GORGFX_BUFFER_REQUIRES_NOOVERWRITE_DISCARD" xml:space="preserve">
    <value>The buffer must use [NoOverwrite] or [Discard] when locking.</value>
  </data>
  <data name="GORGFX_BUFFER_WRITE_ONLY" xml:space="preserve">
    <value>Cannot read this buffer.</value>
  </data>
  <data name="GORGFX_BUFFER_NOT_MULTIPLE" xml:space="preserve">
    <value>Cannot create the buffer.  The buffer size of {0} bytes is not a multiple of {1}.</value>
  </data>
  <data name="GORGFX_VERTEXBUFFER_BINDING_TOSTR" xml:space="preserve">
    <value>Vertex buffer binding.  Stride: {0}, Offset: {1}, VertexBuffer: {2}</value>
  </data>
  <data name="GORGFX_FORMAT_NOT_SUPPORTED" xml:space="preserve">
    <value>The format [{0}] is not supported.</value>
  </data>
  <data name="GORGFX_LAYOUT_ELEMENT_IN_USE" xml:space="preserve">
    <value>The offset [{0}] or context '{1}' is in use by another item with the same index or slot.</value>
  </data>
  <data name="GORGFX_DEVICE_ERR_CANNOT_FIND_DEVICES" xml:space="preserve">
    <value>Could not find any supported video devices.  Gorgon requires a device that can support a minimum of pixel shader model 4.</value>
  </data>
  <data name="GORGFX_PARAMETER_MUST_NOT_BE_EMPTY" xml:space="preserve">
    <value>The parameter must not be empty.</value>
  </data>
  <data name="GORGFX_SHADER_INCLUDE_TOSTR" xml:space="preserve">
    <value>Gorgon Shader Include '{0}'</value>
  </data>
  <data name="GORGFX_VALUE_OUT_OF_RANGE" xml:space="preserve">
    <value>The value is out of range.  The value [{0}] must be be 0 or less than {1}.</value>
  </data>
  <data name="GORGFX_BUFFER_IMMUTABLE_REQUIRES_DATA" xml:space="preserve">
    <value>Cannot create an immutable buffer without initial data to populate it.</value>
  </data>
  <data name="GORGFX_SHADER_VIEW_TOSTR" xml:space="preserve">
    <value>Gorgon Shader View.  Format: [{0}]</value>
  </data>
  <data name="GORGFX_BUFFER_NO_OVERWRITE_NOT_VALID" xml:space="preserve">
    <value>Cannot lock this buffer with a lock type of [NoOverwrite]</value>
  </data>
  <data name="GORGFX_VIEW_UNKNOWN_FORMAT" xml:space="preserve">
    <value>The format for the view must not be [Unknown].</value>
  </data>
  <data name="GORGFX_VIEW_ARRAY_COUNT_INVALID" xml:space="preserve">
    <value>The array count must be between 1 and {0}.</value>
  </data>
  <data name="GORGFX_VIEW_ARRAY_START_INVALID" xml:space="preserve">
    <value>The array start must be between 0 and less than {0}.</value>
  </data>
  <data name="GORGFX_VIEW_CANNOT_CAST_FORMAT" xml:space="preserve">
    <value>The format [{0}] is not compatiable or cannot be cast to [{1}].</value>
  </data>
  <data name="GORGFX_VIEW_CUBE_ARRAY_SIZE_INVALID" xml:space="preserve">
    <value>The array count for a cube texture must be a multiple of 6.</value>
  </data>
  <data name="GORGFX_VIEW_FORMAT_GROUP_INVALID" xml:space="preserve">
    <value>The resource format [{0}] is not the same group as the view format [{1}].</value>
  </data>
  <data name="GORGFX_VIEW_MIP_COUNT_INVALID" xml:space="preserve">
    <value>The mip map count must be between 1 and {0}.</value>
  </data>
  <data name="GORGFX_VIEW_MIP_START_INVALID" xml:space="preserve">
    <value>The mip map start must be between 0 and less than {0}.</value>
  </data>
  <data name="GORGFX_ERR_VIEW_NO_TYPELESS" xml:space="preserve">
    <value>The view cannot use a typeless format.</value>
  </data>
  <data name="GORGFX_ERR_VIEW_CANNOT_BIND_UNKNOWN_RESOURCE" xml:space="preserve">
    <value>Cannot bind the view to the resource, the resource type is not known.</value>
  </data>
  <data name="GORGFX_VIEW_UAV_NOT_SUPPORTED" xml:space="preserve">
    <value>Unordered access views cannot be applied to texture cubes or multi-sampled textures.</value>
  </data>
  <data name="GORGFX_VIEW_DEPTH_COUNT_INVALID" xml:space="preserve">
    <value>The depth count must be between 1 and {0}.</value>
  </data>
  <data name="GORGFX_VIEW_DEPTH_START_INVALID" xml:space="preserve">
    <value>The depth start must be between 0 and less than {0}.</value>
  </data>
  <data name="GORGFX_BUFFER_SIZE_TOO_SMALL" xml:space="preserve">
    <value>The buffer requires at least {0} byte(s).</value>
  </data>
  <data name="GORGFX_ERR_REQUIRES_FEATURE_LEVEL" xml:space="preserve">
    <value>A device with feature level {0} (or better) is necessary to use this object or perform this operation.</value>
  </data>
  <data name="GORGFX_EFFECT_MISSING_REQUIRED_PARAMS" xml:space="preserve">
    <value>The following parameters:\n{0}\nAre required for this effect, but are not present in the parameters list.</value>
  </data>
  <data name="GORGFX_EFFECT_PARAM_TOSTR" xml:space="preserve">
    <value>Effect Parameter: {0}, Value = {1}</value>
  </data>
  <data name="GORGFX_VIEW_CANT_BIND_STAGING_NO_VIEW" xml:space="preserve">
    <value>The resource view cannot be bound, it is either a staging resource or has no default shader view.</value>
  </data>
  <data name="GORGFX_VIEW_RESOURCE_NOT_TYPE" xml:space="preserve">
    <value>The view at index [{0}] is not bound to a resource of type '{1}'.</value>
  </data>
  <data name="GORGFX_VIEW_ALREADY_BOUND" xml:space="preserve">
    <value>The view was already bound to the shader at index [{0}].</value>
  </data>
  <data name="GORGFX_BUFFER_NO_STAGING_INVALID_FLAGS" xml:space="preserve">
    <value>Buffers that allow indirect arguments, shader views, unordered access views, raw views, render target views or can be used for output cannot have a usage of [Staging].</value>
  </data>
  <data name="GORGFX_BUFFER_OUTPUT_NO_UNORDERED" xml:space="preserve">
    <value>A buffer that allows stream output cannot have unordered access.</value>
  </data>
  <data name="GORGFX_BUFFER_RAW_ACCESS_REQUIRES_VIEW_ACCESS" xml:space="preserve">
    <value>A buffer that provides raw access must allow shader views and/or unordered resource views.</value>
  </data>
  <data name="GORGFX_BUFFER_NO_OUTPUT_INVALID_TYPE" xml:space="preserve">
    <value>The {0} buffer type cannot output data.</value>
  </data>
  <data name="GORGFX_BUFFER_NO_SHADER_VIEWS" xml:space="preserve">
    <value>The buffer does not allow shader resource views.</value>
  </data>
  <data name="GORGFX_BUFFER_NO_RAW_VIEWS" xml:space="preserve">
    <value>The buffer does not allow raw views.</value>
  </data>
  <data name="GORGFX_VIEW_RAW_INVALID_FORMAT" xml:space="preserve">
    <value>Raw shader views require a format of [R32_Uint], [R32_Int], or [R32_Float].</value>
  </data>
  <data name="GORGFX_VIEW_UNORDERED_RAW_INVALID_FORMAT" xml:space="preserve">
    <value>Raw unordered views require a format of [R32] (Typeless).</value>
  </data>
  <data name="GORGFX_BUFFER_STRUCTURE_SIZE_INVALID" xml:space="preserve">
    <value>The structure size must be greater than 0 and no greater than 2048 bytes.</value>
  </data>
  <data name="GORGFX_BUFFER_DYNAMIC_NEEDS_SHADER_VIEW" xml:space="preserve">
    <value>A generic dynamic buffer must be accessible via a shader view.</value>
  </data>
  <data name="GORGFX_BUFFER_NO_DYNAMIC_INVALID_FLAGS" xml:space="preserve">
    <value>Buffers that allow unordered access views, render target views, or can be used for output cannot have a usage of [Dynamic].</value>
  </data>
  <data name="GORGFX_BUFFER_SIZE_MISMATCH" xml:space="preserve">
    <value>The size of the buffers do not match.</value>
  </data>
  <data name="GORGFX_BUFFER_STAGING_NO_IMMUTABLE" xml:space="preserve">
    <value>Cannot create a staging buffer because the source buffer is immutable.</value>
  </data>
  <data name="GORGFX_VIEW_ELEMENT_OUT_OF_RANGE" xml:space="preserve">
    <value>The start element must be between 0 and {0}, and the element count must be between 1 and {1}.</value>
  </data>
  <data name="GORGFX_VIEW_SRV_NO_STAGING_OR_DYNAMIC" xml:space="preserve">
    <value>Shader resource views cannot be bound to resources that have a usage of [Staging] or [Dynamic].</value>
    <comment>Applies to textures/buffers</comment>
  </data>
  <data name="GORGFX_VIEW_UNORDERED_NO_STAGING_DYNAMIC" xml:space="preserve">
    <value>Cannot bind an unordered access view to a resource that has a usage of [Staging] or [Dynamic].</value>
    <comment>Applies to textures/buffers</comment>
  </data>
  <data name="GORGFX_TOSTR_MULTISAMPLEINFO" xml:space="preserve">
    <value>Multisampling count: {0}, quality: {1}.</value>
  </data>
  <data name="GORGFX_CONSTANTBUFFER_ALREADY_BOUND" xml:space="preserve">
    <value>The constant buffer '{0}' is already bound at slot [{1}].</value>
  </data>
  <data name="GORGFX_VERTEXBUFFER_ALREADY_BOUND" xml:space="preserve">
    <value>The vertex buffer '{0}' is already bound at slot [{1}].</value>
  </data>
  <data name="GORGFX_RENDERTARGET_NOT_SWAPCHAIN" xml:space="preserve">
    <value>The render target '{0}' is not bound to a swap chain.</value>
  </data>
  <data name="GORGFX_RTV_ALREADY_BOUND" xml:space="preserve">
    <value>The render target '{0}' view is already bound at slot [{1}]</value>
  </data>
  <data name="GORGFX_RTV_ARRAY_COUNT_MISMATCH" xml:space="preserve">
    <value>Cannot bind the render target '{0}'. Render targets must all have the same number of array indices.  Expected: {1}, Got: {2}</value>
  </data>
  <data name="GORGFX_RTV_BIT_DEPTH_MISMATCH" xml:space="preserve">
    <value>Cannot bind the render target '{0}'. SM2_a_b video devices require that all render targets have the same bit depth.</value>
  </data>
  <data name="GORGFX_RTV_BUFFER_SIZE_MISMATCH" xml:space="preserve">
    <value>Cannot bind the render target '{0}'. Render target buffers must be the same size. Expected: {1}, Got: {2}</value>
  </data>
  <data name="GORGFX_RTV_DEPTH_ARRAYCOUNT_MISMATCH" xml:space="preserve">
    <value>Cannot bind the depth/stencil buffer, the render target '{0}' has a texture with a different array count than the depth/stencil buffer.</value>
  </data>
  <data name="GORGFX_RTV_DEPTH_MIPCOUNT_MISMATCH" xml:space="preserve">
    <value>Cannot bind the depth/stencil buffer, the render target '{0}' has a texture with a different mip level count than the depth/stencil buffer.</value>
  </data>
  <data name="GORGFX_RTV_DEPTH_MULTISAMPLE_MISMATCH" xml:space="preserve">
    <value>Cannot bind the depth/stencil buffer, the render target '{0}' has a multisampling count/quaity of {1}/{2} and the depth/stencil buffer has a multisampling count/quality of {3}/{4}.</value>
  </data>
  <data name="GORGFX_RTV_DEPTH_RESOURCE_TYPE_INVALID" xml:space="preserve">
    <value>Cannot bind the depth/stencil buffer, there is a render target bound with the resource type of [{0}] and the depth/stencil is bound to a [{1}] resource type.</value>
  </data>
  <data name="GORGFX_RTV_DEPTH_RT_TYPE_INVALID" xml:space="preserve">
    <value>Cannot bind the depth/stencil buffer, there are render targets with the resource type of [{0}] bound to the pipeline.</value>
  </data>
  <data name="GORGFX_RTV_DIMENSIONS_MISMATCH" xml:space="preserve">
    <value>Cannot bind the render target '{0}'. Render targets must all have the same dimensions.  Expected: {1}x{2}x{3}, Got: {4}x{5}x{6}</value>
  </data>
  <data name="GORGFX_RTV_MIP_COUNT_MISMATCH" xml:space="preserve">
    <value>Cannot bind the render target '{0}'. Render targets must all have the same number of mip levels.  Expected: {1}, Got: {2}</value>
  </data>
  <data name="GORGFX_RTV_MULTISAMPLE_MISMATCH" xml:space="preserve">
    <value>Cannot bind the render target '{0}'. Render targets must all have the same multisample settings. Expected count/quality: {1}/{2}, Got count/quality: {3}/{4}</value>
  </data>
  <data name="GORGFX_RTV_RESOURCE_TYPE_MISMATCH" xml:space="preserve">
    <value>Cannot bind the render target '{0}'. There is a render target bound with the resource type of [{1}] and the depth/stencil is bound to a [{2}] resource type.</value>
  </data>
  <data name="GORGFX_RENDERTARGET_NEED_DEFAULT" xml:space="preserve">
    <value>A render target must have a usage of [Default].</value>
  </data>
  <data name="GORGFX_VIEWPORT_TOSTR" xml:space="preserve">
    <value>Gorgon Viewport: {0}x{1}-{2}x{3} (Width: {4}, Height: {5}) Minimum depth: {6} Maximum depth: {7}</value>
  </data>
  <data name="GORGFX_DEPTH_OPERATION_NOT_SUPPORTED" xml:space="preserve">
    <value>Cannot update a texture used as a depth/stencil buffer.</value>
  </data>
  <data name="GORGFX_VIEW_UNORDERED_TYPE_NOT_VALID_FOR_COPY" xml:space="preserve">
    <value>The view type must be either [Counter] or [AppendConsume].</value>
  </data>
  <data name="GORGFX_VIEW_NO_SUPPORT" xml:space="preserve">
    <value>Cannot create the view, the resource does not allow {0} views.</value>
  </data>
  <data name="GORGFX_VIEW_UNORDERED_CLEAR_NEED_4_VALUES" xml:space="preserve">
    <value>The array requires 4 elements to clear the unordered access view.</value>
  </data>
  <data name="GORGFX_VIEW_FORMAT_NOT_SUPPORTED" xml:space="preserve">
    <value>The format [{0}] is not valid for an unordered access view.</value>
  </data>
  <data name="GORGFX_RTV_TOO_MANY" xml:space="preserve">
    <value>Cannot have more than [{0}] render target views + unordered access views.</value>
  </data>
  <data name="GORGFX_ERR_UAV_TOO_MANY" xml:space="preserve">
    <value>The starting slot [{0}] after all render targets are applied and the number of unordered access views [{1}] is greater than the maximum number of available slots [{2}].</value>
  </data>
  <data name="GORGFX_VIEW_RESOURCE_ALREADY_BOUND" xml:space="preserve">
    <value>This view has a resource '{0}' that is already bound with a {2} at index [{1}].</value>
  </data>
  <data name="GORGFX_BUFFER_NOT_INDIRECT" xml:space="preserve">
    <value>The buffer '{0}' was not created as an indirect argument buffer.</value>
  </data>
  <data name="GORGFX_SHADER_UNKNOWN_TYPE" xml:space="preserve">
    <value>The shader type [{0}] is not a valid type.</value>
  </data>
  <data name="GORGFX_SHADER_NO_SO" xml:space="preserve">
    <value>Cannot create a stream output shader with this method.</value>
  </data>
  <data name="GORGFX_BUFFER_NOT_OUTPUT" xml:space="preserve">
    <value>The buffer '{0}' was not created with IsOutput = true.</value>
  </data>
  <data name="GORGFX_OUTPUTBUFFER_BINDING_TOSTR" xml:space="preserve">
    <value>Stream output buffer binding.  Offset: {0}, Buffer: {1}</value>
  </data>
  <data name="GORGFX_SO_BUFFER_NOT_MULTIPLE_OF_4" xml:space="preserve">
    <value>The stride at index [{0}] is not a multiple of 4.</value>
  </data>
  <data name="GORGFX_SO_STRIDE_TOO_LARGE" xml:space="preserve">
    <value>The stride at index [{0}] must be less than 2048 bytes.</value>
  </data>
  <data name="GORGFX_SO_STRIDE_TOO_SMALL" xml:space="preserve">
    <value>The stride at index [{0}] has a size of {1} bytes. It must be equal to or greater than {2} bytes.  </value>
  </data>
  <data name="GORGFX_CANNOT_CREATE_CONTEXT_FROM_CONTEXT" xml:space="preserve">
    <value>Cannot use a deferred context to create another deferred context.  Only an immediate context may created a deferred context.</value>
  </data>
  <data name="GORGFX_CANNOT_USE_DEFERRED_CONTEXT" xml:space="preserve">
    <value>Cannot call this method from a deferred context.</value>
  </data>
  <data name="GORGFX_CANNOT_USE_IMMEDIATE_CONTEXT" xml:space="preserve">
    <value>Cannot call this method from an immediate context.</value>
  </data>
  <data name="GORGFX_ERR_CATASTROPHIC" xml:space="preserve">
    <value>There was a catastrophic error in Gorgon.

Please report this error by pasting the details to the bug tracker in Gorgon's google code repository.  If possible, please attach any log  used by Gorgon to the bug report.</value>
  </data>
  <data name="GORGFX_DEVICE_NAME_REFRAST" xml:space="preserve">
    <value>Reference rasterizer</value>
  </data>
  <data name="GORGFX_DEVICE_NAME_WARP" xml:space="preserve">
    <value>WARP software rasterizer</value>
  </data>
  <data name="GORGFX_TOSTR_DEVICE" xml:space="preserve">
    <value>Gorgon Graphics Video Device: {0}</value>
  </data>
  <data name="GORGFX_FONT_DEFAULT_CHAR_DOES_NOT_EXIST" xml:space="preserve">
    <value>The default character '{0}' does not exist in the font character set.</value>
  </data>
  <data name="GORGFX_FONT_FAMILY_NAME_MUST_NOT_BE_EMPTY" xml:space="preserve">
    <value>The font family name must not be NULL or empty.</value>
  </data>
  <data name="GORGFX_FONT_GLYPH_HAS_NO_TEXTURE" xml:space="preserve">
    <value>The glyph for character '{0}' does not have a texture assigned to it.</value>
  </data>
  <data name="GORGFX_FONT_MUST_BE_FILE_STREAM" xml:space="preserve">
    <value>External textures require a System.IO.FileStream object.</value>
  </data>
  <data name="GORGFX_FONT_TEXTURE_EXISTS" xml:space="preserve">
    <value>The texture '{0}' already exists in this collection.</value>
  </data>
  <data name="GORGFX_FONT_TEXTURE_NOT_FOUND" xml:space="preserve">
    <value>The texture '{0}' was not found in this collection.</value>
  </data>
  <data name="GORGFX_FONT_TEXTURE_SIZE_TOO_LARGE" xml:space="preserve">
    <value>The font texture size ({0}x{1}) is too large.</value>
  </data>
  <data name="GORGFX_OUTPUT_SOFTWARE_DEV_NAME" xml:space="preserve">
    <value>Software device output</value>
  </data>
  <data name="GORGFX_SHADER_NO_CODE" xml:space="preserve">
    <value>Cannot save the shader as a source code file.  There was no source code found for the this shader.</value>
  </data>
  <data name="GORGFX_STREAM_READ_ONLY" xml:space="preserve">
    <value>The stream is read only.</value>
  </data>
  <data name="GORGFX_TOSTR_VIDEOMODE" xml:space="preserve">
    <value>Gorgon Video Mode: {0}x{1} Refresh Num/Denom: {2}/{3} Format: {4}</value>
  </data>
  <data name="GORGFX_FONT_GLYPH_NODE_TOO_LARGE" xml:space="preserve">
    <value>Glyph node size is too large for the image.</value>
  </data>
  <data name="GORGFX_FONT_GLYPH_TOSTR" xml:space="preserve">
    <value>Gorgon Font Glyph: {0}</value>
  </data>
  <data name="GORGFX_FONT_KERNING_PAIR_TOSTR" xml:space="preserve">
    <value>{0}/{1}</value>
  </data>
  <data name="GORGFX_IMAGE_BMP_CODEC_DESC" xml:space="preserve">
    <value>Windows Bitmap</value>
  </data>
  <data name="GORGFX_IMAGE_CODEC_TOSTR" xml:space="preserve">
    <value>Gorgon {0} Image Codec</value>
  </data>
  <data name="GORGFX_IMAGE_DDS_CODEC_DESC" xml:space="preserve">
    <value>Direct Draw Surface</value>
  </data>
  <data name="GORGFX_IMAGE_FILE_INCORRECT_DECODER" xml:space="preserve">
    <value>The data in the stream could not be decoded as a {0} file.</value>
  </data>
  <data name="GORGFX_IMAGE_FILE_INCORRECT_ENCODER" xml:space="preserve">
    <value>The data could not be encoded into a {0} file.</value>
  </data>
  <data name="GORGFX_IMAGE_GIF_CODEC_DESC" xml:space="preserve">
    <value>Graphics Interchange Format</value>
  </data>
  <data name="GORGFX_IMAGE_HDP_CODEC_DESC" xml:space="preserve">
    <value>HD Photo format</value>
  </data>
  <data name="GORGFX_IMAGE_INDEXED_NO_PALETTE" xml:space="preserve">
    <value>An indexed image requires a palette with {0} entries.</value>
  </data>
  <data name="GORGFX_IMAGE_JPG_CODEC_DESC" xml:space="preserve">
    <value>Joint photographics experts group</value>
  </data>
  <data name="GORGFX_IMAGE_MIPCOUNT_ARRAYCOUNT_TOO_LARGE" xml:space="preserve">
    <value>The mip level count and the array count exceed the length of the array.</value>
  </data>
  <data name="GORGFX_IMAGE_MUST_BE_SAME_FORMAT" xml:space="preserve">
    <value>The pixel format for all elements must be [{0}].</value>
  </data>
  <data name="GORGFX_IMAGE_NOT_16BPP" xml:space="preserve">
    <value>The format [0] is not a standard 16BPP format ([B5G6R5] or [B5G5R5A1]).</value>
  </data>
  <data name="GORGFX_IMAGE_PITCH_TOO_SMALL" xml:space="preserve">
    <value>The pitch for the image must be greater than 0.</value>
  </data>
  <data name="GORGFX_IMAGE_PNG_CODEC_DESC" xml:space="preserve">
    <value>Portable Network Graphics</value>
  </data>
  <data name="GORGFX_IMAGE_TGA_CODEC_DESC" xml:space="preserve">
    <value>Truevision Targa</value>
  </data>
  <data name="GORGFX_IMAGE_TIF_CODEC_DESC" xml:space="preserve">
    <value>Tagged Image File Format</value>
  </data>
  <data name="GORGFX_IMAGE_VOLUME_MIPCOUNT_DEPTHCOUNT_TOO_LARGE" xml:space="preserve">
    <value>The mip level count and the depth slice count exceed the length of the array.</value>
  </data>
  <data name="GORGFX_IMAGE_VOLUME_NOT_POWER_OF_TWO" xml:space="preserve">
    <value>Cannot create a volume texture mip chain unless the dimensions are powers of 2.</value>
  </data>
  <data name="GORGFX_LAYOUT_INVALID_ELEMENT_TYPE" xml:space="preserve">
    <value>The type '{0}' is not a valid type for an input element.</value>
  </data>
  <data name="GORGFX_STREAM_EOF" xml:space="preserve">
    <value>Cannot read beyond the end of a stream.</value>
  </data>
  <data name="GORGFX_STREAM_NO_SEEK" xml:space="preserve">
    <value>The stream cannot perform seek operations.</value>
  </data>
  <data name="GORGFX_STREAM_WRITE_ONLY" xml:space="preserve">
    <value>The stream is write-only.</value>
  </data>
  <data name="GORGFX_FILE_NOT_FOUND" xml:space="preserve">
    <value>The file '{0}' was not found.</value>
  </data>
  <data name="GORGFX_SHADER_INCLUDE_NOT_FOUND" xml:space="preserve">
    <value>The include file in line '{0}' was not found in the include list.</value>
  </data>
  <data name="GORGFX_SHADER_INCLUDE_PATH_INVALID" xml:space="preserve">
    <value>The include line '{0}' is not valid.</value>
  </data>
  <data name="GORGFX_INVALID_SETTINGS" xml:space="preserve">
    <value>Cannot use a '{0}' settings object with a '{1}' object.</value>
  </data>
  <data name="GORGFX_MULTISAMPLE_INVALID" xml:space="preserve">
    <value>The video device '{0}' does not support multisampling with a count of {1} and a quality of {2} for format [{3}].</value>
  </data>
  <data name="GORGFX_RENDERTARGET_ALREADY_FULLSCREEN" xml:space="preserve">
    <value>There is already a full screen swap chain active on the video output '{0}'.</value>
  </data>
  <data name="GORGFX_RENDERTARGET_NO_OUTPUT" xml:space="preserve">
    <value>Could not find the video output for the specified window.</value>
  </data>
  <data name="GORGFX_RENDERTARGET_NO_WINDOW" xml:space="preserve">
    <value>No window to bind with the swap chain.</value>
  </data>
  <data name="GORGFX_TEXTURE_DEPTH_INVALID" xml:space="preserve">
    <value>Cannot create a '{0}' with a depth of {1}.  The depth must be between 0 and {2}.</value>
  </data>
  <data name="GORGFX_TEXTURE_HEIGHT_INVALID" xml:space="preserve">
    <value>Cannot create a '{0}' with a height of {1}.  The height must be between 0 and {2}.</value>
  </data>
  <data name="GORGFX_TEXTURE_WIDTH_INVALID" xml:space="preserve">
    <value>Cannot create a '{0}' with a width of {1}.  The width must be between 0 and {2}.</value>
  </data>
  <data name="GORGFX_IMAGE_FORMAT_MISMATCH" xml:space="preserve">
    <value>The texture format [{0}] must match the image data format [{1}].</value>
  </data>
  <data name="GORGFX_TEXTURE_IMMUTABLE" xml:space="preserve">
    <value>The texture is immutable and cannot be updated.</value>
  </data>
  <data name="GORGFX_TEXTURE_3D_CPU_ACCESSIBLE" xml:space="preserve">
    <value>This 3D texture is CPU accessible and cannot be copied.</value>
  </data>
  <data name="GORGFX_TEXTURE_CANNOT_COPY_SAME_SUBRESOURCE" xml:space="preserve">
    <value>Cannot copy to and from the same sub resource on the same texture.</value>
  </data>
  <data name="GORGFX_TEXTURE_COPY_CANNOT_CONVERT" xml:space="preserve">
    <value>Cannot copy because these formats: [{0}] and [{1}] cannot be converted.</value>
  </data>
  <data name="GORGFX_TEXTURE_IS_DYNAMIC_IMMUTABLE" xml:space="preserve">
    <value>Cannot update a texture that is Dynamic or Immutable.</value>
  </data>
  <data name="GORGFX_TEXTURE_IS_SAME" xml:space="preserve">
    <value>The source texture and this texture are the same.  Cannot copy.</value>
  </data>
  <data name="GORGFX_TEXTURE_NOT_SAME_TYPE" xml:space="preserve">
    <value>The texure '{0}' is a [{1}] and cannot be copied to or from the type [{2}].</value>
  </data>
  <data name="GORGFX_VIEW_DRV_NO_STAGING" xml:space="preserve">
    <value>Depth views cannot be bound to resources that have a usage of [Staging].</value>
  </data>
  <data name="GORGFX_LOCK_CANNOT_READ_NON_STAGING" xml:space="preserve">
    <value>Cannot lock a buffer for reading if the resource does not have a usage of [Staging].</value>
  </data>
  <data name="GORGFX_LOCK_CANNOT_USE_WITH_READ" xml:space="preserve">
    <value>Cannot use [Discard] or [NoOverwrite] with a [Read] flag.</value>
  </data>
  <data name="GORGFX_LOCK_NEED_DISCARD_NOOVERWRITE" xml:space="preserve">
    <value>Calling lock on a resource when using a deferred context requires at least the [Discard] and/or the [NoOverwrite] flags.</value>
  </data>
  <data name="GORGFX_TEXTURE_NO_OVERWRITE_NOT_VALID" xml:space="preserve">
    <value>Cannot lock this texture with a lock type of [NoOverwrite]</value>
  </data>
  <data name="GORGFX_TEXTURE_USAGE_CANT_LOCK" xml:space="preserve">
    <value>A texture with a usage of [{0}] cannot be locked.</value>
  </data>
  <data name="GORGFX_IMAGE_BUFFER_SIZE_MISMATCH" xml:space="preserve">
    <value>There is a mismatch between the image size, and the buffer size.</value>
  </data>
  <data name="GORGFX_TEXTURE_MULTISAMPLED" xml:space="preserve">
    <value>This operation does not support multisampled textures.</value>
  </data>
  <data name="GORGFX_TEXTURE_MULTISAMPLE_PARAMS_MISMATCH" xml:space="preserve">
    <value>The textures have different multisampling parameters.  This operation requires that all textures have the same multisampling parameters.</value>
  </data>
  <data name="GORGFX_TEXTURE_MUST_BE_SAME_SIZE" xml:space="preserve">
    <value>The textures must be the same width and height.</value>
  </data>
  <data name="GORGFX_RESOURCE_INVALID" xml:space="preserve">
    <value>The resource type [{0}] is invalid.</value>
  </data>
  <data name="GORGFX_TYPE_CANNOT_BE_USED" xml:space="preserve">
    <value>The type '{0}' cannot use with this method.</value>
  </data>
  <data name="GORGFX_TEXTURE_CANNOT_COPY_NONSTAGING" xml:space="preserve">
    <value>Feature level SM2_a_b video devices cannot copy non-staging textures.</value>
  </data>
  <data name="GORGFX_BOX_TOSTR" xml:space="preserve">
    <value>Gorgon Box: {0}x{1}x{2}-{3}x{4}x{5} (Width: {6}, Height: {7}, Depth {8})</value>
  </data>
  <data name="GORGFX_TEXTURE_DISCARD_NEEDS_DYNAMIC" xml:space="preserve">
    <value>Cannot use [Discard] with a texture that has not been created with a [Dynamic] usage.</value>
  </data>
  <data name="GORGFX_SHADER_MACRO_TOSTR" xml:space="preserve">
    <value>Gorgon Shader Macro Definition '{0}'.</value>
  </data>
  <data name="GORGFX_TARGET_IS_NOT_SWAPCHAIN" xml:space="preserve">
    <value>This render target is not a swap chain.</value>
  </data>
  <data name="GORGFX_VIEW_RESOURCE_NOT_BUFFER" xml:space="preserve">
    <value>The resource attached to this view is not a {0} buffer.</value>
  </data>
  <data name="GORGFX_VIEW_RESOURCE_NOT_DEPTHSTENCIL" xml:space="preserve">
    <value>The resource attached to this view is not a {0} depth/stencil buffer.</value>
  </data>
  <data name="GORGFX_VIEW_RESOURCE_NOT_TARGET" xml:space="preserve">
    <value>The resource attached to this view is not a {0} render target.</value>
  </data>
  <data name="GORGFX_VIEW_RESOURCE_NOT_TEXTURE" xml:space="preserve">
    <value>This resource attched to this view is not a {0} texture.</value>
  </data>
  <data name="GORGFX_FONT_GLYPH_TEXTURE_NOT_FOUND" xml:space="preserve">
    <value>The texture '{0}' was not found.</value>
  </data>
  <data name="GORGFX_ARG_OUT_OF_RANGE" xml:space="preserve">
    <value>The value must be be equal to or greater than {0} and less than {1}.</value>
  </data>
  <data name="GORGFX_TEXTURE_OUT_OF_BOUNDS" xml:space="preserve">
    <value>The region ({0},{1})x({2},{3}) is out of bounds for the texture '{4}'.</value>
  </data>
  <data name="GORGFX_TEXTURE_RESOLVE_DEST_NOT_DEFAULT" xml:space="preserve">
    <value>The destination texture '{0}' must have a default usage.</value>
  </data>
  <data name="GORGFX_TEXTURE_RESOLVE_FORMATS_NOT_SAME" xml:space="preserve">
    <value>The destination texture must have a format of '{0}'.</value>
  </data>
  <data name="GORGFX_TEXTURE_RESOLVE_FORMAT_CANNOT_BE_TYPELESS" xml:space="preserve">
    <value>The resolve format must not be typeless.</value>
  </data>
  <data name="GORGFX_TEXTURE_RESOLVE_FORMAT_MUST_BE_UNKNOWN" xml:space="preserve">
    <value>The format used to resolve this multisampled texture must be set to unknown because the textures have identical formats.</value>
  </data>
  <data name="GORGFX_TEXTURE_RESOLVE_FORMAT_NOT_SAME_GROUP" xml:space="preserve">
    <value>The source and destination have the same typeless format of '{0}'.  The resolve format is not a part of the same format grouping.</value>
  </data>
  <data name="GORGFX_TEXTURE_RESOLVE_SRC_DEST_NOT_SAME_GROUP" xml:space="preserve">
    <value>The source format '{0}' is not in the same group as the destination format of '{1}'.</value>
  </data>
  <data name="GORGFX_TEXTURE_SRC_NOT_MULTISAMPLED" xml:space="preserve">
    <value>The source texture '{0}' is not multisampled.</value>
  </data>
  <data name="GORGFX_FONT_BRUSH_INTERPOL_TOSTRING" xml:space="preserve">
    <value>Weighted interpolation at {0}.  Color: R={1}, G={2}, B={3}, A={4}.</value>
  </data>
  <data name="GORGFX_TEXTURE_BC_SIZE_NOT_MOD_4" xml:space="preserve">
    <value>A compressed texture must have a width and height that is a multiple of 4.</value>
  </data>
  <data name="GORGFX_TEXTURE_CUBE_MULTIPLE_OF_SIX" xml:space="preserve">
    <value>Cannot create the texture cube array.  The array count is not a multiple of 6.</value>
  </data>
  <data name="GORGFX_TEXTURE_CUBE_NEEDS_MAX_SIX_SM4" xml:space="preserve">
    <value>Cannot create the texture cube array.  SM4 devices require a maximum of 6 faces.</value>
  </data>
  <data name="GORGFX_TEXTURE_FORMAT_NOT_SUPPORTED" xml:space="preserve">
    <value>The format '{0}' is not supported for a '{1}' texture.</value>
  </data>
  <data name="GORGFX_TEXTURE_IMMUTABLE_REQUIRES_DATA" xml:space="preserve">
    <value>Immutable textures require initialization data.</value>
  </data>
  <data name="GORGFX_VIEW_UAV_REQUIRES_SM5" xml:space="preserve">
    <value>Unordered access views for textures requires a SM5 or better video device.</value>
  </data>
  <data name="GORGFX_BC_NO_ENCODER" xml:space="preserve">
    <value>No encoder was found for the format [{0}].</value>
  </data>
  <data name="GORGFX_IMAGE_ALREADY_COMPRESSED" xml:space="preserve">
    <value>The image is already compressed.</value>
  </data>
  <data name="GORGFX_IMAGE_FORMAT_NOT_COMPRESSED" xml:space="preserve">
    <value>The format '{0}' is not a valid compressed format.</value>
  </data>
  <data name="GORGFX_IMAGE_CANNOT_COPY_IMAGE_DATA_MISMATCH" xml:space="preserve">
    <value>Cannot copy the image.  The source width, height (if applicable) and format must be the same as the destination.</value>
  </data>
  <data name="GORGFX_TEXTURE_NO_MIP_SUPPORT" xml:space="preserve">
    <value>The texture format [{0}] must be used with a mip map count of 1.</value>
  </data>
  <data name="GORGFX_ERR_CANNOT_MULTISAMPLE_CUBE" xml:space="preserve">
    <value>Cannot use a multi-sampled texture as a texture cube.</value>
  </data>
  <data name="GORGFX_IMAGE_BUFFER_CANT_BE_SAME" xml:space="preserve">
    <value>Cannot copy a buffer into itself.</value>
  </data>
  <data name="GORGFX_ERR_FONT_FILE_CORRUPT" xml:space="preserve">
    <value>The font file data is corrupt.</value>
  </data>
  <data name="GORGFX_ERR_MISSING_BLOCK_COUNT" xml:space="preserve">
    <value>The block count must be larger than 0.</value>
  </data>
  <data name="GORGFX_ERR_NO_VIDEO_DEVICE_WITH_NAME" xml:space="preserve">
    <value>There is no video device with the name '{0}'.</value>
  </data>
  <data name="GORGFX_ERR_NO_DEVICE_WITH_LUID" xml:space="preserve">
    <value>There is no video device with a LUID of {0}.</value>
  </data>
  <data name="GORGFX_ERR_FEATURE_LEVEL_INVALID" xml:space="preserve">
    <value>The feature level [{0}] is not valid.</value>
  </data>
  <data name="GORGFX_ERR_FEATURE_LEVEL_NOT_SUPPORTED" xml:space="preserve">
    <value>The feature level [{0}] is not supported by the '{1}' video device.</value>
  </data>
  <data name="GORGFX_FEATURE_LEVEL_UNKNOWN" xml:space="preserve">
    <value>Must supply a known feature level.</value>
  </data>
  <data name="GORGFX_ERR_NO_SUITABLE_VIDEO_DEVICE_FOUND" xml:space="preserve">
    <value>Could not use any of the installed video devices on this system. Gorgon requires a video card that supports shader model 4 at minimum.</value>
  </data>
  <data name="GORGFX_ERR_CANNOT_RESIZE_SWAP_ASSIGNED" xml:space="preserve">
    <value>The swap chain '{0}' could not resize its back buffers because it is still bound as a render target, or its internal depth buffer is still bound.</value>
  </data>
  <data name="GORGFX_ERR_RESOURCE_ID_ALREADY_REGISTERED" xml:space="preserve">
    <value>The resource '{0}' could not be registered because another resource with the ID of {2} is already registered.</value>
  </data>
  <data name="GORGFX_ERR_RESOURCE_NOT_REGISTERED" xml:space="preserve">
    <value>The resource '{0}' was not registered.</value>
  </data>
  <data name="GORGFX_ERR_TOO_MANY_RTVS" xml:space="preserve">
    <value>The video device '{0}' only supports a maximum of {1} render target views at a given time.</value>
  </data>
  <data name="GORGFX_ERR_PARAMETER_MUST_NOT_BE_NULL" xml:space="preserve">
    <value>The parameter must not be null.</value>
  </data>
  <data name="GORGFX_ERR_SWAP_BACKBUFFER_TOO_SMALL" xml:space="preserve">
    <value>The swap chain back buffer is too small: {0}x{1}. The buffer must have a width and height of least 1 pixel.</value>
  </data>
  <data name="GORGFX_ERR_NEED_FORM_FOR_FULLSCREEN" xml:space="preserve">
    <value>The swap chain '{0}' is bound to a child control, only a window may be put into full screen mode.</value>
  </data>
  <data name="GORGFX_ERR_RESOURCE_IS_NOT_RENDERTARGET" xml:space="preserve">
    <value>The resource '{0}' is not a render target.</value>
  </data>
  <data name="GORGFX_ERR_RESOURCE_IS_NOT_TEXTURE_OR_BUFFER" xml:space="preserve">
    <value>The resource '{0}' is not a texture or buffer.</value>
  </data>
  <data name="GORGFX_ERR_RTV_ALREADY_BOUND" xml:space="preserve">
    <value>The render target view for resource '{0}' is already bound.</value>
  </data>
  <data name="GORGFX_ERR_RTV_ARRAY_SIZE_MISMATCH" xml:space="preserve">
    <value>The render target views do not have the same array count value.</value>
  </data>
  <data name="GORGFX_ERR_RTV_NOT_SAME_TYPE" xml:space="preserve">
    <value>The render target views are not the same type: [{0}].</value>
  </data>
  <data name="GORGFX_ERR_CONSTANT_BUFFER_TOO_LARGE" xml:space="preserve">
    <value>The size requested ({0} bytes) for the constant buffer exceeds the maximum value of {1} bytes.</value>
  </data>
  <data name="GORGFX_ERR_RTV_DEPTHSTENCIL_ARRAYCOUNT_MISMATCH" xml:space="preserve">
    <value>The array count in the render target views does not match with the depth/stencil view '{0}'.</value>
  </data>
  <data name="GORGFX_ERR_RTV_DEPTHSTENCIL_MULTISAMPLE_MISMATCH" xml:space="preserve">
    <value>The depth stenvcil view resource must have the same multisample quality: {0} and count: {1} as the render targets.</value>
  </data>
  <data name="GORGFX_ERR_RTV_DEPTHSTENCIL_RESOURCE_MISMATCH" xml:space="preserve">
    <value>The depth/stencil view and render target views do not have the same width, height, or array count/depth count.</value>
  </data>
  <data name="GORGFX_ERR_RTV_DEPTHSTENCIL_TYPE_MISMATCH" xml:space="preserve">
    <value>The type of the depth stencil view resource [{0}] is not the same as the render targets.</value>
  </data>
  <data name="GORGFX_ERR_RTV_MULTISAMPLE_MISMATCH" xml:space="preserve">
    <value>The render target view resources must all have the same multisample quality: {0} and count: {1}.</value>
  </data>
  <data name="GORGFX_ERR_RTV_RESOURCE_MISMATCH" xml:space="preserve">
    <value>The render target views do not have the same width, height, or array count/depth count.</value>
  </data>
</root>