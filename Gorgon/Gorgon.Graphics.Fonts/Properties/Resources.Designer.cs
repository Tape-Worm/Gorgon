//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Gorgon.Graphics.Fonts.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Gorgon.Graphics.Fonts.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BmFont.
        /// </summary>
        internal static string GORGFX_DESC_BMFONT_CODEC {
            get {
                return ResourceManager.GetString("GORGFX_DESC_BMFONT_CODEC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gorgon.
        /// </summary>
        internal static string GORGFX_DESC_GORFONT_CODEC {
            get {
                return ResourceManager.GetString("GORGFX_DESC_GORFONT_CODEC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The font &apos;{0}&apos; is already registered..
        /// </summary>
        internal static string GORGFX_ERR_FONT_ALREADY_REGISTERED {
            get {
                return ResourceManager.GetString("GORGFX_ERR_FONT_ALREADY_REGISTERED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The BmFont codec needs a FileStream type..
        /// </summary>
        internal static string GORGFX_ERR_FONT_BMFONT_NEEDS_FILE_STREAM {
            get {
                return ResourceManager.GetString("GORGFX_ERR_FONT_BMFONT_NEEDS_FILE_STREAM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not retrieve character widths for the specified characters..
        /// </summary>
        internal static string GORGFX_ERR_FONT_CANNOT_RETRIEVE_ABC {
            get {
                return ResourceManager.GetString("GORGFX_ERR_FONT_CANNOT_RETRIEVE_ABC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot retrieve kerning pairs..
        /// </summary>
        internal static string GORGFX_ERR_FONT_CANNOT_RETRIEVE_KERNING {
            get {
                return ResourceManager.GetString("GORGFX_ERR_FONT_CANNOT_RETRIEVE_KERNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The default character &apos;{0}&apos; does not exist in the font character set..
        /// </summary>
        internal static string GORGFX_ERR_FONT_DEFAULT_CHAR_DOES_NOT_EXIST {
            get {
                return ResourceManager.GetString("GORGFX_ERR_FONT_DEFAULT_CHAR_DOES_NOT_EXIST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The character code 0x{0:x4} used by the default character is not valid..
        /// </summary>
        internal static string GORGFX_ERR_FONT_DEFAULT_CHAR_NOT_VALID {
            get {
                return ResourceManager.GetString("GORGFX_ERR_FONT_DEFAULT_CHAR_NOT_VALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The font file data is corrupt..
        /// </summary>
        internal static string GORGFX_ERR_FONT_FILE_CORRUPT {
            get {
                return ResourceManager.GetString("GORGFX_ERR_FONT_FILE_CORRUPT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The format for this font file is not valid..
        /// </summary>
        internal static string GORGFX_ERR_FONT_FILE_FORMAT_INVALID {
            get {
                return ResourceManager.GetString("GORGFX_ERR_FONT_FILE_FORMAT_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The glyph for character &apos;{0}&apos; does not have a texture assigned to it..
        /// </summary>
        internal static string GORGFX_ERR_FONT_GLYPH_HAS_NO_TEXTURE {
            get {
                return ResourceManager.GetString("GORGFX_ERR_FONT_GLYPH_HAS_NO_TEXTURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A glyph can only use a 2D image..
        /// </summary>
        internal static string GORGFX_ERR_FONT_GLYPH_IMAGE_NOT_2D {
            get {
                return ResourceManager.GetString("GORGFX_ERR_FONT_GLYPH_IMAGE_NOT_2D", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Glyph node size is too large for the image..
        /// </summary>
        internal static string GORGFX_ERR_FONT_GLYPH_NODE_TOO_LARGE {
            get {
                return ResourceManager.GetString("GORGFX_ERR_FONT_GLYPH_NODE_TOO_LARGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The texture &apos;{0}&apos; was not found..
        /// </summary>
        internal static string GORGFX_ERR_FONT_GLYPH_TEXTURE_NOT_FOUND {
            get {
                return ResourceManager.GetString("GORGFX_ERR_FONT_GLYPH_TEXTURE_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The font size {0} is too small..
        /// </summary>
        internal static string GORGFX_ERR_FONT_SIZE_TOO_SMALL {
            get {
                return ResourceManager.GetString("GORGFX_ERR_FONT_SIZE_TOO_SMALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The texture &apos;{0}&apos; already exists in this collection..
        /// </summary>
        internal static string GORGFX_ERR_FONT_TEXTURE_EXISTS {
            get {
                return ResourceManager.GetString("GORGFX_ERR_FONT_TEXTURE_EXISTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The font texture file &apos;{0}&apos; was not found..
        /// </summary>
        internal static string GORGFX_ERR_FONT_TEXTURE_FILE_NOT_FOUND {
            get {
                return ResourceManager.GetString("GORGFX_ERR_FONT_TEXTURE_FILE_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The texture &apos;{0}&apos; was not found in this collection..
        /// </summary>
        internal static string GORGFX_ERR_FONT_TEXTURE_NOT_FOUND {
            get {
                return ResourceManager.GetString("GORGFX_ERR_FONT_TEXTURE_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The font can only load textures of the following types:
        ///{0}.
        /// </summary>
        internal static string GORGFX_ERR_FONT_TEXTURE_NOT_VALID {
            get {
                return ResourceManager.GetString("GORGFX_ERR_FONT_TEXTURE_NOT_VALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The font texture size ({0}x{1}) is too large..
        /// </summary>
        internal static string GORGFX_ERR_FONT_TEXTURE_SIZE_TOO_LARGE {
            get {
                return ResourceManager.GetString("GORGFX_ERR_FONT_TEXTURE_SIZE_TOO_LARGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The format [{0}] is not supported..
        /// </summary>
        internal static string GORGFX_ERR_FORMAT_NOT_SUPPORTED {
            get {
                return ResourceManager.GetString("GORGFX_ERR_FORMAT_NOT_SUPPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The character &apos;{0}&apos; already has a glyph assigned..
        /// </summary>
        internal static string GORGFX_ERR_GLYPH_CHARACTER_ASSIGNED {
            get {
                return ResourceManager.GetString("GORGFX_ERR_GLYPH_CHARACTER_ASSIGNED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The texture format for the glyph is not valid..
        /// </summary>
        internal static string GORGFX_ERR_GLYPH_TEXTURE_FORMAT_INVALID {
            get {
                return ResourceManager.GetString("GORGFX_ERR_GLYPH_TEXTURE_FORMAT_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter must not be empty..
        /// </summary>
        internal static string GORGFX_ERR_PARAMETER_MUST_NOT_BE_EMPTY {
            get {
                return ResourceManager.GetString("GORGFX_ERR_PARAMETER_MUST_NOT_BE_EMPTY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot read beyond the end of a stream..
        /// </summary>
        internal static string GORGFX_ERR_STREAM_EOF {
            get {
                return ResourceManager.GetString("GORGFX_ERR_STREAM_EOF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The stream cannot perform seek operations..
        /// </summary>
        internal static string GORGFX_ERR_STREAM_NO_SEEK {
            get {
                return ResourceManager.GetString("GORGFX_ERR_STREAM_NO_SEEK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The stream is read only..
        /// </summary>
        internal static string GORGFX_ERR_STREAM_READ_ONLY {
            get {
                return ResourceManager.GetString("GORGFX_ERR_STREAM_READ_ONLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The stream is write-only..
        /// </summary>
        internal static string GORGFX_ERR_STREAM_WRITE_ONLY {
            get {
                return ResourceManager.GetString("GORGFX_ERR_STREAM_WRITE_ONLY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Weighted interpolation at {0}.  Color: R={1}, G={2}, B={3}, A={4}..
        /// </summary>
        internal static string GORGFX_TOSTR_FONT_BRUSH_INTERPOLATION {
            get {
                return ResourceManager.GetString("GORGFX_TOSTR_FONT_BRUSH_INTERPOLATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gorgon {0} Font Codec.
        /// </summary>
        internal static string GORGFX_TOSTR_FONT_CODEC {
            get {
                return ResourceManager.GetString("GORGFX_TOSTR_FONT_CODEC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gorgon Font Glyph: {0}.
        /// </summary>
        internal static string GORGFX_TOSTR_FONT_GLYPH {
            get {
                return ResourceManager.GetString("GORGFX_TOSTR_FONT_GLYPH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}/{1}.
        /// </summary>
        internal static string GORGFX_TOSTR_FONT_KERNING_PAIR {
            get {
                return ResourceManager.GetString("GORGFX_TOSTR_FONT_KERNING_PAIR", resourceCulture);
            }
        }
    }
}
