//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.Resources;
using System.Runtime.CompilerServices;

namespace Gorgon.Input.Properties {
	/// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [GeneratedCode("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [DebuggerNonUserCode()]
    [CompilerGenerated()]
    internal class Resources {
        
        private static ResourceManager resourceMan;
        
        private static CultureInfo resourceCulture;
        
        [SuppressMessage("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        internal static ResourceManager ResourceManager {
            get {
                if (ReferenceEquals(resourceMan, null)) {
                    ResourceManager temp = new ResourceManager("Gorgon.Input.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        internal static CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not create the input factory for &apos;{0}&apos;..
        /// </summary>
        internal static string GORINP_CANNOT_CREATE {
            get {
                return ResourceManager.GetString("GORINP_CANNOT_CREATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The device requested already exists, but is not of the type &apos;{0}&apos;..
        /// </summary>
        internal static string GORINP_DEVICE_ALREADY_EXISTS_TYPE_MISMATCH {
            get {
                return ResourceManager.GetString("GORINP_DEVICE_ALREADY_EXISTS_TYPE_MISMATCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The HID property &apos;{0}&apos; is NULL..
        /// </summary>
        internal static string GORINP_ERR_HID_PROPERTY_NULL {
            get {
                return ResourceManager.GetString("GORINP_ERR_HID_PROPERTY_NULL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find the HID &apos;{0}&apos;..
        /// </summary>
        internal static string GORINP_HID_NOT_FOUND {
            get {
                return ResourceManager.GetString("GORINP_HID_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no motor at index [{0}]..
        /// </summary>
        internal static string GORINP_JOYSTICK_MOTOR_NOT_FOUND {
            get {
                return ResourceManager.GetString("GORINP_JOYSTICK_MOTOR_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find the joystick &apos;{0}&apos;..
        /// </summary>
        internal static string GORINP_JOYSTICK_NOT_FOUND {
            get {
                return ResourceManager.GetString("GORINP_JOYSTICK_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The joystick was not initialized..
        /// </summary>
        internal static string GORINP_JOYSTICK_NOT_INITIALIZED {
            get {
                return ResourceManager.GetString("GORINP_JOYSTICK_NOT_INITIALIZED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keyboard key &apos;{0}&apos; has not been assigned to a mapping..
        /// </summary>
        internal static string GORINP_KEY_NOT_FOUND {
            get {
                return ResourceManager.GetString("GORINP_KEY_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keyboard key &apos;{0}&apos; has not been assigned to a mapping..
        /// </summary>
        internal static string GORINP_KEYBOARD_KEY_NO_MAPPING {
            get {
                return ResourceManager.GetString("GORINP_KEYBOARD_KEY_NO_MAPPING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find the keyboard &apos;{0}&apos;..
        /// </summary>
        internal static string GORINP_KEYBOARD_NOT_FOUND {
            get {
                return ResourceManager.GetString("GORINP_KEYBOARD_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Virtual Key: {0}, Character: {1}, Shift+Character: {2}.
        /// </summary>
        internal static string GORINP_KEYCHARMAP_TOSTR {
            get {
                return ResourceManager.GetString("GORINP_KEYCHARMAP_TOSTR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No window was found to bind with..
        /// </summary>
        internal static string GORINP_NO_WINDOW_TO_BIND {
            get {
                return ResourceManager.GetString("GORINP_NO_WINDOW_TO_BIND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter must not be empty..
        /// </summary>
        internal static string GORINP_PARAMETER_EMPTY {
            get {
                return ResourceManager.GetString("GORINP_PARAMETER_EMPTY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter must not be NULL or empty..
        /// </summary>
        internal static string GORINP_PARAMETER_NULL_EMPTY {
            get {
                return ResourceManager.GetString("GORINP_PARAMETER_NULL_EMPTY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The plug-in &apos;{0}&apos; was not found in any of the loaded plug-in assemblies or was not the correct type..
        /// </summary>
        internal static string GORINP_PLUGIN_NOT_FOUND {
            get {
                return ResourceManager.GetString("GORINP_PLUGIN_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find the pointing device &apos;{0}&apos;..
        /// </summary>
        internal static string GORINP_POINTINGDEVICE_NOT_FOUND {
            get {
                return ResourceManager.GetString("GORINP_POINTINGDEVICE_NOT_FOUND", resourceCulture);
            }
        }
    }
}
