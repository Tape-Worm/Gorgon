
// This file is used by Code Analysis to maintain SuppressMessage 
// attributes that are applied to this project.
// Project-level suppressions either have no target or are given 
// a specific target and scoped to a namespace, type, member, etc.

[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Usage", "CA2225:Operator overloads have named alternates", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.Core.GorgonRangeD.op_Explicit(Gorgon.Core.GorgonRangeD)~Gorgon.Core.GorgonRangeM")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Usage", "CA2225:Operator overloads have named alternates", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.Core.GorgonRangeD.op_Explicit(Gorgon.Core.GorgonRangeD)~Gorgon.Core.GorgonRange")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Usage", "CA2225:Operator overloads have named alternates", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.Core.GorgonRangeD.op_Explicit(Gorgon.Core.GorgonRangeD)~Gorgon.Core.GorgonRangeF")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Usage", "CA2225:Operator overloads have named alternates", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.Core.GorgonRangeM.op_Explicit(Gorgon.Core.GorgonRangeM)~Gorgon.Core.GorgonRange")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Usage", "CA2225:Operator overloads have named alternates", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.Core.GorgonRangeM.op_Explicit(Gorgon.Core.GorgonRangeM)~Gorgon.Core.GorgonRangeF")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Usage", "CA2225:Operator overloads have named alternates", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.Core.GorgonRange.op_Implicit(Gorgon.Core.GorgonRange)~Gorgon.Core.GorgonRangeD")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Usage", "CA2225:Operator overloads have named alternates", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.Core.GorgonRange.op_Implicit(Gorgon.Core.GorgonRange)~Gorgon.Core.GorgonRangeF")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Usage", "CA2225:Operator overloads have named alternates", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.Core.GorgonRange.op_Implicit(Gorgon.Core.GorgonRange)~Gorgon.Core.GorgonRangeM")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Usage", "CA2225:Operator overloads have named alternates", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.Core.GorgonRangeF.op_Explicit(Gorgon.Core.GorgonRangeF)~Gorgon.Core.GorgonRange")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Usage", "CA2225:Operator overloads have named alternates", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.Core.GorgonRangeF.op_Explicit(Gorgon.Core.GorgonRangeF)~Gorgon.Core.GorgonRangeM")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Usage", "CA2225:Operator overloads have named alternates", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.Core.GorgonRangeF.op_Implicit(Gorgon.Core.GorgonRangeF)~Gorgon.Core.GorgonRangeD")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Usage", "CA2225:Operator overloads have named alternates", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.Core.GorgonRangeM.op_Explicit(Gorgon.Core.GorgonRangeM)~Gorgon.Core.GorgonRangeD")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Usage", "CA2225:Operator overloads have named alternates", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.Graphics.GorgonColor.op_Implicit(Gorgon.Graphics.GorgonColor)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Usage", "CA2225:Operator overloads have named alternates", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.Graphics.GorgonColor.op_Implicit(System.Drawing.Color)~Gorgon.Graphics.GorgonColor")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Usage", "CA2225:Operator overloads have named alternates", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.Graphics.GorgonColor.op_Explicit(SharpDX.Vector3)~Gorgon.Graphics.GorgonColor")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Usage", "CA2225:Operator overloads have named alternates", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.Graphics.GorgonColor.op_Implicit(SharpDX.Vector4)~Gorgon.Graphics.GorgonColor")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Usage", "CA2225:Operator overloads have named alternates", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.Graphics.GorgonColor.op_Implicit(System.Int32)~Gorgon.Graphics.GorgonColor")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Usage", "CA2225:Operator overloads have named alternates", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.Native.GorgonReadOnlyPointer.op_Implicit(Gorgon.Native.GorgonReadOnlyPointer)~System.UInt64")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Usage", "CA2225:Operator overloads have named alternates", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.Math.GorgonRationalNumber.op_Implicit(Gorgon.Math.GorgonRationalNumber)~System.Decimal")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Usage", "CA2225:Operator overloads have named alternates", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.Math.GorgonRationalNumber.op_Explicit(Gorgon.Math.GorgonRationalNumber)~System.Double")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Usage", "CA2225:Operator overloads have named alternates", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.Math.GorgonRationalNumber.op_Explicit(Gorgon.Math.GorgonRationalNumber)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Usage", "CA2225:Operator overloads have named alternates", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.Math.GorgonRationalNumber.op_Explicit(Gorgon.Math.GorgonRationalNumber)~System.Single")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Usage", "CA2225:Operator overloads have named alternates", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.Math.GorgonRationalNumber.op_Implicit(System.Int32)~Gorgon.Math.GorgonRationalNumber")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Usage", "CA2225:Operator overloads have named alternates", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.Native.GorgonNativeBuffer`1.op_Explicit(Gorgon.Native.GorgonNativeBuffer`1)~Gorgon.Native.GorgonReadOnlyPointer")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Usage", "CA2225:Operator overloads have named alternates", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.Native.GorgonNativeBuffer`1.op_Explicit(Gorgon.Native.GorgonNativeBuffer`1)~System.Void*")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Usage", "CA2225:Operator overloads have named alternates", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.Native.GorgonReadOnlyPointer.op_Explicit(Gorgon.Native.GorgonReadOnlyPointer)~System.Void*")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Usage", "CA2225:Operator overloads have named alternates", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.Native.GorgonReadOnlyPointer.op_Implicit(Gorgon.Native.GorgonReadOnlyPointer)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Usage", "CA2225:Operator overloads have named alternates", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.Native.GorgonReadOnlyPointer.op_Implicit(Gorgon.Native.GorgonReadOnlyPointer)~System.Int64")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Usage", "CA2225:Operator overloads have named alternates", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.Native.GorgonReadOnlyPointer.op_Implicit(Gorgon.Native.GorgonReadOnlyPointer)~System.UInt32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.IO.GorgonChunkFileReader.IsReadable(System.IO.Stream)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1000:Do not declare static members on generic types", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.Native.GorgonNativeBuffer`1.Pin(`0[],System.Int32,System.Nullable{System.Int32})~Gorgon.Native.GorgonNativeBuffer`1")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1000:Do not declare static members on generic types", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.Native.GorgonNativeBuffer`1.PinAsByteBuffer(`0@)~Gorgon.Native.GorgonNativeBuffer{System.Byte}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2233:OperationsShouldNotOverflow", MessageId = "startPointIndex+1", Scope = "member", Target = "Gorgon.Math.GorgonCatmullRomSpline.#GetInterpolatedValue(System.Int32,System.Single)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE0046:Convert to conditional expression", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.IO.GorgonFileExtension.op_LessThanOrEqual(Gorgon.IO.GorgonFileExtension,Gorgon.IO.GorgonFileExtension)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE0046:Convert to conditional expression", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.IO.GorgonFileExtension.op_GreaterThanOrEqual(Gorgon.IO.GorgonFileExtension,Gorgon.IO.GorgonFileExtension)~System.Boolean")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE0046:Convert to conditional expression", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.Math.GorgonMathExtensions.Sign(System.Int32)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE0046:Convert to conditional expression", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.Math.GorgonMathExtensions.Sign(System.Int64)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE0046:Convert to conditional expression", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.Math.GorgonMathExtensions.Sign(System.SByte)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE0046:Convert to conditional expression", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.Math.GorgonMathExtensions.Sign(System.Int16)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE0046:Convert to conditional expression", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.Math.GorgonMathExtensions.Sign(System.Decimal)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE0046:Convert to conditional expression", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.Math.GorgonMathExtensions.Sign(System.Single)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE0046:Convert to conditional expression", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.Math.GorgonMathExtensions.Sign(System.Double)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE0046:Convert to conditional expression", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.PlugIns.GorgonMefPlugInService.GetPlugInNames(System.Reflection.AssemblyName)~System.Collections.Generic.IReadOnlyList{System.String}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE0046:Convert to conditional expression", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.PlugIns.GorgonMefPlugInService.GetPlugIns``1(System.Reflection.AssemblyName)~System.Collections.Generic.IReadOnlyList{``0}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE0046:Convert to conditional expression", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.Core.GorgonStringFormattingExtension.IndexOf(System.Text.StringBuilder,System.String,System.Int32,System.StringComparison)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "IDE0046:Convert to conditional expression", Justification = "<Pending>", Scope = "member", Target = "~M:Gorgon.Core.GorgonStringFormattingExtension.LastIndexOf(System.Text.StringBuilder,System.String,System.StringComparison)~System.Int32")]

