<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="GOR2DIO_ANIMTION_FILE_EXTENSION_DESC" xml:space="preserve">
    <value>Gorgon Animation</value>
  </data>
  <data name="GOR2DIO_ERR_CODEC_CANNOT_DECODE" xml:space="preserve">
    <value>The codec '{0}' is not capable of decoding data.</value>
  </data>
  <data name="GOR2DIO_ERR_CODEC_CANNOT_ENCODE" xml:space="preserve">
    <value>The codec '{0}' is not capable of encoding data.</value>
  </data>
  <data name="GOR2DIO_ERR_CODEC_NOT_IN_PLUGIN" xml:space="preserve">
    <value>The codec '{0}' was not found in the plug in.</value>
  </data>
  <data name="GOR2DIO_ERR_FILE_NOT_FOUND" xml:space="preserve">
    <value>The file '{0}' was not found on any of the physical or virtual file systems.</value>
  </data>
  <data name="GOR2DIO_ERR_INVALID_ANIM_HEADER" xml:space="preserve">
    <value>The header for the animation data is invalid.</value>
  </data>
  <data name="GOR2DIO_ERR_INVALID_HEADER" xml:space="preserve">
    <value>The header for the sprite data is invalid.</value>
  </data>
  <data name="GOR2DIO_ERR_JSON_NOT_ANIM" xml:space="preserve">
    <value>The JSON string does not contain animation data.</value>
  </data>
  <data name="GOR2DIO_ERR_JSON_NOT_SPRITE" xml:space="preserve">
    <value>The JSON string does not contain any sprite data.</value>
  </data>
  <data name="GOR2DIO_ERR_NOT_A_SPRITE" xml:space="preserve">
    <value>The file '{0}' is not a Gorgon Sprite.</value>
  </data>
  <data name="GOR2DIO_ERR_NO_ANIMATIONS_IN_FILE" xml:space="preserve">
    <value>There are no animations in the data.</value>
  </data>
  <data name="GOR2DIO_ERR_NO_SUITABLE_ANIM_CODEC_FOUND" xml:space="preserve">
    <value>No suitable animation codec was found for the file '{0}'.</value>
  </data>
  <data name="GOR2DIO_ERR_NO_SUITABLE_SPRITE_CODEC_FOUND" xml:space="preserve">
    <value>No suitable sprite codec was found for the file '{0}'.</value>
  </data>
  <data name="GOR2DIO_ERR_SPRITE_VERSION_MISMATCH" xml:space="preserve">
    <value>The sprite version is '{0}', but version '{1}' is expected.</value>
  </data>
  <data name="GOR2DIO_ERR_STREAM_IS_READ_ONLY" xml:space="preserve">
    <value>The stream is read only.</value>
  </data>
  <data name="GOR2DIO_ERR_STREAM_IS_WRITE_ONLY" xml:space="preserve">
    <value>The stream is write only.</value>
  </data>
  <data name="GOR2DIO_ERR_STREAM_UNSEEKABLE" xml:space="preserve">
    <value>The stream requires seek capability.</value>
  </data>
  <data name="GOR2DIO_ERR_VERSION_MISMATCH" xml:space="preserve">
    <value>This sprite data cannot be read.
Invalid version '{0}'.</value>
  </data>
  <data name="GOR2DIO_POLYSPRITE_FILE_EXTENSION_DESC" xml:space="preserve">
    <value>Gorgon Polygonal Sprite</value>
  </data>
  <data name="GOR2DIO_SPRITE_FILE_EXTENSION_DESC" xml:space="preserve">
    <value>Gorgon Sprite</value>
  </data>
  <data name="GOR2DIO_TOSTR_ANIMATION_CODEC_PLUGIN_DESC" xml:space="preserve">
    <value>Gorgon Animation Codec {0} ({1})</value>
  </data>
  <data name="GOR2DIO_TOSTR_SPRITE_CODEC_PLUGIN_DESC" xml:space="preserve">
    <value>Gorgon Sprite Codec {0} ({1})</value>
  </data>
  <data name="GOR2DIO_V1_ANIM_CODEC" xml:space="preserve">
    <value>Gorgon Sprite v1.x Animation Codec</value>
  </data>
  <data name="GOR2DIO_V1_ANIM_CODEC_DESCRIPTION" xml:space="preserve">
    <value>Gorgon binary sprite animation codec for version 1.0 - 1.2 of Gorgon.</value>
  </data>
  <data name="GOR2DIO_V1_CODEC" xml:space="preserve">
    <value>Gorgon Sprite v1.x Codec</value>
  </data>
  <data name="GOR2DIO_V1_CODEC_DESCRIPTION" xml:space="preserve">
    <value>Gorgon binary sprite codec for version 1.0 - 1.2 of Gorgon.</value>
  </data>
  <data name="GOR2DIO_V2_CODEC" xml:space="preserve">
    <value>Gorgon Sprite v2 Codec</value>
  </data>
  <data name="GOR2DIO_V2_CODEC_DESCRIPTION" xml:space="preserve">
    <value>Gorgon sprite codec for version 2.0 of Gorgon.</value>
  </data>
  <data name="GOR2DIO_V3_1_ANIM_BIN_CODEC" xml:space="preserve">
    <value>Gorgon Animation v3.1 Binary Codec</value>
  </data>
  <data name="GOR2DIO_V3_1_ANIM_BIN_CODEC_DESCRIPTION" xml:space="preserve">
    <value>Gorgon v3.1 animation codec for reading and writing animations as binary data.</value>
  </data>
  <data name="GOR2DIO_V3_1_ANIM_JSON_CODEC" xml:space="preserve">
    <value>Gorgon Animation v3.1 JSON Codec</value>
  </data>
  <data name="GOR2DIO_V3_1_ANIM_JSON_CODEC_DESCRIPTION" xml:space="preserve">
    <value>Gorgon v3.1 animation codec for reading and writing animations as JSON data.</value>
  </data>
  <data name="GOR2DIO_V3_ANIM_BIN_CODEC" xml:space="preserve">
    <value>Gorgon Animation v3 Binary Codec</value>
  </data>
  <data name="GOR2DIO_V3_ANIM_BIN_CODEC_DESCRIPTION" xml:space="preserve">
    <value>Gorgon v3 animation codec for reading and writing animations as binary data.</value>
  </data>
  <data name="GOR2DIO_V3_ANIM_JSON_CODEC" xml:space="preserve">
    <value>Gorgon Animation v3 JSON Codec</value>
  </data>
  <data name="GOR2DIO_V3_ANIM_JSON_CODEC_DESCRIPTION" xml:space="preserve">
    <value>Gorgon v3 animation codec for reading and writing animations as JSON data.</value>
  </data>
  <data name="GOR2DIO_V3_BIN_CODEC" xml:space="preserve">
    <value>Gorgon Sprite v3 Binary Codec</value>
  </data>
  <data name="GOR2DIO_V3_BIN_CODEC_DESCRIPTION" xml:space="preserve">
    <value>Gorgon v3 sprite codec for reading and writing sprites as binary data.</value>
  </data>
  <data name="GOR2DIO_V3_JSON_CODEC" xml:space="preserve">
    <value>Gorgon Sprite v3 JSON Codec</value>
  </data>
  <data name="GOR2DIO_V3_JSON_CODEC_DESCRIPTION" xml:space="preserve">
    <value>Gorgon v3 sprite codec for reading and writing sprites as JSON data.</value>
  </data>
  <data name="GOR2DIO_V3_POLYSPRITE_BIN_CODEC" xml:space="preserve">
    <value>Gorgon Polygonal Sprite v3 Binary Codec</value>
  </data>
  <data name="GOR2DIO_V3_POLYSPRITE_BIN_CODEC_DESCRIPTION" xml:space="preserve">
    <value>Gorgon v3 sprite codec for reading and writing polygonal sprites as binary data.</value>
  </data>
  <data name="GOR2DIO_V3_POLYSPRITE_JSON_CODEC" xml:space="preserve">
    <value>Gorgon Polygonal Sprite v3 JSON Codec</value>
  </data>
  <data name="GOR2DIO_V3_POLYSPRITE_JSON_CODEC_DESCRIPTION" xml:space="preserve">
    <value>Gorgon v3 sprite codec for reading and writing polygonal sprites as JSON data.</value>
  </data>
</root>